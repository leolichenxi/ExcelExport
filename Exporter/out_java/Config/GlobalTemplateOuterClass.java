// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/GlobalTemplate.proto

package Config;

public final class GlobalTemplateOuterClass {
  private GlobalTemplateOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GlobalTemplateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Config.GlobalTemplate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 名字字数限制
     * </pre>
     *
     * <code>int32 NameLimit = 1;</code>
     * @return The nameLimit.
     */
    int getNameLimit();

    /**
     * <pre>
     * 玩家进入游戏时初始获得物品掉落组
     * </pre>
     *
     * <code>int32 DefaultDropGroup = 2;</code>
     * @return The defaultDropGroup.
     */
    int getDefaultDropGroup();

    /**
     * <pre>
     * 改名消耗（单位：宝石）
     * </pre>
     *
     * <code>int32 ChangeNameCost = 3;</code>
     * @return The changeNameCost.
     */
    int getChangeNameCost();

    /**
     * <pre>
     * 每恢复一点体力所需时间（单位：分钟）
     * </pre>
     *
     * <code>int32 PlayeEnergyRecoverTime = 4;</code>
     * @return The playeEnergyRecoverTime.
     */
    int getPlayeEnergyRecoverTime();

    /**
     * <pre>
     * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
     */
    java.util.List<Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_> 
        getFieldHeroNumLimitsList();
    /**
     * <pre>
     * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
     */
    Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ getFieldHeroNumLimits(int index);
    /**
     * <pre>
     * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
     */
    int getFieldHeroNumLimitsCount();
    /**
     * <pre>
     * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
     */
    java.util.List<? extends Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_OrBuilder> 
        getFieldHeroNumLimitsOrBuilderList();
    /**
     * <pre>
     * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
     */
    Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_OrBuilder getFieldHeroNumLimitsOrBuilder(
        int index);

    /**
     * <pre>
     * 阵容名字字数限制
     * </pre>
     *
     * <code>int32 FormationNameLimit = 6;</code>
     * @return The formationNameLimit.
     */
    int getFormationNameLimit();

    /**
     * <pre>
     * 同职业的魔物上阵不能超过x个
     * </pre>
     *
     * <code>int32 FormationCareerLimit = 7;</code>
     * @return The formationCareerLimit.
     */
    int getFormationCareerLimit();

    /**
     * <pre>
     * 队伍1-队伍3默认初始英雄及站位
     * </pre>
     *
     * <code>repeated int32 InitialFormaitonHeros = 8;</code>
     * @return A list containing the initialFormaitonHeros.
     */
    java.util.List<java.lang.Integer> getInitialFormaitonHerosList();
    /**
     * <pre>
     * 队伍1-队伍3默认初始英雄及站位
     * </pre>
     *
     * <code>repeated int32 InitialFormaitonHeros = 8;</code>
     * @return The count of initialFormaitonHeros.
     */
    int getInitialFormaitonHerosCount();
    /**
     * <pre>
     * 队伍1-队伍3默认初始英雄及站位
     * </pre>
     *
     * <code>repeated int32 InitialFormaitonHeros = 8;</code>
     * @param index The index of the element to return.
     * @return The initialFormaitonHeros at the given index.
     */
    int getInitialFormaitonHeros(int index);

    /**
     * <pre>
     * 玩家可设置X个队伍
     * </pre>
     *
     * <code>int32 FormationCount = 9;</code>
     * @return The formationCount.
     */
    int getFormationCount();

    /**
     * <pre>
     * 英雄普通奥义数量上限
     * </pre>
     *
     * <code>bool HeroNormalTalentCountLimit = 10;</code>
     * @return The heroNormalTalentCountLimit.
     */
    boolean getHeroNormalTalentCountLimit();

    /**
     * <pre>
     * 英雄生命属性权重值
     * </pre>
     *
     * <code>bool HeroHealthCorrectionBase = 11;</code>
     * @return The heroHealthCorrectionBase.
     */
    boolean getHeroHealthCorrectionBase();

    /**
     * <pre>
     * 英雄生命属性权重系数
     * </pre>
     *
     * <code>double HeroHealthCorrectionCoe = 12;</code>
     * @return The heroHealthCorrectionCoe.
     */
    double getHeroHealthCorrectionCoe();

    /**
     * <pre>
     * 英雄攻击属性权重值
     * </pre>
     *
     * <code>int32 HeroAttackCorrectionBase = 13;</code>
     * @return The heroAttackCorrectionBase.
     */
    int getHeroAttackCorrectionBase();

    /**
     * <pre>
     * 英雄攻击属性权重系数
     * </pre>
     *
     * <code>double HeroAttackCorrectionCoe = 14;</code>
     * @return The heroAttackCorrectionCoe.
     */
    double getHeroAttackCorrectionCoe();

    /**
     * <pre>
     * 英雄闪避属性权重值
     * </pre>
     *
     * <code>int32 HeroDodgeCorrectionBase = 15;</code>
     * @return The heroDodgeCorrectionBase.
     */
    int getHeroDodgeCorrectionBase();

    /**
     * <pre>
     * 英雄闪避属性权重系数
     * </pre>
     *
     * <code>double HeroDodgeCorrectionCoe = 16;</code>
     * @return The heroDodgeCorrectionCoe.
     */
    double getHeroDodgeCorrectionCoe();

    /**
     * <pre>
     * 英雄暴击属性权重值
     * </pre>
     *
     * <code>int32 HeroCritCorrectionBase = 17;</code>
     * @return The heroCritCorrectionBase.
     */
    int getHeroCritCorrectionBase();

    /**
     * <pre>
     * 英雄暴击属性权重系数
     * </pre>
     *
     * <code>double HeroCritCorrectionCoe = 18;</code>
     * @return The heroCritCorrectionCoe.
     */
    double getHeroCritCorrectionCoe();

    /**
     * <pre>
     * 英雄暴击属性权重值
     * </pre>
     *
     * <code>int32 HeroBlckCorrectionBase = 19;</code>
     * @return The heroBlckCorrectionBase.
     */
    int getHeroBlckCorrectionBase();

    /**
     * <pre>
     * 英雄暴击属性权重系数
     * </pre>
     *
     * <code>double HeroBlckCorrectionCoe = 20;</code>
     * @return The heroBlckCorrectionCoe.
     */
    double getHeroBlckCorrectionCoe();

    /**
     * <pre>
     * 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
     * </pre>
     *
     * <code>.Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;</code>
     * @return Whether the heroAttributeEvaluation field is set.
     */
    boolean hasHeroAttributeEvaluation();
    /**
     * <pre>
     * 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
     * </pre>
     *
     * <code>.Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;</code>
     * @return The heroAttributeEvaluation.
     */
    Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ getHeroAttributeEvaluation();
    /**
     * <pre>
     * 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
     * </pre>
     *
     * <code>.Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;</code>
     */
    Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_OrBuilder getHeroAttributeEvaluationOrBuilder();

    /**
     * <pre>
     * 英雄不同星级对应的等级上限，数组第一项为1星对应的等级上限
     * </pre>
     *
     * <code>repeated int32 HeroLevelLimits = 22;</code>
     * @return A list containing the heroLevelLimits.
     */
    java.util.List<java.lang.Integer> getHeroLevelLimitsList();
    /**
     * <pre>
     * 英雄不同星级对应的等级上限，数组第一项为1星对应的等级上限
     * </pre>
     *
     * <code>repeated int32 HeroLevelLimits = 22;</code>
     * @return The count of heroLevelLimits.
     */
    int getHeroLevelLimitsCount();
    /**
     * <pre>
     * 英雄不同星级对应的等级上限，数组第一项为1星对应的等级上限
     * </pre>
     *
     * <code>repeated int32 HeroLevelLimits = 22;</code>
     * @param index The index of the element to return.
     * @return The heroLevelLimits at the given index.
     */
    int getHeroLevelLimits(int index);

    /**
     * <pre>
     * 英雄星级上限
     * </pre>
     *
     * <code>int32 HeroStarLimit = 23;</code>
     * @return The heroStarLimit.
     */
    int getHeroStarLimit();

    /**
     * <pre>
     * 英雄不同星级升星所需消耗的同星副卡数量，数组第一项为1星升2星时所需数量
     * </pre>
     *
     * <code>repeated int32 HeroStarUpNeedCards = 24;</code>
     * @return A list containing the heroStarUpNeedCards.
     */
    java.util.List<java.lang.Integer> getHeroStarUpNeedCardsList();
    /**
     * <pre>
     * 英雄不同星级升星所需消耗的同星副卡数量，数组第一项为1星升2星时所需数量
     * </pre>
     *
     * <code>repeated int32 HeroStarUpNeedCards = 24;</code>
     * @return The count of heroStarUpNeedCards.
     */
    int getHeroStarUpNeedCardsCount();
    /**
     * <pre>
     * 英雄不同星级升星所需消耗的同星副卡数量，数组第一项为1星升2星时所需数量
     * </pre>
     *
     * <code>repeated int32 HeroStarUpNeedCards = 24;</code>
     * @param index The index of the element to return.
     * @return The heroStarUpNeedCards at the given index.
     */
    int getHeroStarUpNeedCards(int index);

    /**
     * <pre>
     * 英雄不同星级升星所需消耗的金币数量，数组第一项为1星升2星时所需数量
     * </pre>
     *
     * <code>repeated int32 HeroStarUpNeedGolds = 25;</code>
     * @return A list containing the heroStarUpNeedGolds.
     */
    java.util.List<java.lang.Integer> getHeroStarUpNeedGoldsList();
    /**
     * <pre>
     * 英雄不同星级升星所需消耗的金币数量，数组第一项为1星升2星时所需数量
     * </pre>
     *
     * <code>repeated int32 HeroStarUpNeedGolds = 25;</code>
     * @return The count of heroStarUpNeedGolds.
     */
    int getHeroStarUpNeedGoldsCount();
    /**
     * <pre>
     * 英雄不同星级升星所需消耗的金币数量，数组第一项为1星升2星时所需数量
     * </pre>
     *
     * <code>repeated int32 HeroStarUpNeedGolds = 25;</code>
     * @param index The index of the element to return.
     * @return The heroStarUpNeedGolds at the given index.
     */
    int getHeroStarUpNeedGolds(int index);

    /**
     * <pre>
     * 当英雄升到指定星级时，可获得1个奥义，从英雄表里的奥义库中随机1个(新增字段！！！）
     * </pre>
     *
     * <code>repeated int32 HeroStarUpGainNormalTalents = 26;</code>
     * @return A list containing the heroStarUpGainNormalTalents.
     */
    java.util.List<java.lang.Integer> getHeroStarUpGainNormalTalentsList();
    /**
     * <pre>
     * 当英雄升到指定星级时，可获得1个奥义，从英雄表里的奥义库中随机1个(新增字段！！！）
     * </pre>
     *
     * <code>repeated int32 HeroStarUpGainNormalTalents = 26;</code>
     * @return The count of heroStarUpGainNormalTalents.
     */
    int getHeroStarUpGainNormalTalentsCount();
    /**
     * <pre>
     * 当英雄升到指定星级时，可获得1个奥义，从英雄表里的奥义库中随机1个(新增字段！！！）
     * </pre>
     *
     * <code>repeated int32 HeroStarUpGainNormalTalents = 26;</code>
     * @param index The index of the element to return.
     * @return The heroStarUpGainNormalTalents at the given index.
     */
    int getHeroStarUpGainNormalTalents(int index);

    /**
     * <pre>
     * 英雄不同星级取消升星时返还的副卡数量，数组第一项为1星升2星取消时返还的数量（删除了放弃升星结果的操作，该字段删除）
     * </pre>
     *
     * <code>repeated int32 HeroStarUpCancelGiveCards = 27;</code>
     * @return A list containing the heroStarUpCancelGiveCards.
     */
    java.util.List<java.lang.Integer> getHeroStarUpCancelGiveCardsList();
    /**
     * <pre>
     * 英雄不同星级取消升星时返还的副卡数量，数组第一项为1星升2星取消时返还的数量（删除了放弃升星结果的操作，该字段删除）
     * </pre>
     *
     * <code>repeated int32 HeroStarUpCancelGiveCards = 27;</code>
     * @return The count of heroStarUpCancelGiveCards.
     */
    int getHeroStarUpCancelGiveCardsCount();
    /**
     * <pre>
     * 英雄不同星级取消升星时返还的副卡数量，数组第一项为1星升2星取消时返还的数量（删除了放弃升星结果的操作，该字段删除）
     * </pre>
     *
     * <code>repeated int32 HeroStarUpCancelGiveCards = 27;</code>
     * @param index The index of the element to return.
     * @return The heroStarUpCancelGiveCards at the given index.
     */
    int getHeroStarUpCancelGiveCards(int index);

    /**
     * <pre>
     * 英雄取消升星时消耗的金币比例（删除了放弃升星结果的操作，该字段删除）
     * </pre>
     *
     * <code>double HeroStarUpCancelGiveGold = 28;</code>
     * @return The heroStarUpCancelGiveGold.
     */
    double getHeroStarUpCancelGiveGold();

    /**
     * <pre>
     * 英雄不同星级学习时所需消耗的金币数量，数组第一项为1星所需数量
     * </pre>
     *
     * <code>repeated int32 HeroLearningNeedGolds = 29;</code>
     * @return A list containing the heroLearningNeedGolds.
     */
    java.util.List<java.lang.Integer> getHeroLearningNeedGoldsList();
    /**
     * <pre>
     * 英雄不同星级学习时所需消耗的金币数量，数组第一项为1星所需数量
     * </pre>
     *
     * <code>repeated int32 HeroLearningNeedGolds = 29;</code>
     * @return The count of heroLearningNeedGolds.
     */
    int getHeroLearningNeedGoldsCount();
    /**
     * <pre>
     * 英雄不同星级学习时所需消耗的金币数量，数组第一项为1星所需数量
     * </pre>
     *
     * <code>repeated int32 HeroLearningNeedGolds = 29;</code>
     * @param index The index of the element to return.
     * @return The heroLearningNeedGolds at the given index.
     */
    int getHeroLearningNeedGolds(int index);

    /**
     * <pre>
     * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
     */
    java.util.List<Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_> 
        getHeroClassNeedCardsList();
    /**
     * <pre>
     * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
     */
    Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ getHeroClassNeedCards(int index);
    /**
     * <pre>
     * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
     */
    int getHeroClassNeedCardsCount();
    /**
     * <pre>
     * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
     */
    java.util.List<? extends Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_OrBuilder> 
        getHeroClassNeedCardsOrBuilderList();
    /**
     * <pre>
     * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
     */
    Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_OrBuilder getHeroClassNeedCardsOrBuilder(
        int index);

    /**
     * <pre>
     * 英雄特训返还英雄经验比例
     * </pre>
     *
     * <code>double HeroSkillTrainingGiveExpCoe = 31;</code>
     * @return The heroSkillTrainingGiveExpCoe.
     */
    double getHeroSkillTrainingGiveExpCoe();

    /**
     * <pre>
     * 金币免费召唤冷却时间，单位：分钟
     * </pre>
     *
     * <code>int32 NormalLotteryFreeTime = 32;</code>
     * @return The normalLotteryFreeTime.
     */
    int getNormalLotteryFreeTime();

    /**
     * <pre>
     * 氪金免费召唤冷却时间，单位：分钟
     * </pre>
     *
     * <code>int32 SpecialLotteryFreeTime = 33;</code>
     * @return The specialLotteryFreeTime.
     */
    int getSpecialLotteryFreeTime();

    /**
     * <pre>
     * 单张抽卡券消耗的钻石
     * </pre>
     *
     * <code>int32 LotteryTicketDiamondCost = 34;</code>
     * @return The lotteryTicketDiamondCost.
     */
    int getLotteryTicketDiamondCost();

    /**
     * <pre>
     * 公会图标（最多配置12个）
     * </pre>
     *
     * <code>repeated string GuildIcons = 35;</code>
     * @return A list containing the guildIcons.
     */
    java.util.List<java.lang.String>
        getGuildIconsList();
    /**
     * <pre>
     * 公会图标（最多配置12个）
     * </pre>
     *
     * <code>repeated string GuildIcons = 35;</code>
     * @return The count of guildIcons.
     */
    int getGuildIconsCount();
    /**
     * <pre>
     * 公会图标（最多配置12个）
     * </pre>
     *
     * <code>repeated string GuildIcons = 35;</code>
     * @param index The index of the element to return.
     * @return The guildIcons at the given index.
     */
    java.lang.String getGuildIcons(int index);
    /**
     * <pre>
     * 公会图标（最多配置12个）
     * </pre>
     *
     * <code>repeated string GuildIcons = 35;</code>
     * @param index The index of the value to return.
     * @return The bytes of the guildIcons at the given index.
     */
    com.google.protobuf.ByteString
        getGuildIconsBytes(int index);

    /**
     * <pre>
     * 公会援助请求次数（每日00：00刷新）
     * </pre>
     *
     * <code>int32 GuildSeekHelpNum = 36;</code>
     * @return The guildSeekHelpNum.
     */
    int getGuildSeekHelpNum();

    /**
     * <pre>
     * 酒馆任务给工会增加活跃度
     * </pre>
     *
     * <code>int32 TavernTaskBrisk = 37;</code>
     * @return The tavernTaskBrisk.
     */
    int getTavernTaskBrisk();

    /**
     * <pre>
     * 工会副本每天每个委托可挑战次数
     * </pre>
     *
     * <code>int32 GveMapBattleCount = 38;</code>
     * @return The gveMapBattleCount.
     */
    int getGveMapBattleCount();

    /**
     * <pre>
     * 公会副本玩家牌库地、水、火、风各元素卡牌数量（总和四元素相加总数）
     * </pre>
     *
     * <code>repeated int32 GveDuplicateCardElementCounts = 39;</code>
     * @return A list containing the gveDuplicateCardElementCounts.
     */
    java.util.List<java.lang.Integer> getGveDuplicateCardElementCountsList();
    /**
     * <pre>
     * 公会副本玩家牌库地、水、火、风各元素卡牌数量（总和四元素相加总数）
     * </pre>
     *
     * <code>repeated int32 GveDuplicateCardElementCounts = 39;</code>
     * @return The count of gveDuplicateCardElementCounts.
     */
    int getGveDuplicateCardElementCountsCount();
    /**
     * <pre>
     * 公会副本玩家牌库地、水、火、风各元素卡牌数量（总和四元素相加总数）
     * </pre>
     *
     * <code>repeated int32 GveDuplicateCardElementCounts = 39;</code>
     * @param index The index of the element to return.
     * @return The gveDuplicateCardElementCounts at the given index.
     */
    int getGveDuplicateCardElementCounts(int index);

    /**
     * <pre>
     * 公会副本玩家每回合补充手牌的最大数量
     * </pre>
     *
     * <code>int32 GveDuplicateHandCard = 40;</code>
     * @return The gveDuplicateHandCard.
     */
    int getGveDuplicateHandCard();

    /**
     * <pre>
     * 公会副本回合准备时间
     * </pre>
     *
     * <code>int32 GveDuplicateRoundTime = 41;</code>
     * @return The gveDuplicateRoundTime.
     */
    int getGveDuplicateRoundTime();

    /**
     * <pre>
     * 公会副本胜利移除卡牌数量
     * </pre>
     *
     * <code>int32 GveDuplicateWinDeleteCardCount = 42;</code>
     * @return The gveDuplicateWinDeleteCardCount.
     */
    int getGveDuplicateWinDeleteCardCount();

    /**
     * <pre>
     * 公会副本失败移除卡牌数量
     * </pre>
     *
     * <code>int32 GveDuplicateLoseDeleteCardCount = 43;</code>
     * @return The gveDuplicateLoseDeleteCardCount.
     */
    int getGveDuplicateLoseDeleteCardCount();

    /**
     * <pre>
     * 公会副本结束判定任意一方移除卡排数量大于等于该值
     * </pre>
     *
     * <code>int32 GveDuplicateOverCardCount = 44;</code>
     * @return The gveDuplicateOverCardCount.
     */
    int getGveDuplicateOverCardCount();

    /**
     * <pre>
     * 公会副本每张牌扣除BOSS血量系数
     * </pre>
     *
     * <code>int32 GveDuplicateBossLossHpCount = 45;</code>
     * @return The gveDuplicateBossLossHpCount.
     */
    int getGveDuplicateBossLossHpCount();

    /**
     * <pre>
     * 公会副本对BOSS每造成1点伤害获得金币系数
     * </pre>
     *
     * <code>int32 GveDuplicateRewardGold = 46;</code>
     * @return The gveDuplicateRewardGold.
     */
    int getGveDuplicateRewardGold();
  }
  /**
   * Protobuf type {@code Config.GlobalTemplate}
   */
  public static final class GlobalTemplate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Config.GlobalTemplate)
      GlobalTemplateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GlobalTemplate.newBuilder() to construct.
    private GlobalTemplate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GlobalTemplate() {
      fieldHeroNumLimits_ = java.util.Collections.emptyList();
      initialFormaitonHeros_ = emptyIntList();
      heroLevelLimits_ = emptyIntList();
      heroStarUpNeedCards_ = emptyIntList();
      heroStarUpNeedGolds_ = emptyIntList();
      heroStarUpGainNormalTalents_ = emptyIntList();
      heroStarUpCancelGiveCards_ = emptyIntList();
      heroLearningNeedGolds_ = emptyIntList();
      heroClassNeedCards_ = java.util.Collections.emptyList();
      guildIcons_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      gveDuplicateCardElementCounts_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GlobalTemplate();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GlobalTemplate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              nameLimit_ = input.readInt32();
              break;
            }
            case 16: {

              defaultDropGroup_ = input.readInt32();
              break;
            }
            case 24: {

              changeNameCost_ = input.readInt32();
              break;
            }
            case 32: {

              playeEnergyRecoverTime_ = input.readInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                fieldHeroNumLimits_ = new java.util.ArrayList<Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_>();
                mutable_bitField0_ |= 0x00000001;
              }
              fieldHeroNumLimits_.add(
                  input.readMessage(Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.parser(), extensionRegistry));
              break;
            }
            case 48: {

              formationNameLimit_ = input.readInt32();
              break;
            }
            case 56: {

              formationCareerLimit_ = input.readInt32();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                initialFormaitonHeros_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              initialFormaitonHeros_.addInt(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                initialFormaitonHeros_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                initialFormaitonHeros_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {

              formationCount_ = input.readInt32();
              break;
            }
            case 80: {

              heroNormalTalentCountLimit_ = input.readBool();
              break;
            }
            case 88: {

              heroHealthCorrectionBase_ = input.readBool();
              break;
            }
            case 97: {

              heroHealthCorrectionCoe_ = input.readDouble();
              break;
            }
            case 104: {

              heroAttackCorrectionBase_ = input.readInt32();
              break;
            }
            case 113: {

              heroAttackCorrectionCoe_ = input.readDouble();
              break;
            }
            case 120: {

              heroDodgeCorrectionBase_ = input.readInt32();
              break;
            }
            case 129: {

              heroDodgeCorrectionCoe_ = input.readDouble();
              break;
            }
            case 136: {

              heroCritCorrectionBase_ = input.readInt32();
              break;
            }
            case 145: {

              heroCritCorrectionCoe_ = input.readDouble();
              break;
            }
            case 152: {

              heroBlckCorrectionBase_ = input.readInt32();
              break;
            }
            case 161: {

              heroBlckCorrectionCoe_ = input.readDouble();
              break;
            }
            case 170: {
              Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.Builder subBuilder = null;
              if (heroAttributeEvaluation_ != null) {
                subBuilder = heroAttributeEvaluation_.toBuilder();
              }
              heroAttributeEvaluation_ = input.readMessage(Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(heroAttributeEvaluation_);
                heroAttributeEvaluation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 176: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                heroLevelLimits_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              heroLevelLimits_.addInt(input.readInt32());
              break;
            }
            case 178: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                heroLevelLimits_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                heroLevelLimits_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 184: {

              heroStarLimit_ = input.readInt32();
              break;
            }
            case 192: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                heroStarUpNeedCards_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              heroStarUpNeedCards_.addInt(input.readInt32());
              break;
            }
            case 194: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                heroStarUpNeedCards_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                heroStarUpNeedCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 200: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                heroStarUpNeedGolds_ = newIntList();
                mutable_bitField0_ |= 0x00000010;
              }
              heroStarUpNeedGolds_.addInt(input.readInt32());
              break;
            }
            case 202: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                heroStarUpNeedGolds_ = newIntList();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                heroStarUpNeedGolds_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 208: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                heroStarUpGainNormalTalents_ = newIntList();
                mutable_bitField0_ |= 0x00000020;
              }
              heroStarUpGainNormalTalents_.addInt(input.readInt32());
              break;
            }
            case 210: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) != 0) && input.getBytesUntilLimit() > 0) {
                heroStarUpGainNormalTalents_ = newIntList();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                heroStarUpGainNormalTalents_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 216: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                heroStarUpCancelGiveCards_ = newIntList();
                mutable_bitField0_ |= 0x00000040;
              }
              heroStarUpCancelGiveCards_.addInt(input.readInt32());
              break;
            }
            case 218: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) != 0) && input.getBytesUntilLimit() > 0) {
                heroStarUpCancelGiveCards_ = newIntList();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                heroStarUpCancelGiveCards_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 225: {

              heroStarUpCancelGiveGold_ = input.readDouble();
              break;
            }
            case 232: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                heroLearningNeedGolds_ = newIntList();
                mutable_bitField0_ |= 0x00000080;
              }
              heroLearningNeedGolds_.addInt(input.readInt32());
              break;
            }
            case 234: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) != 0) && input.getBytesUntilLimit() > 0) {
                heroLearningNeedGolds_ = newIntList();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                heroLearningNeedGolds_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 242: {
              if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                heroClassNeedCards_ = new java.util.ArrayList<Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_>();
                mutable_bitField0_ |= 0x00000100;
              }
              heroClassNeedCards_.add(
                  input.readMessage(Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.parser(), extensionRegistry));
              break;
            }
            case 249: {

              heroSkillTrainingGiveExpCoe_ = input.readDouble();
              break;
            }
            case 256: {

              normalLotteryFreeTime_ = input.readInt32();
              break;
            }
            case 264: {

              specialLotteryFreeTime_ = input.readInt32();
              break;
            }
            case 272: {

              lotteryTicketDiamondCost_ = input.readInt32();
              break;
            }
            case 282: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                guildIcons_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000200;
              }
              guildIcons_.add(s);
              break;
            }
            case 288: {

              guildSeekHelpNum_ = input.readInt32();
              break;
            }
            case 296: {

              tavernTaskBrisk_ = input.readInt32();
              break;
            }
            case 304: {

              gveMapBattleCount_ = input.readInt32();
              break;
            }
            case 312: {
              if (!((mutable_bitField0_ & 0x00000400) != 0)) {
                gveDuplicateCardElementCounts_ = newIntList();
                mutable_bitField0_ |= 0x00000400;
              }
              gveDuplicateCardElementCounts_.addInt(input.readInt32());
              break;
            }
            case 314: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) != 0) && input.getBytesUntilLimit() > 0) {
                gveDuplicateCardElementCounts_ = newIntList();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                gveDuplicateCardElementCounts_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 320: {

              gveDuplicateHandCard_ = input.readInt32();
              break;
            }
            case 328: {

              gveDuplicateRoundTime_ = input.readInt32();
              break;
            }
            case 336: {

              gveDuplicateWinDeleteCardCount_ = input.readInt32();
              break;
            }
            case 344: {

              gveDuplicateLoseDeleteCardCount_ = input.readInt32();
              break;
            }
            case 352: {

              gveDuplicateOverCardCount_ = input.readInt32();
              break;
            }
            case 360: {

              gveDuplicateBossLossHpCount_ = input.readInt32();
              break;
            }
            case 368: {

              gveDuplicateRewardGold_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          fieldHeroNumLimits_ = java.util.Collections.unmodifiableList(fieldHeroNumLimits_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          initialFormaitonHeros_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          heroLevelLimits_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          heroStarUpNeedCards_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          heroStarUpNeedGolds_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          heroStarUpGainNormalTalents_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          heroStarUpCancelGiveCards_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          heroLearningNeedGolds_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000100) != 0)) {
          heroClassNeedCards_ = java.util.Collections.unmodifiableList(heroClassNeedCards_);
        }
        if (((mutable_bitField0_ & 0x00000200) != 0)) {
          guildIcons_ = guildIcons_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000400) != 0)) {
          gveDuplicateCardElementCounts_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Config.GlobalTemplateOuterClass.GlobalTemplate.class, Config.GlobalTemplateOuterClass.GlobalTemplate.Builder.class);
    }

    public interface Fieldheronumlimit_OrBuilder extends
        // @@protoc_insertion_point(interface_extends:Config.GlobalTemplate.Fieldheronumlimit_)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Level
       * </pre>
       *
       * <code>int32 Level = 1;</code>
       * @return The level.
       */
      int getLevel();

      /**
       * <pre>
       * Num
       * </pre>
       *
       * <code>int32 Num = 2;</code>
       * @return The num.
       */
      int getNum();
    }
    /**
     * Protobuf type {@code Config.GlobalTemplate.Fieldheronumlimit_}
     */
    public static final class Fieldheronumlimit_ extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Config.GlobalTemplate.Fieldheronumlimit_)
        Fieldheronumlimit_OrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Fieldheronumlimit_.newBuilder() to construct.
      private Fieldheronumlimit_(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Fieldheronumlimit_() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Fieldheronumlimit_();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Fieldheronumlimit_(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                level_ = input.readInt32();
                break;
              }
              case 16: {

                num_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_Fieldheronumlimit__descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_Fieldheronumlimit__fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.class, Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.Builder.class);
      }

      public static final int LEVEL_FIELD_NUMBER = 1;
      private int level_;
      /**
       * <pre>
       * Level
       * </pre>
       *
       * <code>int32 Level = 1;</code>
       * @return The level.
       */
      @java.lang.Override
      public int getLevel() {
        return level_;
      }

      public static final int NUM_FIELD_NUMBER = 2;
      private int num_;
      /**
       * <pre>
       * Num
       * </pre>
       *
       * <code>int32 Num = 2;</code>
       * @return The num.
       */
      @java.lang.Override
      public int getNum() {
        return num_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (level_ != 0) {
          output.writeInt32(1, level_);
        }
        if (num_ != 0) {
          output.writeInt32(2, num_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (level_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, level_);
        }
        if (num_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, num_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_)) {
          return super.equals(obj);
        }
        Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ other = (Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_) obj;

        if (getLevel()
            != other.getLevel()) return false;
        if (getNum()
            != other.getNum()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getLevel();
        hash = (37 * hash) + NUM_FIELD_NUMBER;
        hash = (53 * hash) + getNum();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Config.GlobalTemplate.Fieldheronumlimit_}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Config.GlobalTemplate.Fieldheronumlimit_)
          Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_OrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_Fieldheronumlimit__descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_Fieldheronumlimit__fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.class, Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.Builder.class);
        }

        // Construct using Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          level_ = 0;

          num_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_Fieldheronumlimit__descriptor;
        }

        @java.lang.Override
        public Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ getDefaultInstanceForType() {
          return Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.getDefaultInstance();
        }

        @java.lang.Override
        public Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ build() {
          Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ buildPartial() {
          Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ result = new Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_(this);
          result.level_ = level_;
          result.num_ = num_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_) {
            return mergeFrom((Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ other) {
          if (other == Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.getDefaultInstance()) return this;
          if (other.getLevel() != 0) {
            setLevel(other.getLevel());
          }
          if (other.getNum() != 0) {
            setNum(other.getNum());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int level_ ;
        /**
         * <pre>
         * Level
         * </pre>
         *
         * <code>int32 Level = 1;</code>
         * @return The level.
         */
        @java.lang.Override
        public int getLevel() {
          return level_;
        }
        /**
         * <pre>
         * Level
         * </pre>
         *
         * <code>int32 Level = 1;</code>
         * @param value The level to set.
         * @return This builder for chaining.
         */
        public Builder setLevel(int value) {
          
          level_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Level
         * </pre>
         *
         * <code>int32 Level = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearLevel() {
          
          level_ = 0;
          onChanged();
          return this;
        }

        private int num_ ;
        /**
         * <pre>
         * Num
         * </pre>
         *
         * <code>int32 Num = 2;</code>
         * @return The num.
         */
        @java.lang.Override
        public int getNum() {
          return num_;
        }
        /**
         * <pre>
         * Num
         * </pre>
         *
         * <code>int32 Num = 2;</code>
         * @param value The num to set.
         * @return This builder for chaining.
         */
        public Builder setNum(int value) {
          
          num_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Num
         * </pre>
         *
         * <code>int32 Num = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearNum() {
          
          num_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Config.GlobalTemplate.Fieldheronumlimit_)
      }

      // @@protoc_insertion_point(class_scope:Config.GlobalTemplate.Fieldheronumlimit_)
      private static final Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_();
      }

      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Fieldheronumlimit_>
          PARSER = new com.google.protobuf.AbstractParser<Fieldheronumlimit_>() {
        @java.lang.Override
        public Fieldheronumlimit_ parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Fieldheronumlimit_(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Fieldheronumlimit_> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Fieldheronumlimit_> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface Heroattributeevaluation_OrBuilder extends
        // @@protoc_insertion_point(interface_extends:Config.GlobalTemplate.Heroattributeevaluation_)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Num1
       * </pre>
       *
       * <code>int32 Num1 = 1;</code>
       * @return The num1.
       */
      int getNum1();

      /**
       * <pre>
       * Num2
       * </pre>
       *
       * <code>int32 Num2 = 2;</code>
       * @return The num2.
       */
      int getNum2();

      /**
       * <pre>
       * Num3
       * </pre>
       *
       * <code>int32 Num3 = 3;</code>
       * @return The num3.
       */
      int getNum3();
    }
    /**
     * Protobuf type {@code Config.GlobalTemplate.Heroattributeevaluation_}
     */
    public static final class Heroattributeevaluation_ extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Config.GlobalTemplate.Heroattributeevaluation_)
        Heroattributeevaluation_OrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Heroattributeevaluation_.newBuilder() to construct.
      private Heroattributeevaluation_(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Heroattributeevaluation_() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Heroattributeevaluation_();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Heroattributeevaluation_(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                num1_ = input.readInt32();
                break;
              }
              case 16: {

                num2_ = input.readInt32();
                break;
              }
              case 24: {

                num3_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_Heroattributeevaluation__descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_Heroattributeevaluation__fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.class, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.Builder.class);
      }

      public static final int NUM1_FIELD_NUMBER = 1;
      private int num1_;
      /**
       * <pre>
       * Num1
       * </pre>
       *
       * <code>int32 Num1 = 1;</code>
       * @return The num1.
       */
      @java.lang.Override
      public int getNum1() {
        return num1_;
      }

      public static final int NUM2_FIELD_NUMBER = 2;
      private int num2_;
      /**
       * <pre>
       * Num2
       * </pre>
       *
       * <code>int32 Num2 = 2;</code>
       * @return The num2.
       */
      @java.lang.Override
      public int getNum2() {
        return num2_;
      }

      public static final int NUM3_FIELD_NUMBER = 3;
      private int num3_;
      /**
       * <pre>
       * Num3
       * </pre>
       *
       * <code>int32 Num3 = 3;</code>
       * @return The num3.
       */
      @java.lang.Override
      public int getNum3() {
        return num3_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (num1_ != 0) {
          output.writeInt32(1, num1_);
        }
        if (num2_ != 0) {
          output.writeInt32(2, num2_);
        }
        if (num3_ != 0) {
          output.writeInt32(3, num3_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (num1_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, num1_);
        }
        if (num2_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, num2_);
        }
        if (num3_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, num3_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_)) {
          return super.equals(obj);
        }
        Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ other = (Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_) obj;

        if (getNum1()
            != other.getNum1()) return false;
        if (getNum2()
            != other.getNum2()) return false;
        if (getNum3()
            != other.getNum3()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NUM1_FIELD_NUMBER;
        hash = (53 * hash) + getNum1();
        hash = (37 * hash) + NUM2_FIELD_NUMBER;
        hash = (53 * hash) + getNum2();
        hash = (37 * hash) + NUM3_FIELD_NUMBER;
        hash = (53 * hash) + getNum3();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Config.GlobalTemplate.Heroattributeevaluation_}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Config.GlobalTemplate.Heroattributeevaluation_)
          Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_OrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_Heroattributeevaluation__descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_Heroattributeevaluation__fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.class, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.Builder.class);
        }

        // Construct using Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          num1_ = 0;

          num2_ = 0;

          num3_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_Heroattributeevaluation__descriptor;
        }

        @java.lang.Override
        public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ getDefaultInstanceForType() {
          return Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.getDefaultInstance();
        }

        @java.lang.Override
        public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ build() {
          Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ buildPartial() {
          Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ result = new Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_(this);
          result.num1_ = num1_;
          result.num2_ = num2_;
          result.num3_ = num3_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_) {
            return mergeFrom((Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ other) {
          if (other == Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.getDefaultInstance()) return this;
          if (other.getNum1() != 0) {
            setNum1(other.getNum1());
          }
          if (other.getNum2() != 0) {
            setNum2(other.getNum2());
          }
          if (other.getNum3() != 0) {
            setNum3(other.getNum3());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int num1_ ;
        /**
         * <pre>
         * Num1
         * </pre>
         *
         * <code>int32 Num1 = 1;</code>
         * @return The num1.
         */
        @java.lang.Override
        public int getNum1() {
          return num1_;
        }
        /**
         * <pre>
         * Num1
         * </pre>
         *
         * <code>int32 Num1 = 1;</code>
         * @param value The num1 to set.
         * @return This builder for chaining.
         */
        public Builder setNum1(int value) {
          
          num1_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Num1
         * </pre>
         *
         * <code>int32 Num1 = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearNum1() {
          
          num1_ = 0;
          onChanged();
          return this;
        }

        private int num2_ ;
        /**
         * <pre>
         * Num2
         * </pre>
         *
         * <code>int32 Num2 = 2;</code>
         * @return The num2.
         */
        @java.lang.Override
        public int getNum2() {
          return num2_;
        }
        /**
         * <pre>
         * Num2
         * </pre>
         *
         * <code>int32 Num2 = 2;</code>
         * @param value The num2 to set.
         * @return This builder for chaining.
         */
        public Builder setNum2(int value) {
          
          num2_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Num2
         * </pre>
         *
         * <code>int32 Num2 = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearNum2() {
          
          num2_ = 0;
          onChanged();
          return this;
        }

        private int num3_ ;
        /**
         * <pre>
         * Num3
         * </pre>
         *
         * <code>int32 Num3 = 3;</code>
         * @return The num3.
         */
        @java.lang.Override
        public int getNum3() {
          return num3_;
        }
        /**
         * <pre>
         * Num3
         * </pre>
         *
         * <code>int32 Num3 = 3;</code>
         * @param value The num3 to set.
         * @return This builder for chaining.
         */
        public Builder setNum3(int value) {
          
          num3_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Num3
         * </pre>
         *
         * <code>int32 Num3 = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearNum3() {
          
          num3_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Config.GlobalTemplate.Heroattributeevaluation_)
      }

      // @@protoc_insertion_point(class_scope:Config.GlobalTemplate.Heroattributeevaluation_)
      private static final Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_();
      }

      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Heroattributeevaluation_>
          PARSER = new com.google.protobuf.AbstractParser<Heroattributeevaluation_>() {
        @java.lang.Override
        public Heroattributeevaluation_ parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Heroattributeevaluation_(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Heroattributeevaluation_> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Heroattributeevaluation_> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface Heroclassneedcard_OrBuilder extends
        // @@protoc_insertion_point(interface_extends:Config.GlobalTemplate.Heroclassneedcard_)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Class1
       * </pre>
       *
       * <code>int32 Class1 = 1;</code>
       * @return The class1.
       */
      int getClass1();

      /**
       * <pre>
       * Class2
       * </pre>
       *
       * <code>int32 Class2 = 2;</code>
       * @return The class2.
       */
      int getClass2();

      /**
       * <pre>
       * Class3
       * </pre>
       *
       * <code>int32 Class3 = 3;</code>
       * @return The class3.
       */
      int getClass3();

      /**
       * <pre>
       * Class4
       * </pre>
       *
       * <code>int32 Class4 = 4;</code>
       * @return The class4.
       */
      int getClass4();

      /**
       * <pre>
       * Class5
       * </pre>
       *
       * <code>int32 Class5 = 5;</code>
       * @return The class5.
       */
      int getClass5();

      /**
       * <pre>
       * Class6
       * </pre>
       *
       * <code>int32 Class6 = 6;</code>
       * @return The class6.
       */
      int getClass6();
    }
    /**
     * Protobuf type {@code Config.GlobalTemplate.Heroclassneedcard_}
     */
    public static final class Heroclassneedcard_ extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Config.GlobalTemplate.Heroclassneedcard_)
        Heroclassneedcard_OrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Heroclassneedcard_.newBuilder() to construct.
      private Heroclassneedcard_(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Heroclassneedcard_() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Heroclassneedcard_();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Heroclassneedcard_(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                class1_ = input.readInt32();
                break;
              }
              case 16: {

                class2_ = input.readInt32();
                break;
              }
              case 24: {

                class3_ = input.readInt32();
                break;
              }
              case 32: {

                class4_ = input.readInt32();
                break;
              }
              case 40: {

                class5_ = input.readInt32();
                break;
              }
              case 48: {

                class6_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_Heroclassneedcard__descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_Heroclassneedcard__fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.class, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.Builder.class);
      }

      public static final int CLASS1_FIELD_NUMBER = 1;
      private int class1_;
      /**
       * <pre>
       * Class1
       * </pre>
       *
       * <code>int32 Class1 = 1;</code>
       * @return The class1.
       */
      @java.lang.Override
      public int getClass1() {
        return class1_;
      }

      public static final int CLASS2_FIELD_NUMBER = 2;
      private int class2_;
      /**
       * <pre>
       * Class2
       * </pre>
       *
       * <code>int32 Class2 = 2;</code>
       * @return The class2.
       */
      @java.lang.Override
      public int getClass2() {
        return class2_;
      }

      public static final int CLASS3_FIELD_NUMBER = 3;
      private int class3_;
      /**
       * <pre>
       * Class3
       * </pre>
       *
       * <code>int32 Class3 = 3;</code>
       * @return The class3.
       */
      @java.lang.Override
      public int getClass3() {
        return class3_;
      }

      public static final int CLASS4_FIELD_NUMBER = 4;
      private int class4_;
      /**
       * <pre>
       * Class4
       * </pre>
       *
       * <code>int32 Class4 = 4;</code>
       * @return The class4.
       */
      @java.lang.Override
      public int getClass4() {
        return class4_;
      }

      public static final int CLASS5_FIELD_NUMBER = 5;
      private int class5_;
      /**
       * <pre>
       * Class5
       * </pre>
       *
       * <code>int32 Class5 = 5;</code>
       * @return The class5.
       */
      @java.lang.Override
      public int getClass5() {
        return class5_;
      }

      public static final int CLASS6_FIELD_NUMBER = 6;
      private int class6_;
      /**
       * <pre>
       * Class6
       * </pre>
       *
       * <code>int32 Class6 = 6;</code>
       * @return The class6.
       */
      @java.lang.Override
      public int getClass6() {
        return class6_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (class1_ != 0) {
          output.writeInt32(1, class1_);
        }
        if (class2_ != 0) {
          output.writeInt32(2, class2_);
        }
        if (class3_ != 0) {
          output.writeInt32(3, class3_);
        }
        if (class4_ != 0) {
          output.writeInt32(4, class4_);
        }
        if (class5_ != 0) {
          output.writeInt32(5, class5_);
        }
        if (class6_ != 0) {
          output.writeInt32(6, class6_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (class1_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, class1_);
        }
        if (class2_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, class2_);
        }
        if (class3_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, class3_);
        }
        if (class4_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, class4_);
        }
        if (class5_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, class5_);
        }
        if (class6_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, class6_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_)) {
          return super.equals(obj);
        }
        Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ other = (Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_) obj;

        if (getClass1()
            != other.getClass1()) return false;
        if (getClass2()
            != other.getClass2()) return false;
        if (getClass3()
            != other.getClass3()) return false;
        if (getClass4()
            != other.getClass4()) return false;
        if (getClass5()
            != other.getClass5()) return false;
        if (getClass6()
            != other.getClass6()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + CLASS1_FIELD_NUMBER;
        hash = (53 * hash) + getClass1();
        hash = (37 * hash) + CLASS2_FIELD_NUMBER;
        hash = (53 * hash) + getClass2();
        hash = (37 * hash) + CLASS3_FIELD_NUMBER;
        hash = (53 * hash) + getClass3();
        hash = (37 * hash) + CLASS4_FIELD_NUMBER;
        hash = (53 * hash) + getClass4();
        hash = (37 * hash) + CLASS5_FIELD_NUMBER;
        hash = (53 * hash) + getClass5();
        hash = (37 * hash) + CLASS6_FIELD_NUMBER;
        hash = (53 * hash) + getClass6();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Config.GlobalTemplate.Heroclassneedcard_}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Config.GlobalTemplate.Heroclassneedcard_)
          Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_OrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_Heroclassneedcard__descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_Heroclassneedcard__fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.class, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.Builder.class);
        }

        // Construct using Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          class1_ = 0;

          class2_ = 0;

          class3_ = 0;

          class4_ = 0;

          class5_ = 0;

          class6_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_Heroclassneedcard__descriptor;
        }

        @java.lang.Override
        public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ getDefaultInstanceForType() {
          return Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.getDefaultInstance();
        }

        @java.lang.Override
        public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ build() {
          Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ buildPartial() {
          Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ result = new Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_(this);
          result.class1_ = class1_;
          result.class2_ = class2_;
          result.class3_ = class3_;
          result.class4_ = class4_;
          result.class5_ = class5_;
          result.class6_ = class6_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_) {
            return mergeFrom((Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ other) {
          if (other == Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.getDefaultInstance()) return this;
          if (other.getClass1() != 0) {
            setClass1(other.getClass1());
          }
          if (other.getClass2() != 0) {
            setClass2(other.getClass2());
          }
          if (other.getClass3() != 0) {
            setClass3(other.getClass3());
          }
          if (other.getClass4() != 0) {
            setClass4(other.getClass4());
          }
          if (other.getClass5() != 0) {
            setClass5(other.getClass5());
          }
          if (other.getClass6() != 0) {
            setClass6(other.getClass6());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int class1_ ;
        /**
         * <pre>
         * Class1
         * </pre>
         *
         * <code>int32 Class1 = 1;</code>
         * @return The class1.
         */
        @java.lang.Override
        public int getClass1() {
          return class1_;
        }
        /**
         * <pre>
         * Class1
         * </pre>
         *
         * <code>int32 Class1 = 1;</code>
         * @param value The class1 to set.
         * @return This builder for chaining.
         */
        public Builder setClass1(int value) {
          
          class1_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Class1
         * </pre>
         *
         * <code>int32 Class1 = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearClass1() {
          
          class1_ = 0;
          onChanged();
          return this;
        }

        private int class2_ ;
        /**
         * <pre>
         * Class2
         * </pre>
         *
         * <code>int32 Class2 = 2;</code>
         * @return The class2.
         */
        @java.lang.Override
        public int getClass2() {
          return class2_;
        }
        /**
         * <pre>
         * Class2
         * </pre>
         *
         * <code>int32 Class2 = 2;</code>
         * @param value The class2 to set.
         * @return This builder for chaining.
         */
        public Builder setClass2(int value) {
          
          class2_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Class2
         * </pre>
         *
         * <code>int32 Class2 = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearClass2() {
          
          class2_ = 0;
          onChanged();
          return this;
        }

        private int class3_ ;
        /**
         * <pre>
         * Class3
         * </pre>
         *
         * <code>int32 Class3 = 3;</code>
         * @return The class3.
         */
        @java.lang.Override
        public int getClass3() {
          return class3_;
        }
        /**
         * <pre>
         * Class3
         * </pre>
         *
         * <code>int32 Class3 = 3;</code>
         * @param value The class3 to set.
         * @return This builder for chaining.
         */
        public Builder setClass3(int value) {
          
          class3_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Class3
         * </pre>
         *
         * <code>int32 Class3 = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearClass3() {
          
          class3_ = 0;
          onChanged();
          return this;
        }

        private int class4_ ;
        /**
         * <pre>
         * Class4
         * </pre>
         *
         * <code>int32 Class4 = 4;</code>
         * @return The class4.
         */
        @java.lang.Override
        public int getClass4() {
          return class4_;
        }
        /**
         * <pre>
         * Class4
         * </pre>
         *
         * <code>int32 Class4 = 4;</code>
         * @param value The class4 to set.
         * @return This builder for chaining.
         */
        public Builder setClass4(int value) {
          
          class4_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Class4
         * </pre>
         *
         * <code>int32 Class4 = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearClass4() {
          
          class4_ = 0;
          onChanged();
          return this;
        }

        private int class5_ ;
        /**
         * <pre>
         * Class5
         * </pre>
         *
         * <code>int32 Class5 = 5;</code>
         * @return The class5.
         */
        @java.lang.Override
        public int getClass5() {
          return class5_;
        }
        /**
         * <pre>
         * Class5
         * </pre>
         *
         * <code>int32 Class5 = 5;</code>
         * @param value The class5 to set.
         * @return This builder for chaining.
         */
        public Builder setClass5(int value) {
          
          class5_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Class5
         * </pre>
         *
         * <code>int32 Class5 = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearClass5() {
          
          class5_ = 0;
          onChanged();
          return this;
        }

        private int class6_ ;
        /**
         * <pre>
         * Class6
         * </pre>
         *
         * <code>int32 Class6 = 6;</code>
         * @return The class6.
         */
        @java.lang.Override
        public int getClass6() {
          return class6_;
        }
        /**
         * <pre>
         * Class6
         * </pre>
         *
         * <code>int32 Class6 = 6;</code>
         * @param value The class6 to set.
         * @return This builder for chaining.
         */
        public Builder setClass6(int value) {
          
          class6_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Class6
         * </pre>
         *
         * <code>int32 Class6 = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearClass6() {
          
          class6_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Config.GlobalTemplate.Heroclassneedcard_)
      }

      // @@protoc_insertion_point(class_scope:Config.GlobalTemplate.Heroclassneedcard_)
      private static final Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_();
      }

      public static Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Heroclassneedcard_>
          PARSER = new com.google.protobuf.AbstractParser<Heroclassneedcard_>() {
        @java.lang.Override
        public Heroclassneedcard_ parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Heroclassneedcard_(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Heroclassneedcard_> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Heroclassneedcard_> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int NAMELIMIT_FIELD_NUMBER = 1;
    private int nameLimit_;
    /**
     * <pre>
     * 名字字数限制
     * </pre>
     *
     * <code>int32 NameLimit = 1;</code>
     * @return The nameLimit.
     */
    @java.lang.Override
    public int getNameLimit() {
      return nameLimit_;
    }

    public static final int DEFAULTDROPGROUP_FIELD_NUMBER = 2;
    private int defaultDropGroup_;
    /**
     * <pre>
     * 玩家进入游戏时初始获得物品掉落组
     * </pre>
     *
     * <code>int32 DefaultDropGroup = 2;</code>
     * @return The defaultDropGroup.
     */
    @java.lang.Override
    public int getDefaultDropGroup() {
      return defaultDropGroup_;
    }

    public static final int CHANGENAMECOST_FIELD_NUMBER = 3;
    private int changeNameCost_;
    /**
     * <pre>
     * 改名消耗（单位：宝石）
     * </pre>
     *
     * <code>int32 ChangeNameCost = 3;</code>
     * @return The changeNameCost.
     */
    @java.lang.Override
    public int getChangeNameCost() {
      return changeNameCost_;
    }

    public static final int PLAYEENERGYRECOVERTIME_FIELD_NUMBER = 4;
    private int playeEnergyRecoverTime_;
    /**
     * <pre>
     * 每恢复一点体力所需时间（单位：分钟）
     * </pre>
     *
     * <code>int32 PlayeEnergyRecoverTime = 4;</code>
     * @return The playeEnergyRecoverTime.
     */
    @java.lang.Override
    public int getPlayeEnergyRecoverTime() {
      return playeEnergyRecoverTime_;
    }

    public static final int FIELDHERONUMLIMITS_FIELD_NUMBER = 5;
    private java.util.List<Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_> fieldHeroNumLimits_;
    /**
     * <pre>
     * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
     */
    @java.lang.Override
    public java.util.List<Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_> getFieldHeroNumLimitsList() {
      return fieldHeroNumLimits_;
    }
    /**
     * <pre>
     * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_OrBuilder> 
        getFieldHeroNumLimitsOrBuilderList() {
      return fieldHeroNumLimits_;
    }
    /**
     * <pre>
     * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
     */
    @java.lang.Override
    public int getFieldHeroNumLimitsCount() {
      return fieldHeroNumLimits_.size();
    }
    /**
     * <pre>
     * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
     */
    @java.lang.Override
    public Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ getFieldHeroNumLimits(int index) {
      return fieldHeroNumLimits_.get(index);
    }
    /**
     * <pre>
     * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
     */
    @java.lang.Override
    public Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_OrBuilder getFieldHeroNumLimitsOrBuilder(
        int index) {
      return fieldHeroNumLimits_.get(index);
    }

    public static final int FORMATIONNAMELIMIT_FIELD_NUMBER = 6;
    private int formationNameLimit_;
    /**
     * <pre>
     * 阵容名字字数限制
     * </pre>
     *
     * <code>int32 FormationNameLimit = 6;</code>
     * @return The formationNameLimit.
     */
    @java.lang.Override
    public int getFormationNameLimit() {
      return formationNameLimit_;
    }

    public static final int FORMATIONCAREERLIMIT_FIELD_NUMBER = 7;
    private int formationCareerLimit_;
    /**
     * <pre>
     * 同职业的魔物上阵不能超过x个
     * </pre>
     *
     * <code>int32 FormationCareerLimit = 7;</code>
     * @return The formationCareerLimit.
     */
    @java.lang.Override
    public int getFormationCareerLimit() {
      return formationCareerLimit_;
    }

    public static final int INITIALFORMAITONHEROS_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.IntList initialFormaitonHeros_;
    /**
     * <pre>
     * 队伍1-队伍3默认初始英雄及站位
     * </pre>
     *
     * <code>repeated int32 InitialFormaitonHeros = 8;</code>
     * @return A list containing the initialFormaitonHeros.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getInitialFormaitonHerosList() {
      return initialFormaitonHeros_;
    }
    /**
     * <pre>
     * 队伍1-队伍3默认初始英雄及站位
     * </pre>
     *
     * <code>repeated int32 InitialFormaitonHeros = 8;</code>
     * @return The count of initialFormaitonHeros.
     */
    public int getInitialFormaitonHerosCount() {
      return initialFormaitonHeros_.size();
    }
    /**
     * <pre>
     * 队伍1-队伍3默认初始英雄及站位
     * </pre>
     *
     * <code>repeated int32 InitialFormaitonHeros = 8;</code>
     * @param index The index of the element to return.
     * @return The initialFormaitonHeros at the given index.
     */
    public int getInitialFormaitonHeros(int index) {
      return initialFormaitonHeros_.getInt(index);
    }
    private int initialFormaitonHerosMemoizedSerializedSize = -1;

    public static final int FORMATIONCOUNT_FIELD_NUMBER = 9;
    private int formationCount_;
    /**
     * <pre>
     * 玩家可设置X个队伍
     * </pre>
     *
     * <code>int32 FormationCount = 9;</code>
     * @return The formationCount.
     */
    @java.lang.Override
    public int getFormationCount() {
      return formationCount_;
    }

    public static final int HERONORMALTALENTCOUNTLIMIT_FIELD_NUMBER = 10;
    private boolean heroNormalTalentCountLimit_;
    /**
     * <pre>
     * 英雄普通奥义数量上限
     * </pre>
     *
     * <code>bool HeroNormalTalentCountLimit = 10;</code>
     * @return The heroNormalTalentCountLimit.
     */
    @java.lang.Override
    public boolean getHeroNormalTalentCountLimit() {
      return heroNormalTalentCountLimit_;
    }

    public static final int HEROHEALTHCORRECTIONBASE_FIELD_NUMBER = 11;
    private boolean heroHealthCorrectionBase_;
    /**
     * <pre>
     * 英雄生命属性权重值
     * </pre>
     *
     * <code>bool HeroHealthCorrectionBase = 11;</code>
     * @return The heroHealthCorrectionBase.
     */
    @java.lang.Override
    public boolean getHeroHealthCorrectionBase() {
      return heroHealthCorrectionBase_;
    }

    public static final int HEROHEALTHCORRECTIONCOE_FIELD_NUMBER = 12;
    private double heroHealthCorrectionCoe_;
    /**
     * <pre>
     * 英雄生命属性权重系数
     * </pre>
     *
     * <code>double HeroHealthCorrectionCoe = 12;</code>
     * @return The heroHealthCorrectionCoe.
     */
    @java.lang.Override
    public double getHeroHealthCorrectionCoe() {
      return heroHealthCorrectionCoe_;
    }

    public static final int HEROATTACKCORRECTIONBASE_FIELD_NUMBER = 13;
    private int heroAttackCorrectionBase_;
    /**
     * <pre>
     * 英雄攻击属性权重值
     * </pre>
     *
     * <code>int32 HeroAttackCorrectionBase = 13;</code>
     * @return The heroAttackCorrectionBase.
     */
    @java.lang.Override
    public int getHeroAttackCorrectionBase() {
      return heroAttackCorrectionBase_;
    }

    public static final int HEROATTACKCORRECTIONCOE_FIELD_NUMBER = 14;
    private double heroAttackCorrectionCoe_;
    /**
     * <pre>
     * 英雄攻击属性权重系数
     * </pre>
     *
     * <code>double HeroAttackCorrectionCoe = 14;</code>
     * @return The heroAttackCorrectionCoe.
     */
    @java.lang.Override
    public double getHeroAttackCorrectionCoe() {
      return heroAttackCorrectionCoe_;
    }

    public static final int HERODODGECORRECTIONBASE_FIELD_NUMBER = 15;
    private int heroDodgeCorrectionBase_;
    /**
     * <pre>
     * 英雄闪避属性权重值
     * </pre>
     *
     * <code>int32 HeroDodgeCorrectionBase = 15;</code>
     * @return The heroDodgeCorrectionBase.
     */
    @java.lang.Override
    public int getHeroDodgeCorrectionBase() {
      return heroDodgeCorrectionBase_;
    }

    public static final int HERODODGECORRECTIONCOE_FIELD_NUMBER = 16;
    private double heroDodgeCorrectionCoe_;
    /**
     * <pre>
     * 英雄闪避属性权重系数
     * </pre>
     *
     * <code>double HeroDodgeCorrectionCoe = 16;</code>
     * @return The heroDodgeCorrectionCoe.
     */
    @java.lang.Override
    public double getHeroDodgeCorrectionCoe() {
      return heroDodgeCorrectionCoe_;
    }

    public static final int HEROCRITCORRECTIONBASE_FIELD_NUMBER = 17;
    private int heroCritCorrectionBase_;
    /**
     * <pre>
     * 英雄暴击属性权重值
     * </pre>
     *
     * <code>int32 HeroCritCorrectionBase = 17;</code>
     * @return The heroCritCorrectionBase.
     */
    @java.lang.Override
    public int getHeroCritCorrectionBase() {
      return heroCritCorrectionBase_;
    }

    public static final int HEROCRITCORRECTIONCOE_FIELD_NUMBER = 18;
    private double heroCritCorrectionCoe_;
    /**
     * <pre>
     * 英雄暴击属性权重系数
     * </pre>
     *
     * <code>double HeroCritCorrectionCoe = 18;</code>
     * @return The heroCritCorrectionCoe.
     */
    @java.lang.Override
    public double getHeroCritCorrectionCoe() {
      return heroCritCorrectionCoe_;
    }

    public static final int HEROBLCKCORRECTIONBASE_FIELD_NUMBER = 19;
    private int heroBlckCorrectionBase_;
    /**
     * <pre>
     * 英雄暴击属性权重值
     * </pre>
     *
     * <code>int32 HeroBlckCorrectionBase = 19;</code>
     * @return The heroBlckCorrectionBase.
     */
    @java.lang.Override
    public int getHeroBlckCorrectionBase() {
      return heroBlckCorrectionBase_;
    }

    public static final int HEROBLCKCORRECTIONCOE_FIELD_NUMBER = 20;
    private double heroBlckCorrectionCoe_;
    /**
     * <pre>
     * 英雄暴击属性权重系数
     * </pre>
     *
     * <code>double HeroBlckCorrectionCoe = 20;</code>
     * @return The heroBlckCorrectionCoe.
     */
    @java.lang.Override
    public double getHeroBlckCorrectionCoe() {
      return heroBlckCorrectionCoe_;
    }

    public static final int HEROATTRIBUTEEVALUATION_FIELD_NUMBER = 21;
    private Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ heroAttributeEvaluation_;
    /**
     * <pre>
     * 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
     * </pre>
     *
     * <code>.Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;</code>
     * @return Whether the heroAttributeEvaluation field is set.
     */
    @java.lang.Override
    public boolean hasHeroAttributeEvaluation() {
      return heroAttributeEvaluation_ != null;
    }
    /**
     * <pre>
     * 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
     * </pre>
     *
     * <code>.Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;</code>
     * @return The heroAttributeEvaluation.
     */
    @java.lang.Override
    public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ getHeroAttributeEvaluation() {
      return heroAttributeEvaluation_ == null ? Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.getDefaultInstance() : heroAttributeEvaluation_;
    }
    /**
     * <pre>
     * 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
     * </pre>
     *
     * <code>.Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;</code>
     */
    @java.lang.Override
    public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_OrBuilder getHeroAttributeEvaluationOrBuilder() {
      return getHeroAttributeEvaluation();
    }

    public static final int HEROLEVELLIMITS_FIELD_NUMBER = 22;
    private com.google.protobuf.Internal.IntList heroLevelLimits_;
    /**
     * <pre>
     * 英雄不同星级对应的等级上限，数组第一项为1星对应的等级上限
     * </pre>
     *
     * <code>repeated int32 HeroLevelLimits = 22;</code>
     * @return A list containing the heroLevelLimits.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getHeroLevelLimitsList() {
      return heroLevelLimits_;
    }
    /**
     * <pre>
     * 英雄不同星级对应的等级上限，数组第一项为1星对应的等级上限
     * </pre>
     *
     * <code>repeated int32 HeroLevelLimits = 22;</code>
     * @return The count of heroLevelLimits.
     */
    public int getHeroLevelLimitsCount() {
      return heroLevelLimits_.size();
    }
    /**
     * <pre>
     * 英雄不同星级对应的等级上限，数组第一项为1星对应的等级上限
     * </pre>
     *
     * <code>repeated int32 HeroLevelLimits = 22;</code>
     * @param index The index of the element to return.
     * @return The heroLevelLimits at the given index.
     */
    public int getHeroLevelLimits(int index) {
      return heroLevelLimits_.getInt(index);
    }
    private int heroLevelLimitsMemoizedSerializedSize = -1;

    public static final int HEROSTARLIMIT_FIELD_NUMBER = 23;
    private int heroStarLimit_;
    /**
     * <pre>
     * 英雄星级上限
     * </pre>
     *
     * <code>int32 HeroStarLimit = 23;</code>
     * @return The heroStarLimit.
     */
    @java.lang.Override
    public int getHeroStarLimit() {
      return heroStarLimit_;
    }

    public static final int HEROSTARUPNEEDCARDS_FIELD_NUMBER = 24;
    private com.google.protobuf.Internal.IntList heroStarUpNeedCards_;
    /**
     * <pre>
     * 英雄不同星级升星所需消耗的同星副卡数量，数组第一项为1星升2星时所需数量
     * </pre>
     *
     * <code>repeated int32 HeroStarUpNeedCards = 24;</code>
     * @return A list containing the heroStarUpNeedCards.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getHeroStarUpNeedCardsList() {
      return heroStarUpNeedCards_;
    }
    /**
     * <pre>
     * 英雄不同星级升星所需消耗的同星副卡数量，数组第一项为1星升2星时所需数量
     * </pre>
     *
     * <code>repeated int32 HeroStarUpNeedCards = 24;</code>
     * @return The count of heroStarUpNeedCards.
     */
    public int getHeroStarUpNeedCardsCount() {
      return heroStarUpNeedCards_.size();
    }
    /**
     * <pre>
     * 英雄不同星级升星所需消耗的同星副卡数量，数组第一项为1星升2星时所需数量
     * </pre>
     *
     * <code>repeated int32 HeroStarUpNeedCards = 24;</code>
     * @param index The index of the element to return.
     * @return The heroStarUpNeedCards at the given index.
     */
    public int getHeroStarUpNeedCards(int index) {
      return heroStarUpNeedCards_.getInt(index);
    }
    private int heroStarUpNeedCardsMemoizedSerializedSize = -1;

    public static final int HEROSTARUPNEEDGOLDS_FIELD_NUMBER = 25;
    private com.google.protobuf.Internal.IntList heroStarUpNeedGolds_;
    /**
     * <pre>
     * 英雄不同星级升星所需消耗的金币数量，数组第一项为1星升2星时所需数量
     * </pre>
     *
     * <code>repeated int32 HeroStarUpNeedGolds = 25;</code>
     * @return A list containing the heroStarUpNeedGolds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getHeroStarUpNeedGoldsList() {
      return heroStarUpNeedGolds_;
    }
    /**
     * <pre>
     * 英雄不同星级升星所需消耗的金币数量，数组第一项为1星升2星时所需数量
     * </pre>
     *
     * <code>repeated int32 HeroStarUpNeedGolds = 25;</code>
     * @return The count of heroStarUpNeedGolds.
     */
    public int getHeroStarUpNeedGoldsCount() {
      return heroStarUpNeedGolds_.size();
    }
    /**
     * <pre>
     * 英雄不同星级升星所需消耗的金币数量，数组第一项为1星升2星时所需数量
     * </pre>
     *
     * <code>repeated int32 HeroStarUpNeedGolds = 25;</code>
     * @param index The index of the element to return.
     * @return The heroStarUpNeedGolds at the given index.
     */
    public int getHeroStarUpNeedGolds(int index) {
      return heroStarUpNeedGolds_.getInt(index);
    }
    private int heroStarUpNeedGoldsMemoizedSerializedSize = -1;

    public static final int HEROSTARUPGAINNORMALTALENTS_FIELD_NUMBER = 26;
    private com.google.protobuf.Internal.IntList heroStarUpGainNormalTalents_;
    /**
     * <pre>
     * 当英雄升到指定星级时，可获得1个奥义，从英雄表里的奥义库中随机1个(新增字段！！！）
     * </pre>
     *
     * <code>repeated int32 HeroStarUpGainNormalTalents = 26;</code>
     * @return A list containing the heroStarUpGainNormalTalents.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getHeroStarUpGainNormalTalentsList() {
      return heroStarUpGainNormalTalents_;
    }
    /**
     * <pre>
     * 当英雄升到指定星级时，可获得1个奥义，从英雄表里的奥义库中随机1个(新增字段！！！）
     * </pre>
     *
     * <code>repeated int32 HeroStarUpGainNormalTalents = 26;</code>
     * @return The count of heroStarUpGainNormalTalents.
     */
    public int getHeroStarUpGainNormalTalentsCount() {
      return heroStarUpGainNormalTalents_.size();
    }
    /**
     * <pre>
     * 当英雄升到指定星级时，可获得1个奥义，从英雄表里的奥义库中随机1个(新增字段！！！）
     * </pre>
     *
     * <code>repeated int32 HeroStarUpGainNormalTalents = 26;</code>
     * @param index The index of the element to return.
     * @return The heroStarUpGainNormalTalents at the given index.
     */
    public int getHeroStarUpGainNormalTalents(int index) {
      return heroStarUpGainNormalTalents_.getInt(index);
    }
    private int heroStarUpGainNormalTalentsMemoizedSerializedSize = -1;

    public static final int HEROSTARUPCANCELGIVECARDS_FIELD_NUMBER = 27;
    private com.google.protobuf.Internal.IntList heroStarUpCancelGiveCards_;
    /**
     * <pre>
     * 英雄不同星级取消升星时返还的副卡数量，数组第一项为1星升2星取消时返还的数量（删除了放弃升星结果的操作，该字段删除）
     * </pre>
     *
     * <code>repeated int32 HeroStarUpCancelGiveCards = 27;</code>
     * @return A list containing the heroStarUpCancelGiveCards.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getHeroStarUpCancelGiveCardsList() {
      return heroStarUpCancelGiveCards_;
    }
    /**
     * <pre>
     * 英雄不同星级取消升星时返还的副卡数量，数组第一项为1星升2星取消时返还的数量（删除了放弃升星结果的操作，该字段删除）
     * </pre>
     *
     * <code>repeated int32 HeroStarUpCancelGiveCards = 27;</code>
     * @return The count of heroStarUpCancelGiveCards.
     */
    public int getHeroStarUpCancelGiveCardsCount() {
      return heroStarUpCancelGiveCards_.size();
    }
    /**
     * <pre>
     * 英雄不同星级取消升星时返还的副卡数量，数组第一项为1星升2星取消时返还的数量（删除了放弃升星结果的操作，该字段删除）
     * </pre>
     *
     * <code>repeated int32 HeroStarUpCancelGiveCards = 27;</code>
     * @param index The index of the element to return.
     * @return The heroStarUpCancelGiveCards at the given index.
     */
    public int getHeroStarUpCancelGiveCards(int index) {
      return heroStarUpCancelGiveCards_.getInt(index);
    }
    private int heroStarUpCancelGiveCardsMemoizedSerializedSize = -1;

    public static final int HEROSTARUPCANCELGIVEGOLD_FIELD_NUMBER = 28;
    private double heroStarUpCancelGiveGold_;
    /**
     * <pre>
     * 英雄取消升星时消耗的金币比例（删除了放弃升星结果的操作，该字段删除）
     * </pre>
     *
     * <code>double HeroStarUpCancelGiveGold = 28;</code>
     * @return The heroStarUpCancelGiveGold.
     */
    @java.lang.Override
    public double getHeroStarUpCancelGiveGold() {
      return heroStarUpCancelGiveGold_;
    }

    public static final int HEROLEARNINGNEEDGOLDS_FIELD_NUMBER = 29;
    private com.google.protobuf.Internal.IntList heroLearningNeedGolds_;
    /**
     * <pre>
     * 英雄不同星级学习时所需消耗的金币数量，数组第一项为1星所需数量
     * </pre>
     *
     * <code>repeated int32 HeroLearningNeedGolds = 29;</code>
     * @return A list containing the heroLearningNeedGolds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getHeroLearningNeedGoldsList() {
      return heroLearningNeedGolds_;
    }
    /**
     * <pre>
     * 英雄不同星级学习时所需消耗的金币数量，数组第一项为1星所需数量
     * </pre>
     *
     * <code>repeated int32 HeroLearningNeedGolds = 29;</code>
     * @return The count of heroLearningNeedGolds.
     */
    public int getHeroLearningNeedGoldsCount() {
      return heroLearningNeedGolds_.size();
    }
    /**
     * <pre>
     * 英雄不同星级学习时所需消耗的金币数量，数组第一项为1星所需数量
     * </pre>
     *
     * <code>repeated int32 HeroLearningNeedGolds = 29;</code>
     * @param index The index of the element to return.
     * @return The heroLearningNeedGolds at the given index.
     */
    public int getHeroLearningNeedGolds(int index) {
      return heroLearningNeedGolds_.getInt(index);
    }
    private int heroLearningNeedGoldsMemoizedSerializedSize = -1;

    public static final int HEROCLASSNEEDCARDS_FIELD_NUMBER = 30;
    private java.util.List<Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_> heroClassNeedCards_;
    /**
     * <pre>
     * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
     */
    @java.lang.Override
    public java.util.List<Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_> getHeroClassNeedCardsList() {
      return heroClassNeedCards_;
    }
    /**
     * <pre>
     * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
     */
    @java.lang.Override
    public java.util.List<? extends Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_OrBuilder> 
        getHeroClassNeedCardsOrBuilderList() {
      return heroClassNeedCards_;
    }
    /**
     * <pre>
     * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
     */
    @java.lang.Override
    public int getHeroClassNeedCardsCount() {
      return heroClassNeedCards_.size();
    }
    /**
     * <pre>
     * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
     */
    @java.lang.Override
    public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ getHeroClassNeedCards(int index) {
      return heroClassNeedCards_.get(index);
    }
    /**
     * <pre>
     * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
     * </pre>
     *
     * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
     */
    @java.lang.Override
    public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_OrBuilder getHeroClassNeedCardsOrBuilder(
        int index) {
      return heroClassNeedCards_.get(index);
    }

    public static final int HEROSKILLTRAININGGIVEEXPCOE_FIELD_NUMBER = 31;
    private double heroSkillTrainingGiveExpCoe_;
    /**
     * <pre>
     * 英雄特训返还英雄经验比例
     * </pre>
     *
     * <code>double HeroSkillTrainingGiveExpCoe = 31;</code>
     * @return The heroSkillTrainingGiveExpCoe.
     */
    @java.lang.Override
    public double getHeroSkillTrainingGiveExpCoe() {
      return heroSkillTrainingGiveExpCoe_;
    }

    public static final int NORMALLOTTERYFREETIME_FIELD_NUMBER = 32;
    private int normalLotteryFreeTime_;
    /**
     * <pre>
     * 金币免费召唤冷却时间，单位：分钟
     * </pre>
     *
     * <code>int32 NormalLotteryFreeTime = 32;</code>
     * @return The normalLotteryFreeTime.
     */
    @java.lang.Override
    public int getNormalLotteryFreeTime() {
      return normalLotteryFreeTime_;
    }

    public static final int SPECIALLOTTERYFREETIME_FIELD_NUMBER = 33;
    private int specialLotteryFreeTime_;
    /**
     * <pre>
     * 氪金免费召唤冷却时间，单位：分钟
     * </pre>
     *
     * <code>int32 SpecialLotteryFreeTime = 33;</code>
     * @return The specialLotteryFreeTime.
     */
    @java.lang.Override
    public int getSpecialLotteryFreeTime() {
      return specialLotteryFreeTime_;
    }

    public static final int LOTTERYTICKETDIAMONDCOST_FIELD_NUMBER = 34;
    private int lotteryTicketDiamondCost_;
    /**
     * <pre>
     * 单张抽卡券消耗的钻石
     * </pre>
     *
     * <code>int32 LotteryTicketDiamondCost = 34;</code>
     * @return The lotteryTicketDiamondCost.
     */
    @java.lang.Override
    public int getLotteryTicketDiamondCost() {
      return lotteryTicketDiamondCost_;
    }

    public static final int GUILDICONS_FIELD_NUMBER = 35;
    private com.google.protobuf.LazyStringList guildIcons_;
    /**
     * <pre>
     * 公会图标（最多配置12个）
     * </pre>
     *
     * <code>repeated string GuildIcons = 35;</code>
     * @return A list containing the guildIcons.
     */
    public com.google.protobuf.ProtocolStringList
        getGuildIconsList() {
      return guildIcons_;
    }
    /**
     * <pre>
     * 公会图标（最多配置12个）
     * </pre>
     *
     * <code>repeated string GuildIcons = 35;</code>
     * @return The count of guildIcons.
     */
    public int getGuildIconsCount() {
      return guildIcons_.size();
    }
    /**
     * <pre>
     * 公会图标（最多配置12个）
     * </pre>
     *
     * <code>repeated string GuildIcons = 35;</code>
     * @param index The index of the element to return.
     * @return The guildIcons at the given index.
     */
    public java.lang.String getGuildIcons(int index) {
      return guildIcons_.get(index);
    }
    /**
     * <pre>
     * 公会图标（最多配置12个）
     * </pre>
     *
     * <code>repeated string GuildIcons = 35;</code>
     * @param index The index of the value to return.
     * @return The bytes of the guildIcons at the given index.
     */
    public com.google.protobuf.ByteString
        getGuildIconsBytes(int index) {
      return guildIcons_.getByteString(index);
    }

    public static final int GUILDSEEKHELPNUM_FIELD_NUMBER = 36;
    private int guildSeekHelpNum_;
    /**
     * <pre>
     * 公会援助请求次数（每日00：00刷新）
     * </pre>
     *
     * <code>int32 GuildSeekHelpNum = 36;</code>
     * @return The guildSeekHelpNum.
     */
    @java.lang.Override
    public int getGuildSeekHelpNum() {
      return guildSeekHelpNum_;
    }

    public static final int TAVERNTASKBRISK_FIELD_NUMBER = 37;
    private int tavernTaskBrisk_;
    /**
     * <pre>
     * 酒馆任务给工会增加活跃度
     * </pre>
     *
     * <code>int32 TavernTaskBrisk = 37;</code>
     * @return The tavernTaskBrisk.
     */
    @java.lang.Override
    public int getTavernTaskBrisk() {
      return tavernTaskBrisk_;
    }

    public static final int GVEMAPBATTLECOUNT_FIELD_NUMBER = 38;
    private int gveMapBattleCount_;
    /**
     * <pre>
     * 工会副本每天每个委托可挑战次数
     * </pre>
     *
     * <code>int32 GveMapBattleCount = 38;</code>
     * @return The gveMapBattleCount.
     */
    @java.lang.Override
    public int getGveMapBattleCount() {
      return gveMapBattleCount_;
    }

    public static final int GVEDUPLICATECARDELEMENTCOUNTS_FIELD_NUMBER = 39;
    private com.google.protobuf.Internal.IntList gveDuplicateCardElementCounts_;
    /**
     * <pre>
     * 公会副本玩家牌库地、水、火、风各元素卡牌数量（总和四元素相加总数）
     * </pre>
     *
     * <code>repeated int32 GveDuplicateCardElementCounts = 39;</code>
     * @return A list containing the gveDuplicateCardElementCounts.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getGveDuplicateCardElementCountsList() {
      return gveDuplicateCardElementCounts_;
    }
    /**
     * <pre>
     * 公会副本玩家牌库地、水、火、风各元素卡牌数量（总和四元素相加总数）
     * </pre>
     *
     * <code>repeated int32 GveDuplicateCardElementCounts = 39;</code>
     * @return The count of gveDuplicateCardElementCounts.
     */
    public int getGveDuplicateCardElementCountsCount() {
      return gveDuplicateCardElementCounts_.size();
    }
    /**
     * <pre>
     * 公会副本玩家牌库地、水、火、风各元素卡牌数量（总和四元素相加总数）
     * </pre>
     *
     * <code>repeated int32 GveDuplicateCardElementCounts = 39;</code>
     * @param index The index of the element to return.
     * @return The gveDuplicateCardElementCounts at the given index.
     */
    public int getGveDuplicateCardElementCounts(int index) {
      return gveDuplicateCardElementCounts_.getInt(index);
    }
    private int gveDuplicateCardElementCountsMemoizedSerializedSize = -1;

    public static final int GVEDUPLICATEHANDCARD_FIELD_NUMBER = 40;
    private int gveDuplicateHandCard_;
    /**
     * <pre>
     * 公会副本玩家每回合补充手牌的最大数量
     * </pre>
     *
     * <code>int32 GveDuplicateHandCard = 40;</code>
     * @return The gveDuplicateHandCard.
     */
    @java.lang.Override
    public int getGveDuplicateHandCard() {
      return gveDuplicateHandCard_;
    }

    public static final int GVEDUPLICATEROUNDTIME_FIELD_NUMBER = 41;
    private int gveDuplicateRoundTime_;
    /**
     * <pre>
     * 公会副本回合准备时间
     * </pre>
     *
     * <code>int32 GveDuplicateRoundTime = 41;</code>
     * @return The gveDuplicateRoundTime.
     */
    @java.lang.Override
    public int getGveDuplicateRoundTime() {
      return gveDuplicateRoundTime_;
    }

    public static final int GVEDUPLICATEWINDELETECARDCOUNT_FIELD_NUMBER = 42;
    private int gveDuplicateWinDeleteCardCount_;
    /**
     * <pre>
     * 公会副本胜利移除卡牌数量
     * </pre>
     *
     * <code>int32 GveDuplicateWinDeleteCardCount = 42;</code>
     * @return The gveDuplicateWinDeleteCardCount.
     */
    @java.lang.Override
    public int getGveDuplicateWinDeleteCardCount() {
      return gveDuplicateWinDeleteCardCount_;
    }

    public static final int GVEDUPLICATELOSEDELETECARDCOUNT_FIELD_NUMBER = 43;
    private int gveDuplicateLoseDeleteCardCount_;
    /**
     * <pre>
     * 公会副本失败移除卡牌数量
     * </pre>
     *
     * <code>int32 GveDuplicateLoseDeleteCardCount = 43;</code>
     * @return The gveDuplicateLoseDeleteCardCount.
     */
    @java.lang.Override
    public int getGveDuplicateLoseDeleteCardCount() {
      return gveDuplicateLoseDeleteCardCount_;
    }

    public static final int GVEDUPLICATEOVERCARDCOUNT_FIELD_NUMBER = 44;
    private int gveDuplicateOverCardCount_;
    /**
     * <pre>
     * 公会副本结束判定任意一方移除卡排数量大于等于该值
     * </pre>
     *
     * <code>int32 GveDuplicateOverCardCount = 44;</code>
     * @return The gveDuplicateOverCardCount.
     */
    @java.lang.Override
    public int getGveDuplicateOverCardCount() {
      return gveDuplicateOverCardCount_;
    }

    public static final int GVEDUPLICATEBOSSLOSSHPCOUNT_FIELD_NUMBER = 45;
    private int gveDuplicateBossLossHpCount_;
    /**
     * <pre>
     * 公会副本每张牌扣除BOSS血量系数
     * </pre>
     *
     * <code>int32 GveDuplicateBossLossHpCount = 45;</code>
     * @return The gveDuplicateBossLossHpCount.
     */
    @java.lang.Override
    public int getGveDuplicateBossLossHpCount() {
      return gveDuplicateBossLossHpCount_;
    }

    public static final int GVEDUPLICATEREWARDGOLD_FIELD_NUMBER = 46;
    private int gveDuplicateRewardGold_;
    /**
     * <pre>
     * 公会副本对BOSS每造成1点伤害获得金币系数
     * </pre>
     *
     * <code>int32 GveDuplicateRewardGold = 46;</code>
     * @return The gveDuplicateRewardGold.
     */
    @java.lang.Override
    public int getGveDuplicateRewardGold() {
      return gveDuplicateRewardGold_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (nameLimit_ != 0) {
        output.writeInt32(1, nameLimit_);
      }
      if (defaultDropGroup_ != 0) {
        output.writeInt32(2, defaultDropGroup_);
      }
      if (changeNameCost_ != 0) {
        output.writeInt32(3, changeNameCost_);
      }
      if (playeEnergyRecoverTime_ != 0) {
        output.writeInt32(4, playeEnergyRecoverTime_);
      }
      for (int i = 0; i < fieldHeroNumLimits_.size(); i++) {
        output.writeMessage(5, fieldHeroNumLimits_.get(i));
      }
      if (formationNameLimit_ != 0) {
        output.writeInt32(6, formationNameLimit_);
      }
      if (formationCareerLimit_ != 0) {
        output.writeInt32(7, formationCareerLimit_);
      }
      if (getInitialFormaitonHerosList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(initialFormaitonHerosMemoizedSerializedSize);
      }
      for (int i = 0; i < initialFormaitonHeros_.size(); i++) {
        output.writeInt32NoTag(initialFormaitonHeros_.getInt(i));
      }
      if (formationCount_ != 0) {
        output.writeInt32(9, formationCount_);
      }
      if (heroNormalTalentCountLimit_ != false) {
        output.writeBool(10, heroNormalTalentCountLimit_);
      }
      if (heroHealthCorrectionBase_ != false) {
        output.writeBool(11, heroHealthCorrectionBase_);
      }
      if (heroHealthCorrectionCoe_ != 0D) {
        output.writeDouble(12, heroHealthCorrectionCoe_);
      }
      if (heroAttackCorrectionBase_ != 0) {
        output.writeInt32(13, heroAttackCorrectionBase_);
      }
      if (heroAttackCorrectionCoe_ != 0D) {
        output.writeDouble(14, heroAttackCorrectionCoe_);
      }
      if (heroDodgeCorrectionBase_ != 0) {
        output.writeInt32(15, heroDodgeCorrectionBase_);
      }
      if (heroDodgeCorrectionCoe_ != 0D) {
        output.writeDouble(16, heroDodgeCorrectionCoe_);
      }
      if (heroCritCorrectionBase_ != 0) {
        output.writeInt32(17, heroCritCorrectionBase_);
      }
      if (heroCritCorrectionCoe_ != 0D) {
        output.writeDouble(18, heroCritCorrectionCoe_);
      }
      if (heroBlckCorrectionBase_ != 0) {
        output.writeInt32(19, heroBlckCorrectionBase_);
      }
      if (heroBlckCorrectionCoe_ != 0D) {
        output.writeDouble(20, heroBlckCorrectionCoe_);
      }
      if (heroAttributeEvaluation_ != null) {
        output.writeMessage(21, getHeroAttributeEvaluation());
      }
      if (getHeroLevelLimitsList().size() > 0) {
        output.writeUInt32NoTag(178);
        output.writeUInt32NoTag(heroLevelLimitsMemoizedSerializedSize);
      }
      for (int i = 0; i < heroLevelLimits_.size(); i++) {
        output.writeInt32NoTag(heroLevelLimits_.getInt(i));
      }
      if (heroStarLimit_ != 0) {
        output.writeInt32(23, heroStarLimit_);
      }
      if (getHeroStarUpNeedCardsList().size() > 0) {
        output.writeUInt32NoTag(194);
        output.writeUInt32NoTag(heroStarUpNeedCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < heroStarUpNeedCards_.size(); i++) {
        output.writeInt32NoTag(heroStarUpNeedCards_.getInt(i));
      }
      if (getHeroStarUpNeedGoldsList().size() > 0) {
        output.writeUInt32NoTag(202);
        output.writeUInt32NoTag(heroStarUpNeedGoldsMemoizedSerializedSize);
      }
      for (int i = 0; i < heroStarUpNeedGolds_.size(); i++) {
        output.writeInt32NoTag(heroStarUpNeedGolds_.getInt(i));
      }
      if (getHeroStarUpGainNormalTalentsList().size() > 0) {
        output.writeUInt32NoTag(210);
        output.writeUInt32NoTag(heroStarUpGainNormalTalentsMemoizedSerializedSize);
      }
      for (int i = 0; i < heroStarUpGainNormalTalents_.size(); i++) {
        output.writeInt32NoTag(heroStarUpGainNormalTalents_.getInt(i));
      }
      if (getHeroStarUpCancelGiveCardsList().size() > 0) {
        output.writeUInt32NoTag(218);
        output.writeUInt32NoTag(heroStarUpCancelGiveCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < heroStarUpCancelGiveCards_.size(); i++) {
        output.writeInt32NoTag(heroStarUpCancelGiveCards_.getInt(i));
      }
      if (heroStarUpCancelGiveGold_ != 0D) {
        output.writeDouble(28, heroStarUpCancelGiveGold_);
      }
      if (getHeroLearningNeedGoldsList().size() > 0) {
        output.writeUInt32NoTag(234);
        output.writeUInt32NoTag(heroLearningNeedGoldsMemoizedSerializedSize);
      }
      for (int i = 0; i < heroLearningNeedGolds_.size(); i++) {
        output.writeInt32NoTag(heroLearningNeedGolds_.getInt(i));
      }
      for (int i = 0; i < heroClassNeedCards_.size(); i++) {
        output.writeMessage(30, heroClassNeedCards_.get(i));
      }
      if (heroSkillTrainingGiveExpCoe_ != 0D) {
        output.writeDouble(31, heroSkillTrainingGiveExpCoe_);
      }
      if (normalLotteryFreeTime_ != 0) {
        output.writeInt32(32, normalLotteryFreeTime_);
      }
      if (specialLotteryFreeTime_ != 0) {
        output.writeInt32(33, specialLotteryFreeTime_);
      }
      if (lotteryTicketDiamondCost_ != 0) {
        output.writeInt32(34, lotteryTicketDiamondCost_);
      }
      for (int i = 0; i < guildIcons_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 35, guildIcons_.getRaw(i));
      }
      if (guildSeekHelpNum_ != 0) {
        output.writeInt32(36, guildSeekHelpNum_);
      }
      if (tavernTaskBrisk_ != 0) {
        output.writeInt32(37, tavernTaskBrisk_);
      }
      if (gveMapBattleCount_ != 0) {
        output.writeInt32(38, gveMapBattleCount_);
      }
      if (getGveDuplicateCardElementCountsList().size() > 0) {
        output.writeUInt32NoTag(314);
        output.writeUInt32NoTag(gveDuplicateCardElementCountsMemoizedSerializedSize);
      }
      for (int i = 0; i < gveDuplicateCardElementCounts_.size(); i++) {
        output.writeInt32NoTag(gveDuplicateCardElementCounts_.getInt(i));
      }
      if (gveDuplicateHandCard_ != 0) {
        output.writeInt32(40, gveDuplicateHandCard_);
      }
      if (gveDuplicateRoundTime_ != 0) {
        output.writeInt32(41, gveDuplicateRoundTime_);
      }
      if (gveDuplicateWinDeleteCardCount_ != 0) {
        output.writeInt32(42, gveDuplicateWinDeleteCardCount_);
      }
      if (gveDuplicateLoseDeleteCardCount_ != 0) {
        output.writeInt32(43, gveDuplicateLoseDeleteCardCount_);
      }
      if (gveDuplicateOverCardCount_ != 0) {
        output.writeInt32(44, gveDuplicateOverCardCount_);
      }
      if (gveDuplicateBossLossHpCount_ != 0) {
        output.writeInt32(45, gveDuplicateBossLossHpCount_);
      }
      if (gveDuplicateRewardGold_ != 0) {
        output.writeInt32(46, gveDuplicateRewardGold_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nameLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, nameLimit_);
      }
      if (defaultDropGroup_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, defaultDropGroup_);
      }
      if (changeNameCost_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, changeNameCost_);
      }
      if (playeEnergyRecoverTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, playeEnergyRecoverTime_);
      }
      for (int i = 0; i < fieldHeroNumLimits_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, fieldHeroNumLimits_.get(i));
      }
      if (formationNameLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, formationNameLimit_);
      }
      if (formationCareerLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, formationCareerLimit_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < initialFormaitonHeros_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(initialFormaitonHeros_.getInt(i));
        }
        size += dataSize;
        if (!getInitialFormaitonHerosList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        initialFormaitonHerosMemoizedSerializedSize = dataSize;
      }
      if (formationCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, formationCount_);
      }
      if (heroNormalTalentCountLimit_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, heroNormalTalentCountLimit_);
      }
      if (heroHealthCorrectionBase_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, heroHealthCorrectionBase_);
      }
      if (heroHealthCorrectionCoe_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, heroHealthCorrectionCoe_);
      }
      if (heroAttackCorrectionBase_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, heroAttackCorrectionBase_);
      }
      if (heroAttackCorrectionCoe_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, heroAttackCorrectionCoe_);
      }
      if (heroDodgeCorrectionBase_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, heroDodgeCorrectionBase_);
      }
      if (heroDodgeCorrectionCoe_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, heroDodgeCorrectionCoe_);
      }
      if (heroCritCorrectionBase_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, heroCritCorrectionBase_);
      }
      if (heroCritCorrectionCoe_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(18, heroCritCorrectionCoe_);
      }
      if (heroBlckCorrectionBase_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, heroBlckCorrectionBase_);
      }
      if (heroBlckCorrectionCoe_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(20, heroBlckCorrectionCoe_);
      }
      if (heroAttributeEvaluation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getHeroAttributeEvaluation());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < heroLevelLimits_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(heroLevelLimits_.getInt(i));
        }
        size += dataSize;
        if (!getHeroLevelLimitsList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        heroLevelLimitsMemoizedSerializedSize = dataSize;
      }
      if (heroStarLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, heroStarLimit_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < heroStarUpNeedCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(heroStarUpNeedCards_.getInt(i));
        }
        size += dataSize;
        if (!getHeroStarUpNeedCardsList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        heroStarUpNeedCardsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < heroStarUpNeedGolds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(heroStarUpNeedGolds_.getInt(i));
        }
        size += dataSize;
        if (!getHeroStarUpNeedGoldsList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        heroStarUpNeedGoldsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < heroStarUpGainNormalTalents_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(heroStarUpGainNormalTalents_.getInt(i));
        }
        size += dataSize;
        if (!getHeroStarUpGainNormalTalentsList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        heroStarUpGainNormalTalentsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < heroStarUpCancelGiveCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(heroStarUpCancelGiveCards_.getInt(i));
        }
        size += dataSize;
        if (!getHeroStarUpCancelGiveCardsList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        heroStarUpCancelGiveCardsMemoizedSerializedSize = dataSize;
      }
      if (heroStarUpCancelGiveGold_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(28, heroStarUpCancelGiveGold_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < heroLearningNeedGolds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(heroLearningNeedGolds_.getInt(i));
        }
        size += dataSize;
        if (!getHeroLearningNeedGoldsList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        heroLearningNeedGoldsMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < heroClassNeedCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, heroClassNeedCards_.get(i));
      }
      if (heroSkillTrainingGiveExpCoe_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(31, heroSkillTrainingGiveExpCoe_);
      }
      if (normalLotteryFreeTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(32, normalLotteryFreeTime_);
      }
      if (specialLotteryFreeTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, specialLotteryFreeTime_);
      }
      if (lotteryTicketDiamondCost_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, lotteryTicketDiamondCost_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < guildIcons_.size(); i++) {
          dataSize += computeStringSizeNoTag(guildIcons_.getRaw(i));
        }
        size += dataSize;
        size += 2 * getGuildIconsList().size();
      }
      if (guildSeekHelpNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(36, guildSeekHelpNum_);
      }
      if (tavernTaskBrisk_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(37, tavernTaskBrisk_);
      }
      if (gveMapBattleCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(38, gveMapBattleCount_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gveDuplicateCardElementCounts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gveDuplicateCardElementCounts_.getInt(i));
        }
        size += dataSize;
        if (!getGveDuplicateCardElementCountsList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        gveDuplicateCardElementCountsMemoizedSerializedSize = dataSize;
      }
      if (gveDuplicateHandCard_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(40, gveDuplicateHandCard_);
      }
      if (gveDuplicateRoundTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(41, gveDuplicateRoundTime_);
      }
      if (gveDuplicateWinDeleteCardCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(42, gveDuplicateWinDeleteCardCount_);
      }
      if (gveDuplicateLoseDeleteCardCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(43, gveDuplicateLoseDeleteCardCount_);
      }
      if (gveDuplicateOverCardCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(44, gveDuplicateOverCardCount_);
      }
      if (gveDuplicateBossLossHpCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(45, gveDuplicateBossLossHpCount_);
      }
      if (gveDuplicateRewardGold_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(46, gveDuplicateRewardGold_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Config.GlobalTemplateOuterClass.GlobalTemplate)) {
        return super.equals(obj);
      }
      Config.GlobalTemplateOuterClass.GlobalTemplate other = (Config.GlobalTemplateOuterClass.GlobalTemplate) obj;

      if (getNameLimit()
          != other.getNameLimit()) return false;
      if (getDefaultDropGroup()
          != other.getDefaultDropGroup()) return false;
      if (getChangeNameCost()
          != other.getChangeNameCost()) return false;
      if (getPlayeEnergyRecoverTime()
          != other.getPlayeEnergyRecoverTime()) return false;
      if (!getFieldHeroNumLimitsList()
          .equals(other.getFieldHeroNumLimitsList())) return false;
      if (getFormationNameLimit()
          != other.getFormationNameLimit()) return false;
      if (getFormationCareerLimit()
          != other.getFormationCareerLimit()) return false;
      if (!getInitialFormaitonHerosList()
          .equals(other.getInitialFormaitonHerosList())) return false;
      if (getFormationCount()
          != other.getFormationCount()) return false;
      if (getHeroNormalTalentCountLimit()
          != other.getHeroNormalTalentCountLimit()) return false;
      if (getHeroHealthCorrectionBase()
          != other.getHeroHealthCorrectionBase()) return false;
      if (java.lang.Double.doubleToLongBits(getHeroHealthCorrectionCoe())
          != java.lang.Double.doubleToLongBits(
              other.getHeroHealthCorrectionCoe())) return false;
      if (getHeroAttackCorrectionBase()
          != other.getHeroAttackCorrectionBase()) return false;
      if (java.lang.Double.doubleToLongBits(getHeroAttackCorrectionCoe())
          != java.lang.Double.doubleToLongBits(
              other.getHeroAttackCorrectionCoe())) return false;
      if (getHeroDodgeCorrectionBase()
          != other.getHeroDodgeCorrectionBase()) return false;
      if (java.lang.Double.doubleToLongBits(getHeroDodgeCorrectionCoe())
          != java.lang.Double.doubleToLongBits(
              other.getHeroDodgeCorrectionCoe())) return false;
      if (getHeroCritCorrectionBase()
          != other.getHeroCritCorrectionBase()) return false;
      if (java.lang.Double.doubleToLongBits(getHeroCritCorrectionCoe())
          != java.lang.Double.doubleToLongBits(
              other.getHeroCritCorrectionCoe())) return false;
      if (getHeroBlckCorrectionBase()
          != other.getHeroBlckCorrectionBase()) return false;
      if (java.lang.Double.doubleToLongBits(getHeroBlckCorrectionCoe())
          != java.lang.Double.doubleToLongBits(
              other.getHeroBlckCorrectionCoe())) return false;
      if (hasHeroAttributeEvaluation() != other.hasHeroAttributeEvaluation()) return false;
      if (hasHeroAttributeEvaluation()) {
        if (!getHeroAttributeEvaluation()
            .equals(other.getHeroAttributeEvaluation())) return false;
      }
      if (!getHeroLevelLimitsList()
          .equals(other.getHeroLevelLimitsList())) return false;
      if (getHeroStarLimit()
          != other.getHeroStarLimit()) return false;
      if (!getHeroStarUpNeedCardsList()
          .equals(other.getHeroStarUpNeedCardsList())) return false;
      if (!getHeroStarUpNeedGoldsList()
          .equals(other.getHeroStarUpNeedGoldsList())) return false;
      if (!getHeroStarUpGainNormalTalentsList()
          .equals(other.getHeroStarUpGainNormalTalentsList())) return false;
      if (!getHeroStarUpCancelGiveCardsList()
          .equals(other.getHeroStarUpCancelGiveCardsList())) return false;
      if (java.lang.Double.doubleToLongBits(getHeroStarUpCancelGiveGold())
          != java.lang.Double.doubleToLongBits(
              other.getHeroStarUpCancelGiveGold())) return false;
      if (!getHeroLearningNeedGoldsList()
          .equals(other.getHeroLearningNeedGoldsList())) return false;
      if (!getHeroClassNeedCardsList()
          .equals(other.getHeroClassNeedCardsList())) return false;
      if (java.lang.Double.doubleToLongBits(getHeroSkillTrainingGiveExpCoe())
          != java.lang.Double.doubleToLongBits(
              other.getHeroSkillTrainingGiveExpCoe())) return false;
      if (getNormalLotteryFreeTime()
          != other.getNormalLotteryFreeTime()) return false;
      if (getSpecialLotteryFreeTime()
          != other.getSpecialLotteryFreeTime()) return false;
      if (getLotteryTicketDiamondCost()
          != other.getLotteryTicketDiamondCost()) return false;
      if (!getGuildIconsList()
          .equals(other.getGuildIconsList())) return false;
      if (getGuildSeekHelpNum()
          != other.getGuildSeekHelpNum()) return false;
      if (getTavernTaskBrisk()
          != other.getTavernTaskBrisk()) return false;
      if (getGveMapBattleCount()
          != other.getGveMapBattleCount()) return false;
      if (!getGveDuplicateCardElementCountsList()
          .equals(other.getGveDuplicateCardElementCountsList())) return false;
      if (getGveDuplicateHandCard()
          != other.getGveDuplicateHandCard()) return false;
      if (getGveDuplicateRoundTime()
          != other.getGveDuplicateRoundTime()) return false;
      if (getGveDuplicateWinDeleteCardCount()
          != other.getGveDuplicateWinDeleteCardCount()) return false;
      if (getGveDuplicateLoseDeleteCardCount()
          != other.getGveDuplicateLoseDeleteCardCount()) return false;
      if (getGveDuplicateOverCardCount()
          != other.getGveDuplicateOverCardCount()) return false;
      if (getGveDuplicateBossLossHpCount()
          != other.getGveDuplicateBossLossHpCount()) return false;
      if (getGveDuplicateRewardGold()
          != other.getGveDuplicateRewardGold()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAMELIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getNameLimit();
      hash = (37 * hash) + DEFAULTDROPGROUP_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultDropGroup();
      hash = (37 * hash) + CHANGENAMECOST_FIELD_NUMBER;
      hash = (53 * hash) + getChangeNameCost();
      hash = (37 * hash) + PLAYEENERGYRECOVERTIME_FIELD_NUMBER;
      hash = (53 * hash) + getPlayeEnergyRecoverTime();
      if (getFieldHeroNumLimitsCount() > 0) {
        hash = (37 * hash) + FIELDHERONUMLIMITS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldHeroNumLimitsList().hashCode();
      }
      hash = (37 * hash) + FORMATIONNAMELIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getFormationNameLimit();
      hash = (37 * hash) + FORMATIONCAREERLIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getFormationCareerLimit();
      if (getInitialFormaitonHerosCount() > 0) {
        hash = (37 * hash) + INITIALFORMAITONHEROS_FIELD_NUMBER;
        hash = (53 * hash) + getInitialFormaitonHerosList().hashCode();
      }
      hash = (37 * hash) + FORMATIONCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getFormationCount();
      hash = (37 * hash) + HERONORMALTALENTCOUNTLIMIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHeroNormalTalentCountLimit());
      hash = (37 * hash) + HEROHEALTHCORRECTIONBASE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHeroHealthCorrectionBase());
      hash = (37 * hash) + HEROHEALTHCORRECTIONCOE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getHeroHealthCorrectionCoe()));
      hash = (37 * hash) + HEROATTACKCORRECTIONBASE_FIELD_NUMBER;
      hash = (53 * hash) + getHeroAttackCorrectionBase();
      hash = (37 * hash) + HEROATTACKCORRECTIONCOE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getHeroAttackCorrectionCoe()));
      hash = (37 * hash) + HERODODGECORRECTIONBASE_FIELD_NUMBER;
      hash = (53 * hash) + getHeroDodgeCorrectionBase();
      hash = (37 * hash) + HERODODGECORRECTIONCOE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getHeroDodgeCorrectionCoe()));
      hash = (37 * hash) + HEROCRITCORRECTIONBASE_FIELD_NUMBER;
      hash = (53 * hash) + getHeroCritCorrectionBase();
      hash = (37 * hash) + HEROCRITCORRECTIONCOE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getHeroCritCorrectionCoe()));
      hash = (37 * hash) + HEROBLCKCORRECTIONBASE_FIELD_NUMBER;
      hash = (53 * hash) + getHeroBlckCorrectionBase();
      hash = (37 * hash) + HEROBLCKCORRECTIONCOE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getHeroBlckCorrectionCoe()));
      if (hasHeroAttributeEvaluation()) {
        hash = (37 * hash) + HEROATTRIBUTEEVALUATION_FIELD_NUMBER;
        hash = (53 * hash) + getHeroAttributeEvaluation().hashCode();
      }
      if (getHeroLevelLimitsCount() > 0) {
        hash = (37 * hash) + HEROLEVELLIMITS_FIELD_NUMBER;
        hash = (53 * hash) + getHeroLevelLimitsList().hashCode();
      }
      hash = (37 * hash) + HEROSTARLIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getHeroStarLimit();
      if (getHeroStarUpNeedCardsCount() > 0) {
        hash = (37 * hash) + HEROSTARUPNEEDCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getHeroStarUpNeedCardsList().hashCode();
      }
      if (getHeroStarUpNeedGoldsCount() > 0) {
        hash = (37 * hash) + HEROSTARUPNEEDGOLDS_FIELD_NUMBER;
        hash = (53 * hash) + getHeroStarUpNeedGoldsList().hashCode();
      }
      if (getHeroStarUpGainNormalTalentsCount() > 0) {
        hash = (37 * hash) + HEROSTARUPGAINNORMALTALENTS_FIELD_NUMBER;
        hash = (53 * hash) + getHeroStarUpGainNormalTalentsList().hashCode();
      }
      if (getHeroStarUpCancelGiveCardsCount() > 0) {
        hash = (37 * hash) + HEROSTARUPCANCELGIVECARDS_FIELD_NUMBER;
        hash = (53 * hash) + getHeroStarUpCancelGiveCardsList().hashCode();
      }
      hash = (37 * hash) + HEROSTARUPCANCELGIVEGOLD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getHeroStarUpCancelGiveGold()));
      if (getHeroLearningNeedGoldsCount() > 0) {
        hash = (37 * hash) + HEROLEARNINGNEEDGOLDS_FIELD_NUMBER;
        hash = (53 * hash) + getHeroLearningNeedGoldsList().hashCode();
      }
      if (getHeroClassNeedCardsCount() > 0) {
        hash = (37 * hash) + HEROCLASSNEEDCARDS_FIELD_NUMBER;
        hash = (53 * hash) + getHeroClassNeedCardsList().hashCode();
      }
      hash = (37 * hash) + HEROSKILLTRAININGGIVEEXPCOE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getHeroSkillTrainingGiveExpCoe()));
      hash = (37 * hash) + NORMALLOTTERYFREETIME_FIELD_NUMBER;
      hash = (53 * hash) + getNormalLotteryFreeTime();
      hash = (37 * hash) + SPECIALLOTTERYFREETIME_FIELD_NUMBER;
      hash = (53 * hash) + getSpecialLotteryFreeTime();
      hash = (37 * hash) + LOTTERYTICKETDIAMONDCOST_FIELD_NUMBER;
      hash = (53 * hash) + getLotteryTicketDiamondCost();
      if (getGuildIconsCount() > 0) {
        hash = (37 * hash) + GUILDICONS_FIELD_NUMBER;
        hash = (53 * hash) + getGuildIconsList().hashCode();
      }
      hash = (37 * hash) + GUILDSEEKHELPNUM_FIELD_NUMBER;
      hash = (53 * hash) + getGuildSeekHelpNum();
      hash = (37 * hash) + TAVERNTASKBRISK_FIELD_NUMBER;
      hash = (53 * hash) + getTavernTaskBrisk();
      hash = (37 * hash) + GVEMAPBATTLECOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getGveMapBattleCount();
      if (getGveDuplicateCardElementCountsCount() > 0) {
        hash = (37 * hash) + GVEDUPLICATECARDELEMENTCOUNTS_FIELD_NUMBER;
        hash = (53 * hash) + getGveDuplicateCardElementCountsList().hashCode();
      }
      hash = (37 * hash) + GVEDUPLICATEHANDCARD_FIELD_NUMBER;
      hash = (53 * hash) + getGveDuplicateHandCard();
      hash = (37 * hash) + GVEDUPLICATEROUNDTIME_FIELD_NUMBER;
      hash = (53 * hash) + getGveDuplicateRoundTime();
      hash = (37 * hash) + GVEDUPLICATEWINDELETECARDCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getGveDuplicateWinDeleteCardCount();
      hash = (37 * hash) + GVEDUPLICATELOSEDELETECARDCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getGveDuplicateLoseDeleteCardCount();
      hash = (37 * hash) + GVEDUPLICATEOVERCARDCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getGveDuplicateOverCardCount();
      hash = (37 * hash) + GVEDUPLICATEBOSSLOSSHPCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getGveDuplicateBossLossHpCount();
      hash = (37 * hash) + GVEDUPLICATEREWARDGOLD_FIELD_NUMBER;
      hash = (53 * hash) + getGveDuplicateRewardGold();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Config.GlobalTemplateOuterClass.GlobalTemplate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Config.GlobalTemplateOuterClass.GlobalTemplate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Config.GlobalTemplateOuterClass.GlobalTemplate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Config.GlobalTemplateOuterClass.GlobalTemplate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Config.GlobalTemplateOuterClass.GlobalTemplate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Config.GlobalTemplateOuterClass.GlobalTemplate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Config.GlobalTemplateOuterClass.GlobalTemplate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Config.GlobalTemplateOuterClass.GlobalTemplate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Config.GlobalTemplateOuterClass.GlobalTemplate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Config.GlobalTemplateOuterClass.GlobalTemplate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Config.GlobalTemplateOuterClass.GlobalTemplate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Config.GlobalTemplateOuterClass.GlobalTemplate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Config.GlobalTemplateOuterClass.GlobalTemplate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Config.GlobalTemplate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Config.GlobalTemplate)
        Config.GlobalTemplateOuterClass.GlobalTemplateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Config.GlobalTemplateOuterClass.GlobalTemplate.class, Config.GlobalTemplateOuterClass.GlobalTemplate.Builder.class);
      }

      // Construct using Config.GlobalTemplateOuterClass.GlobalTemplate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldHeroNumLimitsFieldBuilder();
          getHeroClassNeedCardsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        nameLimit_ = 0;

        defaultDropGroup_ = 0;

        changeNameCost_ = 0;

        playeEnergyRecoverTime_ = 0;

        if (fieldHeroNumLimitsBuilder_ == null) {
          fieldHeroNumLimits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fieldHeroNumLimitsBuilder_.clear();
        }
        formationNameLimit_ = 0;

        formationCareerLimit_ = 0;

        initialFormaitonHeros_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        formationCount_ = 0;

        heroNormalTalentCountLimit_ = false;

        heroHealthCorrectionBase_ = false;

        heroHealthCorrectionCoe_ = 0D;

        heroAttackCorrectionBase_ = 0;

        heroAttackCorrectionCoe_ = 0D;

        heroDodgeCorrectionBase_ = 0;

        heroDodgeCorrectionCoe_ = 0D;

        heroCritCorrectionBase_ = 0;

        heroCritCorrectionCoe_ = 0D;

        heroBlckCorrectionBase_ = 0;

        heroBlckCorrectionCoe_ = 0D;

        if (heroAttributeEvaluationBuilder_ == null) {
          heroAttributeEvaluation_ = null;
        } else {
          heroAttributeEvaluation_ = null;
          heroAttributeEvaluationBuilder_ = null;
        }
        heroLevelLimits_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        heroStarLimit_ = 0;

        heroStarUpNeedCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        heroStarUpNeedGolds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        heroStarUpGainNormalTalents_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        heroStarUpCancelGiveCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000040);
        heroStarUpCancelGiveGold_ = 0D;

        heroLearningNeedGolds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000080);
        if (heroClassNeedCardsBuilder_ == null) {
          heroClassNeedCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          heroClassNeedCardsBuilder_.clear();
        }
        heroSkillTrainingGiveExpCoe_ = 0D;

        normalLotteryFreeTime_ = 0;

        specialLotteryFreeTime_ = 0;

        lotteryTicketDiamondCost_ = 0;

        guildIcons_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        guildSeekHelpNum_ = 0;

        tavernTaskBrisk_ = 0;

        gveMapBattleCount_ = 0;

        gveDuplicateCardElementCounts_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000400);
        gveDuplicateHandCard_ = 0;

        gveDuplicateRoundTime_ = 0;

        gveDuplicateWinDeleteCardCount_ = 0;

        gveDuplicateLoseDeleteCardCount_ = 0;

        gveDuplicateOverCardCount_ = 0;

        gveDuplicateBossLossHpCount_ = 0;

        gveDuplicateRewardGold_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Config.GlobalTemplateOuterClass.internal_static_Config_GlobalTemplate_descriptor;
      }

      @java.lang.Override
      public Config.GlobalTemplateOuterClass.GlobalTemplate getDefaultInstanceForType() {
        return Config.GlobalTemplateOuterClass.GlobalTemplate.getDefaultInstance();
      }

      @java.lang.Override
      public Config.GlobalTemplateOuterClass.GlobalTemplate build() {
        Config.GlobalTemplateOuterClass.GlobalTemplate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public Config.GlobalTemplateOuterClass.GlobalTemplate buildPartial() {
        Config.GlobalTemplateOuterClass.GlobalTemplate result = new Config.GlobalTemplateOuterClass.GlobalTemplate(this);
        int from_bitField0_ = bitField0_;
        result.nameLimit_ = nameLimit_;
        result.defaultDropGroup_ = defaultDropGroup_;
        result.changeNameCost_ = changeNameCost_;
        result.playeEnergyRecoverTime_ = playeEnergyRecoverTime_;
        if (fieldHeroNumLimitsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            fieldHeroNumLimits_ = java.util.Collections.unmodifiableList(fieldHeroNumLimits_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fieldHeroNumLimits_ = fieldHeroNumLimits_;
        } else {
          result.fieldHeroNumLimits_ = fieldHeroNumLimitsBuilder_.build();
        }
        result.formationNameLimit_ = formationNameLimit_;
        result.formationCareerLimit_ = formationCareerLimit_;
        if (((bitField0_ & 0x00000002) != 0)) {
          initialFormaitonHeros_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.initialFormaitonHeros_ = initialFormaitonHeros_;
        result.formationCount_ = formationCount_;
        result.heroNormalTalentCountLimit_ = heroNormalTalentCountLimit_;
        result.heroHealthCorrectionBase_ = heroHealthCorrectionBase_;
        result.heroHealthCorrectionCoe_ = heroHealthCorrectionCoe_;
        result.heroAttackCorrectionBase_ = heroAttackCorrectionBase_;
        result.heroAttackCorrectionCoe_ = heroAttackCorrectionCoe_;
        result.heroDodgeCorrectionBase_ = heroDodgeCorrectionBase_;
        result.heroDodgeCorrectionCoe_ = heroDodgeCorrectionCoe_;
        result.heroCritCorrectionBase_ = heroCritCorrectionBase_;
        result.heroCritCorrectionCoe_ = heroCritCorrectionCoe_;
        result.heroBlckCorrectionBase_ = heroBlckCorrectionBase_;
        result.heroBlckCorrectionCoe_ = heroBlckCorrectionCoe_;
        if (heroAttributeEvaluationBuilder_ == null) {
          result.heroAttributeEvaluation_ = heroAttributeEvaluation_;
        } else {
          result.heroAttributeEvaluation_ = heroAttributeEvaluationBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          heroLevelLimits_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.heroLevelLimits_ = heroLevelLimits_;
        result.heroStarLimit_ = heroStarLimit_;
        if (((bitField0_ & 0x00000008) != 0)) {
          heroStarUpNeedCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.heroStarUpNeedCards_ = heroStarUpNeedCards_;
        if (((bitField0_ & 0x00000010) != 0)) {
          heroStarUpNeedGolds_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.heroStarUpNeedGolds_ = heroStarUpNeedGolds_;
        if (((bitField0_ & 0x00000020) != 0)) {
          heroStarUpGainNormalTalents_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.heroStarUpGainNormalTalents_ = heroStarUpGainNormalTalents_;
        if (((bitField0_ & 0x00000040) != 0)) {
          heroStarUpCancelGiveCards_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.heroStarUpCancelGiveCards_ = heroStarUpCancelGiveCards_;
        result.heroStarUpCancelGiveGold_ = heroStarUpCancelGiveGold_;
        if (((bitField0_ & 0x00000080) != 0)) {
          heroLearningNeedGolds_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.heroLearningNeedGolds_ = heroLearningNeedGolds_;
        if (heroClassNeedCardsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0)) {
            heroClassNeedCards_ = java.util.Collections.unmodifiableList(heroClassNeedCards_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.heroClassNeedCards_ = heroClassNeedCards_;
        } else {
          result.heroClassNeedCards_ = heroClassNeedCardsBuilder_.build();
        }
        result.heroSkillTrainingGiveExpCoe_ = heroSkillTrainingGiveExpCoe_;
        result.normalLotteryFreeTime_ = normalLotteryFreeTime_;
        result.specialLotteryFreeTime_ = specialLotteryFreeTime_;
        result.lotteryTicketDiamondCost_ = lotteryTicketDiamondCost_;
        if (((bitField0_ & 0x00000200) != 0)) {
          guildIcons_ = guildIcons_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.guildIcons_ = guildIcons_;
        result.guildSeekHelpNum_ = guildSeekHelpNum_;
        result.tavernTaskBrisk_ = tavernTaskBrisk_;
        result.gveMapBattleCount_ = gveMapBattleCount_;
        if (((bitField0_ & 0x00000400) != 0)) {
          gveDuplicateCardElementCounts_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.gveDuplicateCardElementCounts_ = gveDuplicateCardElementCounts_;
        result.gveDuplicateHandCard_ = gveDuplicateHandCard_;
        result.gveDuplicateRoundTime_ = gveDuplicateRoundTime_;
        result.gveDuplicateWinDeleteCardCount_ = gveDuplicateWinDeleteCardCount_;
        result.gveDuplicateLoseDeleteCardCount_ = gveDuplicateLoseDeleteCardCount_;
        result.gveDuplicateOverCardCount_ = gveDuplicateOverCardCount_;
        result.gveDuplicateBossLossHpCount_ = gveDuplicateBossLossHpCount_;
        result.gveDuplicateRewardGold_ = gveDuplicateRewardGold_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Config.GlobalTemplateOuterClass.GlobalTemplate) {
          return mergeFrom((Config.GlobalTemplateOuterClass.GlobalTemplate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Config.GlobalTemplateOuterClass.GlobalTemplate other) {
        if (other == Config.GlobalTemplateOuterClass.GlobalTemplate.getDefaultInstance()) return this;
        if (other.getNameLimit() != 0) {
          setNameLimit(other.getNameLimit());
        }
        if (other.getDefaultDropGroup() != 0) {
          setDefaultDropGroup(other.getDefaultDropGroup());
        }
        if (other.getChangeNameCost() != 0) {
          setChangeNameCost(other.getChangeNameCost());
        }
        if (other.getPlayeEnergyRecoverTime() != 0) {
          setPlayeEnergyRecoverTime(other.getPlayeEnergyRecoverTime());
        }
        if (fieldHeroNumLimitsBuilder_ == null) {
          if (!other.fieldHeroNumLimits_.isEmpty()) {
            if (fieldHeroNumLimits_.isEmpty()) {
              fieldHeroNumLimits_ = other.fieldHeroNumLimits_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFieldHeroNumLimitsIsMutable();
              fieldHeroNumLimits_.addAll(other.fieldHeroNumLimits_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldHeroNumLimits_.isEmpty()) {
            if (fieldHeroNumLimitsBuilder_.isEmpty()) {
              fieldHeroNumLimitsBuilder_.dispose();
              fieldHeroNumLimitsBuilder_ = null;
              fieldHeroNumLimits_ = other.fieldHeroNumLimits_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fieldHeroNumLimitsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldHeroNumLimitsFieldBuilder() : null;
            } else {
              fieldHeroNumLimitsBuilder_.addAllMessages(other.fieldHeroNumLimits_);
            }
          }
        }
        if (other.getFormationNameLimit() != 0) {
          setFormationNameLimit(other.getFormationNameLimit());
        }
        if (other.getFormationCareerLimit() != 0) {
          setFormationCareerLimit(other.getFormationCareerLimit());
        }
        if (!other.initialFormaitonHeros_.isEmpty()) {
          if (initialFormaitonHeros_.isEmpty()) {
            initialFormaitonHeros_ = other.initialFormaitonHeros_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureInitialFormaitonHerosIsMutable();
            initialFormaitonHeros_.addAll(other.initialFormaitonHeros_);
          }
          onChanged();
        }
        if (other.getFormationCount() != 0) {
          setFormationCount(other.getFormationCount());
        }
        if (other.getHeroNormalTalentCountLimit() != false) {
          setHeroNormalTalentCountLimit(other.getHeroNormalTalentCountLimit());
        }
        if (other.getHeroHealthCorrectionBase() != false) {
          setHeroHealthCorrectionBase(other.getHeroHealthCorrectionBase());
        }
        if (other.getHeroHealthCorrectionCoe() != 0D) {
          setHeroHealthCorrectionCoe(other.getHeroHealthCorrectionCoe());
        }
        if (other.getHeroAttackCorrectionBase() != 0) {
          setHeroAttackCorrectionBase(other.getHeroAttackCorrectionBase());
        }
        if (other.getHeroAttackCorrectionCoe() != 0D) {
          setHeroAttackCorrectionCoe(other.getHeroAttackCorrectionCoe());
        }
        if (other.getHeroDodgeCorrectionBase() != 0) {
          setHeroDodgeCorrectionBase(other.getHeroDodgeCorrectionBase());
        }
        if (other.getHeroDodgeCorrectionCoe() != 0D) {
          setHeroDodgeCorrectionCoe(other.getHeroDodgeCorrectionCoe());
        }
        if (other.getHeroCritCorrectionBase() != 0) {
          setHeroCritCorrectionBase(other.getHeroCritCorrectionBase());
        }
        if (other.getHeroCritCorrectionCoe() != 0D) {
          setHeroCritCorrectionCoe(other.getHeroCritCorrectionCoe());
        }
        if (other.getHeroBlckCorrectionBase() != 0) {
          setHeroBlckCorrectionBase(other.getHeroBlckCorrectionBase());
        }
        if (other.getHeroBlckCorrectionCoe() != 0D) {
          setHeroBlckCorrectionCoe(other.getHeroBlckCorrectionCoe());
        }
        if (other.hasHeroAttributeEvaluation()) {
          mergeHeroAttributeEvaluation(other.getHeroAttributeEvaluation());
        }
        if (!other.heroLevelLimits_.isEmpty()) {
          if (heroLevelLimits_.isEmpty()) {
            heroLevelLimits_ = other.heroLevelLimits_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureHeroLevelLimitsIsMutable();
            heroLevelLimits_.addAll(other.heroLevelLimits_);
          }
          onChanged();
        }
        if (other.getHeroStarLimit() != 0) {
          setHeroStarLimit(other.getHeroStarLimit());
        }
        if (!other.heroStarUpNeedCards_.isEmpty()) {
          if (heroStarUpNeedCards_.isEmpty()) {
            heroStarUpNeedCards_ = other.heroStarUpNeedCards_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureHeroStarUpNeedCardsIsMutable();
            heroStarUpNeedCards_.addAll(other.heroStarUpNeedCards_);
          }
          onChanged();
        }
        if (!other.heroStarUpNeedGolds_.isEmpty()) {
          if (heroStarUpNeedGolds_.isEmpty()) {
            heroStarUpNeedGolds_ = other.heroStarUpNeedGolds_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureHeroStarUpNeedGoldsIsMutable();
            heroStarUpNeedGolds_.addAll(other.heroStarUpNeedGolds_);
          }
          onChanged();
        }
        if (!other.heroStarUpGainNormalTalents_.isEmpty()) {
          if (heroStarUpGainNormalTalents_.isEmpty()) {
            heroStarUpGainNormalTalents_ = other.heroStarUpGainNormalTalents_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureHeroStarUpGainNormalTalentsIsMutable();
            heroStarUpGainNormalTalents_.addAll(other.heroStarUpGainNormalTalents_);
          }
          onChanged();
        }
        if (!other.heroStarUpCancelGiveCards_.isEmpty()) {
          if (heroStarUpCancelGiveCards_.isEmpty()) {
            heroStarUpCancelGiveCards_ = other.heroStarUpCancelGiveCards_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureHeroStarUpCancelGiveCardsIsMutable();
            heroStarUpCancelGiveCards_.addAll(other.heroStarUpCancelGiveCards_);
          }
          onChanged();
        }
        if (other.getHeroStarUpCancelGiveGold() != 0D) {
          setHeroStarUpCancelGiveGold(other.getHeroStarUpCancelGiveGold());
        }
        if (!other.heroLearningNeedGolds_.isEmpty()) {
          if (heroLearningNeedGolds_.isEmpty()) {
            heroLearningNeedGolds_ = other.heroLearningNeedGolds_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureHeroLearningNeedGoldsIsMutable();
            heroLearningNeedGolds_.addAll(other.heroLearningNeedGolds_);
          }
          onChanged();
        }
        if (heroClassNeedCardsBuilder_ == null) {
          if (!other.heroClassNeedCards_.isEmpty()) {
            if (heroClassNeedCards_.isEmpty()) {
              heroClassNeedCards_ = other.heroClassNeedCards_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureHeroClassNeedCardsIsMutable();
              heroClassNeedCards_.addAll(other.heroClassNeedCards_);
            }
            onChanged();
          }
        } else {
          if (!other.heroClassNeedCards_.isEmpty()) {
            if (heroClassNeedCardsBuilder_.isEmpty()) {
              heroClassNeedCardsBuilder_.dispose();
              heroClassNeedCardsBuilder_ = null;
              heroClassNeedCards_ = other.heroClassNeedCards_;
              bitField0_ = (bitField0_ & ~0x00000100);
              heroClassNeedCardsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHeroClassNeedCardsFieldBuilder() : null;
            } else {
              heroClassNeedCardsBuilder_.addAllMessages(other.heroClassNeedCards_);
            }
          }
        }
        if (other.getHeroSkillTrainingGiveExpCoe() != 0D) {
          setHeroSkillTrainingGiveExpCoe(other.getHeroSkillTrainingGiveExpCoe());
        }
        if (other.getNormalLotteryFreeTime() != 0) {
          setNormalLotteryFreeTime(other.getNormalLotteryFreeTime());
        }
        if (other.getSpecialLotteryFreeTime() != 0) {
          setSpecialLotteryFreeTime(other.getSpecialLotteryFreeTime());
        }
        if (other.getLotteryTicketDiamondCost() != 0) {
          setLotteryTicketDiamondCost(other.getLotteryTicketDiamondCost());
        }
        if (!other.guildIcons_.isEmpty()) {
          if (guildIcons_.isEmpty()) {
            guildIcons_ = other.guildIcons_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureGuildIconsIsMutable();
            guildIcons_.addAll(other.guildIcons_);
          }
          onChanged();
        }
        if (other.getGuildSeekHelpNum() != 0) {
          setGuildSeekHelpNum(other.getGuildSeekHelpNum());
        }
        if (other.getTavernTaskBrisk() != 0) {
          setTavernTaskBrisk(other.getTavernTaskBrisk());
        }
        if (other.getGveMapBattleCount() != 0) {
          setGveMapBattleCount(other.getGveMapBattleCount());
        }
        if (!other.gveDuplicateCardElementCounts_.isEmpty()) {
          if (gveDuplicateCardElementCounts_.isEmpty()) {
            gveDuplicateCardElementCounts_ = other.gveDuplicateCardElementCounts_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureGveDuplicateCardElementCountsIsMutable();
            gveDuplicateCardElementCounts_.addAll(other.gveDuplicateCardElementCounts_);
          }
          onChanged();
        }
        if (other.getGveDuplicateHandCard() != 0) {
          setGveDuplicateHandCard(other.getGveDuplicateHandCard());
        }
        if (other.getGveDuplicateRoundTime() != 0) {
          setGveDuplicateRoundTime(other.getGveDuplicateRoundTime());
        }
        if (other.getGveDuplicateWinDeleteCardCount() != 0) {
          setGveDuplicateWinDeleteCardCount(other.getGveDuplicateWinDeleteCardCount());
        }
        if (other.getGveDuplicateLoseDeleteCardCount() != 0) {
          setGveDuplicateLoseDeleteCardCount(other.getGveDuplicateLoseDeleteCardCount());
        }
        if (other.getGveDuplicateOverCardCount() != 0) {
          setGveDuplicateOverCardCount(other.getGveDuplicateOverCardCount());
        }
        if (other.getGveDuplicateBossLossHpCount() != 0) {
          setGveDuplicateBossLossHpCount(other.getGveDuplicateBossLossHpCount());
        }
        if (other.getGveDuplicateRewardGold() != 0) {
          setGveDuplicateRewardGold(other.getGveDuplicateRewardGold());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Config.GlobalTemplateOuterClass.GlobalTemplate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Config.GlobalTemplateOuterClass.GlobalTemplate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int nameLimit_ ;
      /**
       * <pre>
       * 名字字数限制
       * </pre>
       *
       * <code>int32 NameLimit = 1;</code>
       * @return The nameLimit.
       */
      @java.lang.Override
      public int getNameLimit() {
        return nameLimit_;
      }
      /**
       * <pre>
       * 名字字数限制
       * </pre>
       *
       * <code>int32 NameLimit = 1;</code>
       * @param value The nameLimit to set.
       * @return This builder for chaining.
       */
      public Builder setNameLimit(int value) {
        
        nameLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 名字字数限制
       * </pre>
       *
       * <code>int32 NameLimit = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNameLimit() {
        
        nameLimit_ = 0;
        onChanged();
        return this;
      }

      private int defaultDropGroup_ ;
      /**
       * <pre>
       * 玩家进入游戏时初始获得物品掉落组
       * </pre>
       *
       * <code>int32 DefaultDropGroup = 2;</code>
       * @return The defaultDropGroup.
       */
      @java.lang.Override
      public int getDefaultDropGroup() {
        return defaultDropGroup_;
      }
      /**
       * <pre>
       * 玩家进入游戏时初始获得物品掉落组
       * </pre>
       *
       * <code>int32 DefaultDropGroup = 2;</code>
       * @param value The defaultDropGroup to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultDropGroup(int value) {
        
        defaultDropGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 玩家进入游戏时初始获得物品掉落组
       * </pre>
       *
       * <code>int32 DefaultDropGroup = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefaultDropGroup() {
        
        defaultDropGroup_ = 0;
        onChanged();
        return this;
      }

      private int changeNameCost_ ;
      /**
       * <pre>
       * 改名消耗（单位：宝石）
       * </pre>
       *
       * <code>int32 ChangeNameCost = 3;</code>
       * @return The changeNameCost.
       */
      @java.lang.Override
      public int getChangeNameCost() {
        return changeNameCost_;
      }
      /**
       * <pre>
       * 改名消耗（单位：宝石）
       * </pre>
       *
       * <code>int32 ChangeNameCost = 3;</code>
       * @param value The changeNameCost to set.
       * @return This builder for chaining.
       */
      public Builder setChangeNameCost(int value) {
        
        changeNameCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 改名消耗（单位：宝石）
       * </pre>
       *
       * <code>int32 ChangeNameCost = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearChangeNameCost() {
        
        changeNameCost_ = 0;
        onChanged();
        return this;
      }

      private int playeEnergyRecoverTime_ ;
      /**
       * <pre>
       * 每恢复一点体力所需时间（单位：分钟）
       * </pre>
       *
       * <code>int32 PlayeEnergyRecoverTime = 4;</code>
       * @return The playeEnergyRecoverTime.
       */
      @java.lang.Override
      public int getPlayeEnergyRecoverTime() {
        return playeEnergyRecoverTime_;
      }
      /**
       * <pre>
       * 每恢复一点体力所需时间（单位：分钟）
       * </pre>
       *
       * <code>int32 PlayeEnergyRecoverTime = 4;</code>
       * @param value The playeEnergyRecoverTime to set.
       * @return This builder for chaining.
       */
      public Builder setPlayeEnergyRecoverTime(int value) {
        
        playeEnergyRecoverTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 每恢复一点体力所需时间（单位：分钟）
       * </pre>
       *
       * <code>int32 PlayeEnergyRecoverTime = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlayeEnergyRecoverTime() {
        
        playeEnergyRecoverTime_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_> fieldHeroNumLimits_ =
        java.util.Collections.emptyList();
      private void ensureFieldHeroNumLimitsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          fieldHeroNumLimits_ = new java.util.ArrayList<Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_>(fieldHeroNumLimits_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_, Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.Builder, Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_OrBuilder> fieldHeroNumLimitsBuilder_;

      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public java.util.List<Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_> getFieldHeroNumLimitsList() {
        if (fieldHeroNumLimitsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldHeroNumLimits_);
        } else {
          return fieldHeroNumLimitsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public int getFieldHeroNumLimitsCount() {
        if (fieldHeroNumLimitsBuilder_ == null) {
          return fieldHeroNumLimits_.size();
        } else {
          return fieldHeroNumLimitsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ getFieldHeroNumLimits(int index) {
        if (fieldHeroNumLimitsBuilder_ == null) {
          return fieldHeroNumLimits_.get(index);
        } else {
          return fieldHeroNumLimitsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public Builder setFieldHeroNumLimits(
          int index, Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ value) {
        if (fieldHeroNumLimitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldHeroNumLimitsIsMutable();
          fieldHeroNumLimits_.set(index, value);
          onChanged();
        } else {
          fieldHeroNumLimitsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public Builder setFieldHeroNumLimits(
          int index, Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.Builder builderForValue) {
        if (fieldHeroNumLimitsBuilder_ == null) {
          ensureFieldHeroNumLimitsIsMutable();
          fieldHeroNumLimits_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldHeroNumLimitsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public Builder addFieldHeroNumLimits(Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ value) {
        if (fieldHeroNumLimitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldHeroNumLimitsIsMutable();
          fieldHeroNumLimits_.add(value);
          onChanged();
        } else {
          fieldHeroNumLimitsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public Builder addFieldHeroNumLimits(
          int index, Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_ value) {
        if (fieldHeroNumLimitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldHeroNumLimitsIsMutable();
          fieldHeroNumLimits_.add(index, value);
          onChanged();
        } else {
          fieldHeroNumLimitsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public Builder addFieldHeroNumLimits(
          Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.Builder builderForValue) {
        if (fieldHeroNumLimitsBuilder_ == null) {
          ensureFieldHeroNumLimitsIsMutable();
          fieldHeroNumLimits_.add(builderForValue.build());
          onChanged();
        } else {
          fieldHeroNumLimitsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public Builder addFieldHeroNumLimits(
          int index, Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.Builder builderForValue) {
        if (fieldHeroNumLimitsBuilder_ == null) {
          ensureFieldHeroNumLimitsIsMutable();
          fieldHeroNumLimits_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldHeroNumLimitsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public Builder addAllFieldHeroNumLimits(
          java.lang.Iterable<? extends Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_> values) {
        if (fieldHeroNumLimitsBuilder_ == null) {
          ensureFieldHeroNumLimitsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fieldHeroNumLimits_);
          onChanged();
        } else {
          fieldHeroNumLimitsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public Builder clearFieldHeroNumLimits() {
        if (fieldHeroNumLimitsBuilder_ == null) {
          fieldHeroNumLimits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fieldHeroNumLimitsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public Builder removeFieldHeroNumLimits(int index) {
        if (fieldHeroNumLimitsBuilder_ == null) {
          ensureFieldHeroNumLimitsIsMutable();
          fieldHeroNumLimits_.remove(index);
          onChanged();
        } else {
          fieldHeroNumLimitsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.Builder getFieldHeroNumLimitsBuilder(
          int index) {
        return getFieldHeroNumLimitsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_OrBuilder getFieldHeroNumLimitsOrBuilder(
          int index) {
        if (fieldHeroNumLimitsBuilder_ == null) {
          return fieldHeroNumLimits_.get(index);  } else {
          return fieldHeroNumLimitsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public java.util.List<? extends Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_OrBuilder> 
           getFieldHeroNumLimitsOrBuilderList() {
        if (fieldHeroNumLimitsBuilder_ != null) {
          return fieldHeroNumLimitsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldHeroNumLimits_);
        }
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.Builder addFieldHeroNumLimitsBuilder() {
        return getFieldHeroNumLimitsFieldBuilder().addBuilder(
            Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.getDefaultInstance());
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.Builder addFieldHeroNumLimitsBuilder(
          int index) {
        return getFieldHeroNumLimitsFieldBuilder().addBuilder(
            index, Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.getDefaultInstance());
      }
      /**
       * <pre>
       * 各等级可上阵英雄数量，现在的等级对应的是玩家等级
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;</code>
       */
      public java.util.List<Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.Builder> 
           getFieldHeroNumLimitsBuilderList() {
        return getFieldHeroNumLimitsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_, Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.Builder, Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_OrBuilder> 
          getFieldHeroNumLimitsFieldBuilder() {
        if (fieldHeroNumLimitsBuilder_ == null) {
          fieldHeroNumLimitsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_, Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_.Builder, Config.GlobalTemplateOuterClass.GlobalTemplate.Fieldheronumlimit_OrBuilder>(
                  fieldHeroNumLimits_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          fieldHeroNumLimits_ = null;
        }
        return fieldHeroNumLimitsBuilder_;
      }

      private int formationNameLimit_ ;
      /**
       * <pre>
       * 阵容名字字数限制
       * </pre>
       *
       * <code>int32 FormationNameLimit = 6;</code>
       * @return The formationNameLimit.
       */
      @java.lang.Override
      public int getFormationNameLimit() {
        return formationNameLimit_;
      }
      /**
       * <pre>
       * 阵容名字字数限制
       * </pre>
       *
       * <code>int32 FormationNameLimit = 6;</code>
       * @param value The formationNameLimit to set.
       * @return This builder for chaining.
       */
      public Builder setFormationNameLimit(int value) {
        
        formationNameLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 阵容名字字数限制
       * </pre>
       *
       * <code>int32 FormationNameLimit = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFormationNameLimit() {
        
        formationNameLimit_ = 0;
        onChanged();
        return this;
      }

      private int formationCareerLimit_ ;
      /**
       * <pre>
       * 同职业的魔物上阵不能超过x个
       * </pre>
       *
       * <code>int32 FormationCareerLimit = 7;</code>
       * @return The formationCareerLimit.
       */
      @java.lang.Override
      public int getFormationCareerLimit() {
        return formationCareerLimit_;
      }
      /**
       * <pre>
       * 同职业的魔物上阵不能超过x个
       * </pre>
       *
       * <code>int32 FormationCareerLimit = 7;</code>
       * @param value The formationCareerLimit to set.
       * @return This builder for chaining.
       */
      public Builder setFormationCareerLimit(int value) {
        
        formationCareerLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 同职业的魔物上阵不能超过x个
       * </pre>
       *
       * <code>int32 FormationCareerLimit = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearFormationCareerLimit() {
        
        formationCareerLimit_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList initialFormaitonHeros_ = emptyIntList();
      private void ensureInitialFormaitonHerosIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          initialFormaitonHeros_ = mutableCopy(initialFormaitonHeros_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * 队伍1-队伍3默认初始英雄及站位
       * </pre>
       *
       * <code>repeated int32 InitialFormaitonHeros = 8;</code>
       * @return A list containing the initialFormaitonHeros.
       */
      public java.util.List<java.lang.Integer>
          getInitialFormaitonHerosList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(initialFormaitonHeros_) : initialFormaitonHeros_;
      }
      /**
       * <pre>
       * 队伍1-队伍3默认初始英雄及站位
       * </pre>
       *
       * <code>repeated int32 InitialFormaitonHeros = 8;</code>
       * @return The count of initialFormaitonHeros.
       */
      public int getInitialFormaitonHerosCount() {
        return initialFormaitonHeros_.size();
      }
      /**
       * <pre>
       * 队伍1-队伍3默认初始英雄及站位
       * </pre>
       *
       * <code>repeated int32 InitialFormaitonHeros = 8;</code>
       * @param index The index of the element to return.
       * @return The initialFormaitonHeros at the given index.
       */
      public int getInitialFormaitonHeros(int index) {
        return initialFormaitonHeros_.getInt(index);
      }
      /**
       * <pre>
       * 队伍1-队伍3默认初始英雄及站位
       * </pre>
       *
       * <code>repeated int32 InitialFormaitonHeros = 8;</code>
       * @param index The index to set the value at.
       * @param value The initialFormaitonHeros to set.
       * @return This builder for chaining.
       */
      public Builder setInitialFormaitonHeros(
          int index, int value) {
        ensureInitialFormaitonHerosIsMutable();
        initialFormaitonHeros_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 队伍1-队伍3默认初始英雄及站位
       * </pre>
       *
       * <code>repeated int32 InitialFormaitonHeros = 8;</code>
       * @param value The initialFormaitonHeros to add.
       * @return This builder for chaining.
       */
      public Builder addInitialFormaitonHeros(int value) {
        ensureInitialFormaitonHerosIsMutable();
        initialFormaitonHeros_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 队伍1-队伍3默认初始英雄及站位
       * </pre>
       *
       * <code>repeated int32 InitialFormaitonHeros = 8;</code>
       * @param values The initialFormaitonHeros to add.
       * @return This builder for chaining.
       */
      public Builder addAllInitialFormaitonHeros(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInitialFormaitonHerosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, initialFormaitonHeros_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 队伍1-队伍3默认初始英雄及站位
       * </pre>
       *
       * <code>repeated int32 InitialFormaitonHeros = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearInitialFormaitonHeros() {
        initialFormaitonHeros_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int formationCount_ ;
      /**
       * <pre>
       * 玩家可设置X个队伍
       * </pre>
       *
       * <code>int32 FormationCount = 9;</code>
       * @return The formationCount.
       */
      @java.lang.Override
      public int getFormationCount() {
        return formationCount_;
      }
      /**
       * <pre>
       * 玩家可设置X个队伍
       * </pre>
       *
       * <code>int32 FormationCount = 9;</code>
       * @param value The formationCount to set.
       * @return This builder for chaining.
       */
      public Builder setFormationCount(int value) {
        
        formationCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 玩家可设置X个队伍
       * </pre>
       *
       * <code>int32 FormationCount = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearFormationCount() {
        
        formationCount_ = 0;
        onChanged();
        return this;
      }

      private boolean heroNormalTalentCountLimit_ ;
      /**
       * <pre>
       * 英雄普通奥义数量上限
       * </pre>
       *
       * <code>bool HeroNormalTalentCountLimit = 10;</code>
       * @return The heroNormalTalentCountLimit.
       */
      @java.lang.Override
      public boolean getHeroNormalTalentCountLimit() {
        return heroNormalTalentCountLimit_;
      }
      /**
       * <pre>
       * 英雄普通奥义数量上限
       * </pre>
       *
       * <code>bool HeroNormalTalentCountLimit = 10;</code>
       * @param value The heroNormalTalentCountLimit to set.
       * @return This builder for chaining.
       */
      public Builder setHeroNormalTalentCountLimit(boolean value) {
        
        heroNormalTalentCountLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄普通奥义数量上限
       * </pre>
       *
       * <code>bool HeroNormalTalentCountLimit = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroNormalTalentCountLimit() {
        
        heroNormalTalentCountLimit_ = false;
        onChanged();
        return this;
      }

      private boolean heroHealthCorrectionBase_ ;
      /**
       * <pre>
       * 英雄生命属性权重值
       * </pre>
       *
       * <code>bool HeroHealthCorrectionBase = 11;</code>
       * @return The heroHealthCorrectionBase.
       */
      @java.lang.Override
      public boolean getHeroHealthCorrectionBase() {
        return heroHealthCorrectionBase_;
      }
      /**
       * <pre>
       * 英雄生命属性权重值
       * </pre>
       *
       * <code>bool HeroHealthCorrectionBase = 11;</code>
       * @param value The heroHealthCorrectionBase to set.
       * @return This builder for chaining.
       */
      public Builder setHeroHealthCorrectionBase(boolean value) {
        
        heroHealthCorrectionBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄生命属性权重值
       * </pre>
       *
       * <code>bool HeroHealthCorrectionBase = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroHealthCorrectionBase() {
        
        heroHealthCorrectionBase_ = false;
        onChanged();
        return this;
      }

      private double heroHealthCorrectionCoe_ ;
      /**
       * <pre>
       * 英雄生命属性权重系数
       * </pre>
       *
       * <code>double HeroHealthCorrectionCoe = 12;</code>
       * @return The heroHealthCorrectionCoe.
       */
      @java.lang.Override
      public double getHeroHealthCorrectionCoe() {
        return heroHealthCorrectionCoe_;
      }
      /**
       * <pre>
       * 英雄生命属性权重系数
       * </pre>
       *
       * <code>double HeroHealthCorrectionCoe = 12;</code>
       * @param value The heroHealthCorrectionCoe to set.
       * @return This builder for chaining.
       */
      public Builder setHeroHealthCorrectionCoe(double value) {
        
        heroHealthCorrectionCoe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄生命属性权重系数
       * </pre>
       *
       * <code>double HeroHealthCorrectionCoe = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroHealthCorrectionCoe() {
        
        heroHealthCorrectionCoe_ = 0D;
        onChanged();
        return this;
      }

      private int heroAttackCorrectionBase_ ;
      /**
       * <pre>
       * 英雄攻击属性权重值
       * </pre>
       *
       * <code>int32 HeroAttackCorrectionBase = 13;</code>
       * @return The heroAttackCorrectionBase.
       */
      @java.lang.Override
      public int getHeroAttackCorrectionBase() {
        return heroAttackCorrectionBase_;
      }
      /**
       * <pre>
       * 英雄攻击属性权重值
       * </pre>
       *
       * <code>int32 HeroAttackCorrectionBase = 13;</code>
       * @param value The heroAttackCorrectionBase to set.
       * @return This builder for chaining.
       */
      public Builder setHeroAttackCorrectionBase(int value) {
        
        heroAttackCorrectionBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄攻击属性权重值
       * </pre>
       *
       * <code>int32 HeroAttackCorrectionBase = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroAttackCorrectionBase() {
        
        heroAttackCorrectionBase_ = 0;
        onChanged();
        return this;
      }

      private double heroAttackCorrectionCoe_ ;
      /**
       * <pre>
       * 英雄攻击属性权重系数
       * </pre>
       *
       * <code>double HeroAttackCorrectionCoe = 14;</code>
       * @return The heroAttackCorrectionCoe.
       */
      @java.lang.Override
      public double getHeroAttackCorrectionCoe() {
        return heroAttackCorrectionCoe_;
      }
      /**
       * <pre>
       * 英雄攻击属性权重系数
       * </pre>
       *
       * <code>double HeroAttackCorrectionCoe = 14;</code>
       * @param value The heroAttackCorrectionCoe to set.
       * @return This builder for chaining.
       */
      public Builder setHeroAttackCorrectionCoe(double value) {
        
        heroAttackCorrectionCoe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄攻击属性权重系数
       * </pre>
       *
       * <code>double HeroAttackCorrectionCoe = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroAttackCorrectionCoe() {
        
        heroAttackCorrectionCoe_ = 0D;
        onChanged();
        return this;
      }

      private int heroDodgeCorrectionBase_ ;
      /**
       * <pre>
       * 英雄闪避属性权重值
       * </pre>
       *
       * <code>int32 HeroDodgeCorrectionBase = 15;</code>
       * @return The heroDodgeCorrectionBase.
       */
      @java.lang.Override
      public int getHeroDodgeCorrectionBase() {
        return heroDodgeCorrectionBase_;
      }
      /**
       * <pre>
       * 英雄闪避属性权重值
       * </pre>
       *
       * <code>int32 HeroDodgeCorrectionBase = 15;</code>
       * @param value The heroDodgeCorrectionBase to set.
       * @return This builder for chaining.
       */
      public Builder setHeroDodgeCorrectionBase(int value) {
        
        heroDodgeCorrectionBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄闪避属性权重值
       * </pre>
       *
       * <code>int32 HeroDodgeCorrectionBase = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroDodgeCorrectionBase() {
        
        heroDodgeCorrectionBase_ = 0;
        onChanged();
        return this;
      }

      private double heroDodgeCorrectionCoe_ ;
      /**
       * <pre>
       * 英雄闪避属性权重系数
       * </pre>
       *
       * <code>double HeroDodgeCorrectionCoe = 16;</code>
       * @return The heroDodgeCorrectionCoe.
       */
      @java.lang.Override
      public double getHeroDodgeCorrectionCoe() {
        return heroDodgeCorrectionCoe_;
      }
      /**
       * <pre>
       * 英雄闪避属性权重系数
       * </pre>
       *
       * <code>double HeroDodgeCorrectionCoe = 16;</code>
       * @param value The heroDodgeCorrectionCoe to set.
       * @return This builder for chaining.
       */
      public Builder setHeroDodgeCorrectionCoe(double value) {
        
        heroDodgeCorrectionCoe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄闪避属性权重系数
       * </pre>
       *
       * <code>double HeroDodgeCorrectionCoe = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroDodgeCorrectionCoe() {
        
        heroDodgeCorrectionCoe_ = 0D;
        onChanged();
        return this;
      }

      private int heroCritCorrectionBase_ ;
      /**
       * <pre>
       * 英雄暴击属性权重值
       * </pre>
       *
       * <code>int32 HeroCritCorrectionBase = 17;</code>
       * @return The heroCritCorrectionBase.
       */
      @java.lang.Override
      public int getHeroCritCorrectionBase() {
        return heroCritCorrectionBase_;
      }
      /**
       * <pre>
       * 英雄暴击属性权重值
       * </pre>
       *
       * <code>int32 HeroCritCorrectionBase = 17;</code>
       * @param value The heroCritCorrectionBase to set.
       * @return This builder for chaining.
       */
      public Builder setHeroCritCorrectionBase(int value) {
        
        heroCritCorrectionBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄暴击属性权重值
       * </pre>
       *
       * <code>int32 HeroCritCorrectionBase = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroCritCorrectionBase() {
        
        heroCritCorrectionBase_ = 0;
        onChanged();
        return this;
      }

      private double heroCritCorrectionCoe_ ;
      /**
       * <pre>
       * 英雄暴击属性权重系数
       * </pre>
       *
       * <code>double HeroCritCorrectionCoe = 18;</code>
       * @return The heroCritCorrectionCoe.
       */
      @java.lang.Override
      public double getHeroCritCorrectionCoe() {
        return heroCritCorrectionCoe_;
      }
      /**
       * <pre>
       * 英雄暴击属性权重系数
       * </pre>
       *
       * <code>double HeroCritCorrectionCoe = 18;</code>
       * @param value The heroCritCorrectionCoe to set.
       * @return This builder for chaining.
       */
      public Builder setHeroCritCorrectionCoe(double value) {
        
        heroCritCorrectionCoe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄暴击属性权重系数
       * </pre>
       *
       * <code>double HeroCritCorrectionCoe = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroCritCorrectionCoe() {
        
        heroCritCorrectionCoe_ = 0D;
        onChanged();
        return this;
      }

      private int heroBlckCorrectionBase_ ;
      /**
       * <pre>
       * 英雄暴击属性权重值
       * </pre>
       *
       * <code>int32 HeroBlckCorrectionBase = 19;</code>
       * @return The heroBlckCorrectionBase.
       */
      @java.lang.Override
      public int getHeroBlckCorrectionBase() {
        return heroBlckCorrectionBase_;
      }
      /**
       * <pre>
       * 英雄暴击属性权重值
       * </pre>
       *
       * <code>int32 HeroBlckCorrectionBase = 19;</code>
       * @param value The heroBlckCorrectionBase to set.
       * @return This builder for chaining.
       */
      public Builder setHeroBlckCorrectionBase(int value) {
        
        heroBlckCorrectionBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄暴击属性权重值
       * </pre>
       *
       * <code>int32 HeroBlckCorrectionBase = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroBlckCorrectionBase() {
        
        heroBlckCorrectionBase_ = 0;
        onChanged();
        return this;
      }

      private double heroBlckCorrectionCoe_ ;
      /**
       * <pre>
       * 英雄暴击属性权重系数
       * </pre>
       *
       * <code>double HeroBlckCorrectionCoe = 20;</code>
       * @return The heroBlckCorrectionCoe.
       */
      @java.lang.Override
      public double getHeroBlckCorrectionCoe() {
        return heroBlckCorrectionCoe_;
      }
      /**
       * <pre>
       * 英雄暴击属性权重系数
       * </pre>
       *
       * <code>double HeroBlckCorrectionCoe = 20;</code>
       * @param value The heroBlckCorrectionCoe to set.
       * @return This builder for chaining.
       */
      public Builder setHeroBlckCorrectionCoe(double value) {
        
        heroBlckCorrectionCoe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄暴击属性权重系数
       * </pre>
       *
       * <code>double HeroBlckCorrectionCoe = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroBlckCorrectionCoe() {
        
        heroBlckCorrectionCoe_ = 0D;
        onChanged();
        return this;
      }

      private Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ heroAttributeEvaluation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.Builder, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_OrBuilder> heroAttributeEvaluationBuilder_;
      /**
       * <pre>
       * 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
       * </pre>
       *
       * <code>.Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;</code>
       * @return Whether the heroAttributeEvaluation field is set.
       */
      public boolean hasHeroAttributeEvaluation() {
        return heroAttributeEvaluationBuilder_ != null || heroAttributeEvaluation_ != null;
      }
      /**
       * <pre>
       * 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
       * </pre>
       *
       * <code>.Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;</code>
       * @return The heroAttributeEvaluation.
       */
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ getHeroAttributeEvaluation() {
        if (heroAttributeEvaluationBuilder_ == null) {
          return heroAttributeEvaluation_ == null ? Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.getDefaultInstance() : heroAttributeEvaluation_;
        } else {
          return heroAttributeEvaluationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
       * </pre>
       *
       * <code>.Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;</code>
       */
      public Builder setHeroAttributeEvaluation(Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ value) {
        if (heroAttributeEvaluationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          heroAttributeEvaluation_ = value;
          onChanged();
        } else {
          heroAttributeEvaluationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
       * </pre>
       *
       * <code>.Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;</code>
       */
      public Builder setHeroAttributeEvaluation(
          Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.Builder builderForValue) {
        if (heroAttributeEvaluationBuilder_ == null) {
          heroAttributeEvaluation_ = builderForValue.build();
          onChanged();
        } else {
          heroAttributeEvaluationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
       * </pre>
       *
       * <code>.Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;</code>
       */
      public Builder mergeHeroAttributeEvaluation(Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_ value) {
        if (heroAttributeEvaluationBuilder_ == null) {
          if (heroAttributeEvaluation_ != null) {
            heroAttributeEvaluation_ =
              Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.newBuilder(heroAttributeEvaluation_).mergeFrom(value).buildPartial();
          } else {
            heroAttributeEvaluation_ = value;
          }
          onChanged();
        } else {
          heroAttributeEvaluationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
       * </pre>
       *
       * <code>.Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;</code>
       */
      public Builder clearHeroAttributeEvaluation() {
        if (heroAttributeEvaluationBuilder_ == null) {
          heroAttributeEvaluation_ = null;
          onChanged();
        } else {
          heroAttributeEvaluation_ = null;
          heroAttributeEvaluationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
       * </pre>
       *
       * <code>.Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;</code>
       */
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.Builder getHeroAttributeEvaluationBuilder() {
        
        onChanged();
        return getHeroAttributeEvaluationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
       * </pre>
       *
       * <code>.Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;</code>
       */
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_OrBuilder getHeroAttributeEvaluationOrBuilder() {
        if (heroAttributeEvaluationBuilder_ != null) {
          return heroAttributeEvaluationBuilder_.getMessageOrBuilder();
        } else {
          return heroAttributeEvaluation_ == null ?
              Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.getDefaultInstance() : heroAttributeEvaluation_;
        }
      }
      /**
       * <pre>
       * 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
       * </pre>
       *
       * <code>.Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.Builder, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_OrBuilder> 
          getHeroAttributeEvaluationFieldBuilder() {
        if (heroAttributeEvaluationBuilder_ == null) {
          heroAttributeEvaluationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_.Builder, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroattributeevaluation_OrBuilder>(
                  getHeroAttributeEvaluation(),
                  getParentForChildren(),
                  isClean());
          heroAttributeEvaluation_ = null;
        }
        return heroAttributeEvaluationBuilder_;
      }

      private com.google.protobuf.Internal.IntList heroLevelLimits_ = emptyIntList();
      private void ensureHeroLevelLimitsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          heroLevelLimits_ = mutableCopy(heroLevelLimits_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * 英雄不同星级对应的等级上限，数组第一项为1星对应的等级上限
       * </pre>
       *
       * <code>repeated int32 HeroLevelLimits = 22;</code>
       * @return A list containing the heroLevelLimits.
       */
      public java.util.List<java.lang.Integer>
          getHeroLevelLimitsList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(heroLevelLimits_) : heroLevelLimits_;
      }
      /**
       * <pre>
       * 英雄不同星级对应的等级上限，数组第一项为1星对应的等级上限
       * </pre>
       *
       * <code>repeated int32 HeroLevelLimits = 22;</code>
       * @return The count of heroLevelLimits.
       */
      public int getHeroLevelLimitsCount() {
        return heroLevelLimits_.size();
      }
      /**
       * <pre>
       * 英雄不同星级对应的等级上限，数组第一项为1星对应的等级上限
       * </pre>
       *
       * <code>repeated int32 HeroLevelLimits = 22;</code>
       * @param index The index of the element to return.
       * @return The heroLevelLimits at the given index.
       */
      public int getHeroLevelLimits(int index) {
        return heroLevelLimits_.getInt(index);
      }
      /**
       * <pre>
       * 英雄不同星级对应的等级上限，数组第一项为1星对应的等级上限
       * </pre>
       *
       * <code>repeated int32 HeroLevelLimits = 22;</code>
       * @param index The index to set the value at.
       * @param value The heroLevelLimits to set.
       * @return This builder for chaining.
       */
      public Builder setHeroLevelLimits(
          int index, int value) {
        ensureHeroLevelLimitsIsMutable();
        heroLevelLimits_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级对应的等级上限，数组第一项为1星对应的等级上限
       * </pre>
       *
       * <code>repeated int32 HeroLevelLimits = 22;</code>
       * @param value The heroLevelLimits to add.
       * @return This builder for chaining.
       */
      public Builder addHeroLevelLimits(int value) {
        ensureHeroLevelLimitsIsMutable();
        heroLevelLimits_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级对应的等级上限，数组第一项为1星对应的等级上限
       * </pre>
       *
       * <code>repeated int32 HeroLevelLimits = 22;</code>
       * @param values The heroLevelLimits to add.
       * @return This builder for chaining.
       */
      public Builder addAllHeroLevelLimits(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHeroLevelLimitsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, heroLevelLimits_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级对应的等级上限，数组第一项为1星对应的等级上限
       * </pre>
       *
       * <code>repeated int32 HeroLevelLimits = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroLevelLimits() {
        heroLevelLimits_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int heroStarLimit_ ;
      /**
       * <pre>
       * 英雄星级上限
       * </pre>
       *
       * <code>int32 HeroStarLimit = 23;</code>
       * @return The heroStarLimit.
       */
      @java.lang.Override
      public int getHeroStarLimit() {
        return heroStarLimit_;
      }
      /**
       * <pre>
       * 英雄星级上限
       * </pre>
       *
       * <code>int32 HeroStarLimit = 23;</code>
       * @param value The heroStarLimit to set.
       * @return This builder for chaining.
       */
      public Builder setHeroStarLimit(int value) {
        
        heroStarLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄星级上限
       * </pre>
       *
       * <code>int32 HeroStarLimit = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroStarLimit() {
        
        heroStarLimit_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList heroStarUpNeedCards_ = emptyIntList();
      private void ensureHeroStarUpNeedCardsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          heroStarUpNeedCards_ = mutableCopy(heroStarUpNeedCards_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * 英雄不同星级升星所需消耗的同星副卡数量，数组第一项为1星升2星时所需数量
       * </pre>
       *
       * <code>repeated int32 HeroStarUpNeedCards = 24;</code>
       * @return A list containing the heroStarUpNeedCards.
       */
      public java.util.List<java.lang.Integer>
          getHeroStarUpNeedCardsList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(heroStarUpNeedCards_) : heroStarUpNeedCards_;
      }
      /**
       * <pre>
       * 英雄不同星级升星所需消耗的同星副卡数量，数组第一项为1星升2星时所需数量
       * </pre>
       *
       * <code>repeated int32 HeroStarUpNeedCards = 24;</code>
       * @return The count of heroStarUpNeedCards.
       */
      public int getHeroStarUpNeedCardsCount() {
        return heroStarUpNeedCards_.size();
      }
      /**
       * <pre>
       * 英雄不同星级升星所需消耗的同星副卡数量，数组第一项为1星升2星时所需数量
       * </pre>
       *
       * <code>repeated int32 HeroStarUpNeedCards = 24;</code>
       * @param index The index of the element to return.
       * @return The heroStarUpNeedCards at the given index.
       */
      public int getHeroStarUpNeedCards(int index) {
        return heroStarUpNeedCards_.getInt(index);
      }
      /**
       * <pre>
       * 英雄不同星级升星所需消耗的同星副卡数量，数组第一项为1星升2星时所需数量
       * </pre>
       *
       * <code>repeated int32 HeroStarUpNeedCards = 24;</code>
       * @param index The index to set the value at.
       * @param value The heroStarUpNeedCards to set.
       * @return This builder for chaining.
       */
      public Builder setHeroStarUpNeedCards(
          int index, int value) {
        ensureHeroStarUpNeedCardsIsMutable();
        heroStarUpNeedCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级升星所需消耗的同星副卡数量，数组第一项为1星升2星时所需数量
       * </pre>
       *
       * <code>repeated int32 HeroStarUpNeedCards = 24;</code>
       * @param value The heroStarUpNeedCards to add.
       * @return This builder for chaining.
       */
      public Builder addHeroStarUpNeedCards(int value) {
        ensureHeroStarUpNeedCardsIsMutable();
        heroStarUpNeedCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级升星所需消耗的同星副卡数量，数组第一项为1星升2星时所需数量
       * </pre>
       *
       * <code>repeated int32 HeroStarUpNeedCards = 24;</code>
       * @param values The heroStarUpNeedCards to add.
       * @return This builder for chaining.
       */
      public Builder addAllHeroStarUpNeedCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHeroStarUpNeedCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, heroStarUpNeedCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级升星所需消耗的同星副卡数量，数组第一项为1星升2星时所需数量
       * </pre>
       *
       * <code>repeated int32 HeroStarUpNeedCards = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroStarUpNeedCards() {
        heroStarUpNeedCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList heroStarUpNeedGolds_ = emptyIntList();
      private void ensureHeroStarUpNeedGoldsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          heroStarUpNeedGolds_ = mutableCopy(heroStarUpNeedGolds_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       * 英雄不同星级升星所需消耗的金币数量，数组第一项为1星升2星时所需数量
       * </pre>
       *
       * <code>repeated int32 HeroStarUpNeedGolds = 25;</code>
       * @return A list containing the heroStarUpNeedGolds.
       */
      public java.util.List<java.lang.Integer>
          getHeroStarUpNeedGoldsList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(heroStarUpNeedGolds_) : heroStarUpNeedGolds_;
      }
      /**
       * <pre>
       * 英雄不同星级升星所需消耗的金币数量，数组第一项为1星升2星时所需数量
       * </pre>
       *
       * <code>repeated int32 HeroStarUpNeedGolds = 25;</code>
       * @return The count of heroStarUpNeedGolds.
       */
      public int getHeroStarUpNeedGoldsCount() {
        return heroStarUpNeedGolds_.size();
      }
      /**
       * <pre>
       * 英雄不同星级升星所需消耗的金币数量，数组第一项为1星升2星时所需数量
       * </pre>
       *
       * <code>repeated int32 HeroStarUpNeedGolds = 25;</code>
       * @param index The index of the element to return.
       * @return The heroStarUpNeedGolds at the given index.
       */
      public int getHeroStarUpNeedGolds(int index) {
        return heroStarUpNeedGolds_.getInt(index);
      }
      /**
       * <pre>
       * 英雄不同星级升星所需消耗的金币数量，数组第一项为1星升2星时所需数量
       * </pre>
       *
       * <code>repeated int32 HeroStarUpNeedGolds = 25;</code>
       * @param index The index to set the value at.
       * @param value The heroStarUpNeedGolds to set.
       * @return This builder for chaining.
       */
      public Builder setHeroStarUpNeedGolds(
          int index, int value) {
        ensureHeroStarUpNeedGoldsIsMutable();
        heroStarUpNeedGolds_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级升星所需消耗的金币数量，数组第一项为1星升2星时所需数量
       * </pre>
       *
       * <code>repeated int32 HeroStarUpNeedGolds = 25;</code>
       * @param value The heroStarUpNeedGolds to add.
       * @return This builder for chaining.
       */
      public Builder addHeroStarUpNeedGolds(int value) {
        ensureHeroStarUpNeedGoldsIsMutable();
        heroStarUpNeedGolds_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级升星所需消耗的金币数量，数组第一项为1星升2星时所需数量
       * </pre>
       *
       * <code>repeated int32 HeroStarUpNeedGolds = 25;</code>
       * @param values The heroStarUpNeedGolds to add.
       * @return This builder for chaining.
       */
      public Builder addAllHeroStarUpNeedGolds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHeroStarUpNeedGoldsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, heroStarUpNeedGolds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级升星所需消耗的金币数量，数组第一项为1星升2星时所需数量
       * </pre>
       *
       * <code>repeated int32 HeroStarUpNeedGolds = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroStarUpNeedGolds() {
        heroStarUpNeedGolds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList heroStarUpGainNormalTalents_ = emptyIntList();
      private void ensureHeroStarUpGainNormalTalentsIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          heroStarUpGainNormalTalents_ = mutableCopy(heroStarUpGainNormalTalents_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <pre>
       * 当英雄升到指定星级时，可获得1个奥义，从英雄表里的奥义库中随机1个(新增字段！！！）
       * </pre>
       *
       * <code>repeated int32 HeroStarUpGainNormalTalents = 26;</code>
       * @return A list containing the heroStarUpGainNormalTalents.
       */
      public java.util.List<java.lang.Integer>
          getHeroStarUpGainNormalTalentsList() {
        return ((bitField0_ & 0x00000020) != 0) ?
                 java.util.Collections.unmodifiableList(heroStarUpGainNormalTalents_) : heroStarUpGainNormalTalents_;
      }
      /**
       * <pre>
       * 当英雄升到指定星级时，可获得1个奥义，从英雄表里的奥义库中随机1个(新增字段！！！）
       * </pre>
       *
       * <code>repeated int32 HeroStarUpGainNormalTalents = 26;</code>
       * @return The count of heroStarUpGainNormalTalents.
       */
      public int getHeroStarUpGainNormalTalentsCount() {
        return heroStarUpGainNormalTalents_.size();
      }
      /**
       * <pre>
       * 当英雄升到指定星级时，可获得1个奥义，从英雄表里的奥义库中随机1个(新增字段！！！）
       * </pre>
       *
       * <code>repeated int32 HeroStarUpGainNormalTalents = 26;</code>
       * @param index The index of the element to return.
       * @return The heroStarUpGainNormalTalents at the given index.
       */
      public int getHeroStarUpGainNormalTalents(int index) {
        return heroStarUpGainNormalTalents_.getInt(index);
      }
      /**
       * <pre>
       * 当英雄升到指定星级时，可获得1个奥义，从英雄表里的奥义库中随机1个(新增字段！！！）
       * </pre>
       *
       * <code>repeated int32 HeroStarUpGainNormalTalents = 26;</code>
       * @param index The index to set the value at.
       * @param value The heroStarUpGainNormalTalents to set.
       * @return This builder for chaining.
       */
      public Builder setHeroStarUpGainNormalTalents(
          int index, int value) {
        ensureHeroStarUpGainNormalTalentsIsMutable();
        heroStarUpGainNormalTalents_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当英雄升到指定星级时，可获得1个奥义，从英雄表里的奥义库中随机1个(新增字段！！！）
       * </pre>
       *
       * <code>repeated int32 HeroStarUpGainNormalTalents = 26;</code>
       * @param value The heroStarUpGainNormalTalents to add.
       * @return This builder for chaining.
       */
      public Builder addHeroStarUpGainNormalTalents(int value) {
        ensureHeroStarUpGainNormalTalentsIsMutable();
        heroStarUpGainNormalTalents_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当英雄升到指定星级时，可获得1个奥义，从英雄表里的奥义库中随机1个(新增字段！！！）
       * </pre>
       *
       * <code>repeated int32 HeroStarUpGainNormalTalents = 26;</code>
       * @param values The heroStarUpGainNormalTalents to add.
       * @return This builder for chaining.
       */
      public Builder addAllHeroStarUpGainNormalTalents(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHeroStarUpGainNormalTalentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, heroStarUpGainNormalTalents_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当英雄升到指定星级时，可获得1个奥义，从英雄表里的奥义库中随机1个(新增字段！！！）
       * </pre>
       *
       * <code>repeated int32 HeroStarUpGainNormalTalents = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroStarUpGainNormalTalents() {
        heroStarUpGainNormalTalents_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList heroStarUpCancelGiveCards_ = emptyIntList();
      private void ensureHeroStarUpCancelGiveCardsIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          heroStarUpCancelGiveCards_ = mutableCopy(heroStarUpCancelGiveCards_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <pre>
       * 英雄不同星级取消升星时返还的副卡数量，数组第一项为1星升2星取消时返还的数量（删除了放弃升星结果的操作，该字段删除）
       * </pre>
       *
       * <code>repeated int32 HeroStarUpCancelGiveCards = 27;</code>
       * @return A list containing the heroStarUpCancelGiveCards.
       */
      public java.util.List<java.lang.Integer>
          getHeroStarUpCancelGiveCardsList() {
        return ((bitField0_ & 0x00000040) != 0) ?
                 java.util.Collections.unmodifiableList(heroStarUpCancelGiveCards_) : heroStarUpCancelGiveCards_;
      }
      /**
       * <pre>
       * 英雄不同星级取消升星时返还的副卡数量，数组第一项为1星升2星取消时返还的数量（删除了放弃升星结果的操作，该字段删除）
       * </pre>
       *
       * <code>repeated int32 HeroStarUpCancelGiveCards = 27;</code>
       * @return The count of heroStarUpCancelGiveCards.
       */
      public int getHeroStarUpCancelGiveCardsCount() {
        return heroStarUpCancelGiveCards_.size();
      }
      /**
       * <pre>
       * 英雄不同星级取消升星时返还的副卡数量，数组第一项为1星升2星取消时返还的数量（删除了放弃升星结果的操作，该字段删除）
       * </pre>
       *
       * <code>repeated int32 HeroStarUpCancelGiveCards = 27;</code>
       * @param index The index of the element to return.
       * @return The heroStarUpCancelGiveCards at the given index.
       */
      public int getHeroStarUpCancelGiveCards(int index) {
        return heroStarUpCancelGiveCards_.getInt(index);
      }
      /**
       * <pre>
       * 英雄不同星级取消升星时返还的副卡数量，数组第一项为1星升2星取消时返还的数量（删除了放弃升星结果的操作，该字段删除）
       * </pre>
       *
       * <code>repeated int32 HeroStarUpCancelGiveCards = 27;</code>
       * @param index The index to set the value at.
       * @param value The heroStarUpCancelGiveCards to set.
       * @return This builder for chaining.
       */
      public Builder setHeroStarUpCancelGiveCards(
          int index, int value) {
        ensureHeroStarUpCancelGiveCardsIsMutable();
        heroStarUpCancelGiveCards_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级取消升星时返还的副卡数量，数组第一项为1星升2星取消时返还的数量（删除了放弃升星结果的操作，该字段删除）
       * </pre>
       *
       * <code>repeated int32 HeroStarUpCancelGiveCards = 27;</code>
       * @param value The heroStarUpCancelGiveCards to add.
       * @return This builder for chaining.
       */
      public Builder addHeroStarUpCancelGiveCards(int value) {
        ensureHeroStarUpCancelGiveCardsIsMutable();
        heroStarUpCancelGiveCards_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级取消升星时返还的副卡数量，数组第一项为1星升2星取消时返还的数量（删除了放弃升星结果的操作，该字段删除）
       * </pre>
       *
       * <code>repeated int32 HeroStarUpCancelGiveCards = 27;</code>
       * @param values The heroStarUpCancelGiveCards to add.
       * @return This builder for chaining.
       */
      public Builder addAllHeroStarUpCancelGiveCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHeroStarUpCancelGiveCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, heroStarUpCancelGiveCards_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级取消升星时返还的副卡数量，数组第一项为1星升2星取消时返还的数量（删除了放弃升星结果的操作，该字段删除）
       * </pre>
       *
       * <code>repeated int32 HeroStarUpCancelGiveCards = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroStarUpCancelGiveCards() {
        heroStarUpCancelGiveCards_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private double heroStarUpCancelGiveGold_ ;
      /**
       * <pre>
       * 英雄取消升星时消耗的金币比例（删除了放弃升星结果的操作，该字段删除）
       * </pre>
       *
       * <code>double HeroStarUpCancelGiveGold = 28;</code>
       * @return The heroStarUpCancelGiveGold.
       */
      @java.lang.Override
      public double getHeroStarUpCancelGiveGold() {
        return heroStarUpCancelGiveGold_;
      }
      /**
       * <pre>
       * 英雄取消升星时消耗的金币比例（删除了放弃升星结果的操作，该字段删除）
       * </pre>
       *
       * <code>double HeroStarUpCancelGiveGold = 28;</code>
       * @param value The heroStarUpCancelGiveGold to set.
       * @return This builder for chaining.
       */
      public Builder setHeroStarUpCancelGiveGold(double value) {
        
        heroStarUpCancelGiveGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄取消升星时消耗的金币比例（删除了放弃升星结果的操作，该字段删除）
       * </pre>
       *
       * <code>double HeroStarUpCancelGiveGold = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroStarUpCancelGiveGold() {
        
        heroStarUpCancelGiveGold_ = 0D;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList heroLearningNeedGolds_ = emptyIntList();
      private void ensureHeroLearningNeedGoldsIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          heroLearningNeedGolds_ = mutableCopy(heroLearningNeedGolds_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <pre>
       * 英雄不同星级学习时所需消耗的金币数量，数组第一项为1星所需数量
       * </pre>
       *
       * <code>repeated int32 HeroLearningNeedGolds = 29;</code>
       * @return A list containing the heroLearningNeedGolds.
       */
      public java.util.List<java.lang.Integer>
          getHeroLearningNeedGoldsList() {
        return ((bitField0_ & 0x00000080) != 0) ?
                 java.util.Collections.unmodifiableList(heroLearningNeedGolds_) : heroLearningNeedGolds_;
      }
      /**
       * <pre>
       * 英雄不同星级学习时所需消耗的金币数量，数组第一项为1星所需数量
       * </pre>
       *
       * <code>repeated int32 HeroLearningNeedGolds = 29;</code>
       * @return The count of heroLearningNeedGolds.
       */
      public int getHeroLearningNeedGoldsCount() {
        return heroLearningNeedGolds_.size();
      }
      /**
       * <pre>
       * 英雄不同星级学习时所需消耗的金币数量，数组第一项为1星所需数量
       * </pre>
       *
       * <code>repeated int32 HeroLearningNeedGolds = 29;</code>
       * @param index The index of the element to return.
       * @return The heroLearningNeedGolds at the given index.
       */
      public int getHeroLearningNeedGolds(int index) {
        return heroLearningNeedGolds_.getInt(index);
      }
      /**
       * <pre>
       * 英雄不同星级学习时所需消耗的金币数量，数组第一项为1星所需数量
       * </pre>
       *
       * <code>repeated int32 HeroLearningNeedGolds = 29;</code>
       * @param index The index to set the value at.
       * @param value The heroLearningNeedGolds to set.
       * @return This builder for chaining.
       */
      public Builder setHeroLearningNeedGolds(
          int index, int value) {
        ensureHeroLearningNeedGoldsIsMutable();
        heroLearningNeedGolds_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级学习时所需消耗的金币数量，数组第一项为1星所需数量
       * </pre>
       *
       * <code>repeated int32 HeroLearningNeedGolds = 29;</code>
       * @param value The heroLearningNeedGolds to add.
       * @return This builder for chaining.
       */
      public Builder addHeroLearningNeedGolds(int value) {
        ensureHeroLearningNeedGoldsIsMutable();
        heroLearningNeedGolds_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级学习时所需消耗的金币数量，数组第一项为1星所需数量
       * </pre>
       *
       * <code>repeated int32 HeroLearningNeedGolds = 29;</code>
       * @param values The heroLearningNeedGolds to add.
       * @return This builder for chaining.
       */
      public Builder addAllHeroLearningNeedGolds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHeroLearningNeedGoldsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, heroLearningNeedGolds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级学习时所需消耗的金币数量，数组第一项为1星所需数量
       * </pre>
       *
       * <code>repeated int32 HeroLearningNeedGolds = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroLearningNeedGolds() {
        heroLearningNeedGolds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private java.util.List<Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_> heroClassNeedCards_ =
        java.util.Collections.emptyList();
      private void ensureHeroClassNeedCardsIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          heroClassNeedCards_ = new java.util.ArrayList<Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_>(heroClassNeedCards_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.Builder, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_OrBuilder> heroClassNeedCardsBuilder_;

      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public java.util.List<Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_> getHeroClassNeedCardsList() {
        if (heroClassNeedCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(heroClassNeedCards_);
        } else {
          return heroClassNeedCardsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public int getHeroClassNeedCardsCount() {
        if (heroClassNeedCardsBuilder_ == null) {
          return heroClassNeedCards_.size();
        } else {
          return heroClassNeedCardsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ getHeroClassNeedCards(int index) {
        if (heroClassNeedCardsBuilder_ == null) {
          return heroClassNeedCards_.get(index);
        } else {
          return heroClassNeedCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public Builder setHeroClassNeedCards(
          int index, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ value) {
        if (heroClassNeedCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeroClassNeedCardsIsMutable();
          heroClassNeedCards_.set(index, value);
          onChanged();
        } else {
          heroClassNeedCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public Builder setHeroClassNeedCards(
          int index, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.Builder builderForValue) {
        if (heroClassNeedCardsBuilder_ == null) {
          ensureHeroClassNeedCardsIsMutable();
          heroClassNeedCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          heroClassNeedCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public Builder addHeroClassNeedCards(Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ value) {
        if (heroClassNeedCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeroClassNeedCardsIsMutable();
          heroClassNeedCards_.add(value);
          onChanged();
        } else {
          heroClassNeedCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public Builder addHeroClassNeedCards(
          int index, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_ value) {
        if (heroClassNeedCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeroClassNeedCardsIsMutable();
          heroClassNeedCards_.add(index, value);
          onChanged();
        } else {
          heroClassNeedCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public Builder addHeroClassNeedCards(
          Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.Builder builderForValue) {
        if (heroClassNeedCardsBuilder_ == null) {
          ensureHeroClassNeedCardsIsMutable();
          heroClassNeedCards_.add(builderForValue.build());
          onChanged();
        } else {
          heroClassNeedCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public Builder addHeroClassNeedCards(
          int index, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.Builder builderForValue) {
        if (heroClassNeedCardsBuilder_ == null) {
          ensureHeroClassNeedCardsIsMutable();
          heroClassNeedCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          heroClassNeedCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public Builder addAllHeroClassNeedCards(
          java.lang.Iterable<? extends Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_> values) {
        if (heroClassNeedCardsBuilder_ == null) {
          ensureHeroClassNeedCardsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, heroClassNeedCards_);
          onChanged();
        } else {
          heroClassNeedCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public Builder clearHeroClassNeedCards() {
        if (heroClassNeedCardsBuilder_ == null) {
          heroClassNeedCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          heroClassNeedCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public Builder removeHeroClassNeedCards(int index) {
        if (heroClassNeedCardsBuilder_ == null) {
          ensureHeroClassNeedCardsIsMutable();
          heroClassNeedCards_.remove(index);
          onChanged();
        } else {
          heroClassNeedCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.Builder getHeroClassNeedCardsBuilder(
          int index) {
        return getHeroClassNeedCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_OrBuilder getHeroClassNeedCardsOrBuilder(
          int index) {
        if (heroClassNeedCardsBuilder_ == null) {
          return heroClassNeedCards_.get(index);  } else {
          return heroClassNeedCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public java.util.List<? extends Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_OrBuilder> 
           getHeroClassNeedCardsOrBuilderList() {
        if (heroClassNeedCardsBuilder_ != null) {
          return heroClassNeedCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(heroClassNeedCards_);
        }
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.Builder addHeroClassNeedCardsBuilder() {
        return getHeroClassNeedCardsFieldBuilder().addBuilder(
            Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.getDefaultInstance());
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.Builder addHeroClassNeedCardsBuilder(
          int index) {
        return getHeroClassNeedCardsFieldBuilder().addBuilder(
            index, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.getDefaultInstance());
      }
      /**
       * <pre>
       * 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
       * </pre>
       *
       * <code>repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;</code>
       */
      public java.util.List<Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.Builder> 
           getHeroClassNeedCardsBuilderList() {
        return getHeroClassNeedCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.Builder, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_OrBuilder> 
          getHeroClassNeedCardsFieldBuilder() {
        if (heroClassNeedCardsBuilder_ == null) {
          heroClassNeedCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_.Builder, Config.GlobalTemplateOuterClass.GlobalTemplate.Heroclassneedcard_OrBuilder>(
                  heroClassNeedCards_,
                  ((bitField0_ & 0x00000100) != 0),
                  getParentForChildren(),
                  isClean());
          heroClassNeedCards_ = null;
        }
        return heroClassNeedCardsBuilder_;
      }

      private double heroSkillTrainingGiveExpCoe_ ;
      /**
       * <pre>
       * 英雄特训返还英雄经验比例
       * </pre>
       *
       * <code>double HeroSkillTrainingGiveExpCoe = 31;</code>
       * @return The heroSkillTrainingGiveExpCoe.
       */
      @java.lang.Override
      public double getHeroSkillTrainingGiveExpCoe() {
        return heroSkillTrainingGiveExpCoe_;
      }
      /**
       * <pre>
       * 英雄特训返还英雄经验比例
       * </pre>
       *
       * <code>double HeroSkillTrainingGiveExpCoe = 31;</code>
       * @param value The heroSkillTrainingGiveExpCoe to set.
       * @return This builder for chaining.
       */
      public Builder setHeroSkillTrainingGiveExpCoe(double value) {
        
        heroSkillTrainingGiveExpCoe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄特训返还英雄经验比例
       * </pre>
       *
       * <code>double HeroSkillTrainingGiveExpCoe = 31;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroSkillTrainingGiveExpCoe() {
        
        heroSkillTrainingGiveExpCoe_ = 0D;
        onChanged();
        return this;
      }

      private int normalLotteryFreeTime_ ;
      /**
       * <pre>
       * 金币免费召唤冷却时间，单位：分钟
       * </pre>
       *
       * <code>int32 NormalLotteryFreeTime = 32;</code>
       * @return The normalLotteryFreeTime.
       */
      @java.lang.Override
      public int getNormalLotteryFreeTime() {
        return normalLotteryFreeTime_;
      }
      /**
       * <pre>
       * 金币免费召唤冷却时间，单位：分钟
       * </pre>
       *
       * <code>int32 NormalLotteryFreeTime = 32;</code>
       * @param value The normalLotteryFreeTime to set.
       * @return This builder for chaining.
       */
      public Builder setNormalLotteryFreeTime(int value) {
        
        normalLotteryFreeTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 金币免费召唤冷却时间，单位：分钟
       * </pre>
       *
       * <code>int32 NormalLotteryFreeTime = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearNormalLotteryFreeTime() {
        
        normalLotteryFreeTime_ = 0;
        onChanged();
        return this;
      }

      private int specialLotteryFreeTime_ ;
      /**
       * <pre>
       * 氪金免费召唤冷却时间，单位：分钟
       * </pre>
       *
       * <code>int32 SpecialLotteryFreeTime = 33;</code>
       * @return The specialLotteryFreeTime.
       */
      @java.lang.Override
      public int getSpecialLotteryFreeTime() {
        return specialLotteryFreeTime_;
      }
      /**
       * <pre>
       * 氪金免费召唤冷却时间，单位：分钟
       * </pre>
       *
       * <code>int32 SpecialLotteryFreeTime = 33;</code>
       * @param value The specialLotteryFreeTime to set.
       * @return This builder for chaining.
       */
      public Builder setSpecialLotteryFreeTime(int value) {
        
        specialLotteryFreeTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 氪金免费召唤冷却时间，单位：分钟
       * </pre>
       *
       * <code>int32 SpecialLotteryFreeTime = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpecialLotteryFreeTime() {
        
        specialLotteryFreeTime_ = 0;
        onChanged();
        return this;
      }

      private int lotteryTicketDiamondCost_ ;
      /**
       * <pre>
       * 单张抽卡券消耗的钻石
       * </pre>
       *
       * <code>int32 LotteryTicketDiamondCost = 34;</code>
       * @return The lotteryTicketDiamondCost.
       */
      @java.lang.Override
      public int getLotteryTicketDiamondCost() {
        return lotteryTicketDiamondCost_;
      }
      /**
       * <pre>
       * 单张抽卡券消耗的钻石
       * </pre>
       *
       * <code>int32 LotteryTicketDiamondCost = 34;</code>
       * @param value The lotteryTicketDiamondCost to set.
       * @return This builder for chaining.
       */
      public Builder setLotteryTicketDiamondCost(int value) {
        
        lotteryTicketDiamondCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 单张抽卡券消耗的钻石
       * </pre>
       *
       * <code>int32 LotteryTicketDiamondCost = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearLotteryTicketDiamondCost() {
        
        lotteryTicketDiamondCost_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList guildIcons_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureGuildIconsIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          guildIcons_ = new com.google.protobuf.LazyStringArrayList(guildIcons_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <pre>
       * 公会图标（最多配置12个）
       * </pre>
       *
       * <code>repeated string GuildIcons = 35;</code>
       * @return A list containing the guildIcons.
       */
      public com.google.protobuf.ProtocolStringList
          getGuildIconsList() {
        return guildIcons_.getUnmodifiableView();
      }
      /**
       * <pre>
       * 公会图标（最多配置12个）
       * </pre>
       *
       * <code>repeated string GuildIcons = 35;</code>
       * @return The count of guildIcons.
       */
      public int getGuildIconsCount() {
        return guildIcons_.size();
      }
      /**
       * <pre>
       * 公会图标（最多配置12个）
       * </pre>
       *
       * <code>repeated string GuildIcons = 35;</code>
       * @param index The index of the element to return.
       * @return The guildIcons at the given index.
       */
      public java.lang.String getGuildIcons(int index) {
        return guildIcons_.get(index);
      }
      /**
       * <pre>
       * 公会图标（最多配置12个）
       * </pre>
       *
       * <code>repeated string GuildIcons = 35;</code>
       * @param index The index of the value to return.
       * @return The bytes of the guildIcons at the given index.
       */
      public com.google.protobuf.ByteString
          getGuildIconsBytes(int index) {
        return guildIcons_.getByteString(index);
      }
      /**
       * <pre>
       * 公会图标（最多配置12个）
       * </pre>
       *
       * <code>repeated string GuildIcons = 35;</code>
       * @param index The index to set the value at.
       * @param value The guildIcons to set.
       * @return This builder for chaining.
       */
      public Builder setGuildIcons(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGuildIconsIsMutable();
        guildIcons_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公会图标（最多配置12个）
       * </pre>
       *
       * <code>repeated string GuildIcons = 35;</code>
       * @param value The guildIcons to add.
       * @return This builder for chaining.
       */
      public Builder addGuildIcons(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGuildIconsIsMutable();
        guildIcons_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公会图标（最多配置12个）
       * </pre>
       *
       * <code>repeated string GuildIcons = 35;</code>
       * @param values The guildIcons to add.
       * @return This builder for chaining.
       */
      public Builder addAllGuildIcons(
          java.lang.Iterable<java.lang.String> values) {
        ensureGuildIconsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, guildIcons_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公会图标（最多配置12个）
       * </pre>
       *
       * <code>repeated string GuildIcons = 35;</code>
       * @return This builder for chaining.
       */
      public Builder clearGuildIcons() {
        guildIcons_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公会图标（最多配置12个）
       * </pre>
       *
       * <code>repeated string GuildIcons = 35;</code>
       * @param value The bytes of the guildIcons to add.
       * @return This builder for chaining.
       */
      public Builder addGuildIconsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureGuildIconsIsMutable();
        guildIcons_.add(value);
        onChanged();
        return this;
      }

      private int guildSeekHelpNum_ ;
      /**
       * <pre>
       * 公会援助请求次数（每日00：00刷新）
       * </pre>
       *
       * <code>int32 GuildSeekHelpNum = 36;</code>
       * @return The guildSeekHelpNum.
       */
      @java.lang.Override
      public int getGuildSeekHelpNum() {
        return guildSeekHelpNum_;
      }
      /**
       * <pre>
       * 公会援助请求次数（每日00：00刷新）
       * </pre>
       *
       * <code>int32 GuildSeekHelpNum = 36;</code>
       * @param value The guildSeekHelpNum to set.
       * @return This builder for chaining.
       */
      public Builder setGuildSeekHelpNum(int value) {
        
        guildSeekHelpNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公会援助请求次数（每日00：00刷新）
       * </pre>
       *
       * <code>int32 GuildSeekHelpNum = 36;</code>
       * @return This builder for chaining.
       */
      public Builder clearGuildSeekHelpNum() {
        
        guildSeekHelpNum_ = 0;
        onChanged();
        return this;
      }

      private int tavernTaskBrisk_ ;
      /**
       * <pre>
       * 酒馆任务给工会增加活跃度
       * </pre>
       *
       * <code>int32 TavernTaskBrisk = 37;</code>
       * @return The tavernTaskBrisk.
       */
      @java.lang.Override
      public int getTavernTaskBrisk() {
        return tavernTaskBrisk_;
      }
      /**
       * <pre>
       * 酒馆任务给工会增加活跃度
       * </pre>
       *
       * <code>int32 TavernTaskBrisk = 37;</code>
       * @param value The tavernTaskBrisk to set.
       * @return This builder for chaining.
       */
      public Builder setTavernTaskBrisk(int value) {
        
        tavernTaskBrisk_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 酒馆任务给工会增加活跃度
       * </pre>
       *
       * <code>int32 TavernTaskBrisk = 37;</code>
       * @return This builder for chaining.
       */
      public Builder clearTavernTaskBrisk() {
        
        tavernTaskBrisk_ = 0;
        onChanged();
        return this;
      }

      private int gveMapBattleCount_ ;
      /**
       * <pre>
       * 工会副本每天每个委托可挑战次数
       * </pre>
       *
       * <code>int32 GveMapBattleCount = 38;</code>
       * @return The gveMapBattleCount.
       */
      @java.lang.Override
      public int getGveMapBattleCount() {
        return gveMapBattleCount_;
      }
      /**
       * <pre>
       * 工会副本每天每个委托可挑战次数
       * </pre>
       *
       * <code>int32 GveMapBattleCount = 38;</code>
       * @param value The gveMapBattleCount to set.
       * @return This builder for chaining.
       */
      public Builder setGveMapBattleCount(int value) {
        
        gveMapBattleCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 工会副本每天每个委托可挑战次数
       * </pre>
       *
       * <code>int32 GveMapBattleCount = 38;</code>
       * @return This builder for chaining.
       */
      public Builder clearGveMapBattleCount() {
        
        gveMapBattleCount_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList gveDuplicateCardElementCounts_ = emptyIntList();
      private void ensureGveDuplicateCardElementCountsIsMutable() {
        if (!((bitField0_ & 0x00000400) != 0)) {
          gveDuplicateCardElementCounts_ = mutableCopy(gveDuplicateCardElementCounts_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <pre>
       * 公会副本玩家牌库地、水、火、风各元素卡牌数量（总和四元素相加总数）
       * </pre>
       *
       * <code>repeated int32 GveDuplicateCardElementCounts = 39;</code>
       * @return A list containing the gveDuplicateCardElementCounts.
       */
      public java.util.List<java.lang.Integer>
          getGveDuplicateCardElementCountsList() {
        return ((bitField0_ & 0x00000400) != 0) ?
                 java.util.Collections.unmodifiableList(gveDuplicateCardElementCounts_) : gveDuplicateCardElementCounts_;
      }
      /**
       * <pre>
       * 公会副本玩家牌库地、水、火、风各元素卡牌数量（总和四元素相加总数）
       * </pre>
       *
       * <code>repeated int32 GveDuplicateCardElementCounts = 39;</code>
       * @return The count of gveDuplicateCardElementCounts.
       */
      public int getGveDuplicateCardElementCountsCount() {
        return gveDuplicateCardElementCounts_.size();
      }
      /**
       * <pre>
       * 公会副本玩家牌库地、水、火、风各元素卡牌数量（总和四元素相加总数）
       * </pre>
       *
       * <code>repeated int32 GveDuplicateCardElementCounts = 39;</code>
       * @param index The index of the element to return.
       * @return The gveDuplicateCardElementCounts at the given index.
       */
      public int getGveDuplicateCardElementCounts(int index) {
        return gveDuplicateCardElementCounts_.getInt(index);
      }
      /**
       * <pre>
       * 公会副本玩家牌库地、水、火、风各元素卡牌数量（总和四元素相加总数）
       * </pre>
       *
       * <code>repeated int32 GveDuplicateCardElementCounts = 39;</code>
       * @param index The index to set the value at.
       * @param value The gveDuplicateCardElementCounts to set.
       * @return This builder for chaining.
       */
      public Builder setGveDuplicateCardElementCounts(
          int index, int value) {
        ensureGveDuplicateCardElementCountsIsMutable();
        gveDuplicateCardElementCounts_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公会副本玩家牌库地、水、火、风各元素卡牌数量（总和四元素相加总数）
       * </pre>
       *
       * <code>repeated int32 GveDuplicateCardElementCounts = 39;</code>
       * @param value The gveDuplicateCardElementCounts to add.
       * @return This builder for chaining.
       */
      public Builder addGveDuplicateCardElementCounts(int value) {
        ensureGveDuplicateCardElementCountsIsMutable();
        gveDuplicateCardElementCounts_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公会副本玩家牌库地、水、火、风各元素卡牌数量（总和四元素相加总数）
       * </pre>
       *
       * <code>repeated int32 GveDuplicateCardElementCounts = 39;</code>
       * @param values The gveDuplicateCardElementCounts to add.
       * @return This builder for chaining.
       */
      public Builder addAllGveDuplicateCardElementCounts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGveDuplicateCardElementCountsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, gveDuplicateCardElementCounts_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公会副本玩家牌库地、水、火、风各元素卡牌数量（总和四元素相加总数）
       * </pre>
       *
       * <code>repeated int32 GveDuplicateCardElementCounts = 39;</code>
       * @return This builder for chaining.
       */
      public Builder clearGveDuplicateCardElementCounts() {
        gveDuplicateCardElementCounts_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private int gveDuplicateHandCard_ ;
      /**
       * <pre>
       * 公会副本玩家每回合补充手牌的最大数量
       * </pre>
       *
       * <code>int32 GveDuplicateHandCard = 40;</code>
       * @return The gveDuplicateHandCard.
       */
      @java.lang.Override
      public int getGveDuplicateHandCard() {
        return gveDuplicateHandCard_;
      }
      /**
       * <pre>
       * 公会副本玩家每回合补充手牌的最大数量
       * </pre>
       *
       * <code>int32 GveDuplicateHandCard = 40;</code>
       * @param value The gveDuplicateHandCard to set.
       * @return This builder for chaining.
       */
      public Builder setGveDuplicateHandCard(int value) {
        
        gveDuplicateHandCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公会副本玩家每回合补充手牌的最大数量
       * </pre>
       *
       * <code>int32 GveDuplicateHandCard = 40;</code>
       * @return This builder for chaining.
       */
      public Builder clearGveDuplicateHandCard() {
        
        gveDuplicateHandCard_ = 0;
        onChanged();
        return this;
      }

      private int gveDuplicateRoundTime_ ;
      /**
       * <pre>
       * 公会副本回合准备时间
       * </pre>
       *
       * <code>int32 GveDuplicateRoundTime = 41;</code>
       * @return The gveDuplicateRoundTime.
       */
      @java.lang.Override
      public int getGveDuplicateRoundTime() {
        return gveDuplicateRoundTime_;
      }
      /**
       * <pre>
       * 公会副本回合准备时间
       * </pre>
       *
       * <code>int32 GveDuplicateRoundTime = 41;</code>
       * @param value The gveDuplicateRoundTime to set.
       * @return This builder for chaining.
       */
      public Builder setGveDuplicateRoundTime(int value) {
        
        gveDuplicateRoundTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公会副本回合准备时间
       * </pre>
       *
       * <code>int32 GveDuplicateRoundTime = 41;</code>
       * @return This builder for chaining.
       */
      public Builder clearGveDuplicateRoundTime() {
        
        gveDuplicateRoundTime_ = 0;
        onChanged();
        return this;
      }

      private int gveDuplicateWinDeleteCardCount_ ;
      /**
       * <pre>
       * 公会副本胜利移除卡牌数量
       * </pre>
       *
       * <code>int32 GveDuplicateWinDeleteCardCount = 42;</code>
       * @return The gveDuplicateWinDeleteCardCount.
       */
      @java.lang.Override
      public int getGveDuplicateWinDeleteCardCount() {
        return gveDuplicateWinDeleteCardCount_;
      }
      /**
       * <pre>
       * 公会副本胜利移除卡牌数量
       * </pre>
       *
       * <code>int32 GveDuplicateWinDeleteCardCount = 42;</code>
       * @param value The gveDuplicateWinDeleteCardCount to set.
       * @return This builder for chaining.
       */
      public Builder setGveDuplicateWinDeleteCardCount(int value) {
        
        gveDuplicateWinDeleteCardCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公会副本胜利移除卡牌数量
       * </pre>
       *
       * <code>int32 GveDuplicateWinDeleteCardCount = 42;</code>
       * @return This builder for chaining.
       */
      public Builder clearGveDuplicateWinDeleteCardCount() {
        
        gveDuplicateWinDeleteCardCount_ = 0;
        onChanged();
        return this;
      }

      private int gveDuplicateLoseDeleteCardCount_ ;
      /**
       * <pre>
       * 公会副本失败移除卡牌数量
       * </pre>
       *
       * <code>int32 GveDuplicateLoseDeleteCardCount = 43;</code>
       * @return The gveDuplicateLoseDeleteCardCount.
       */
      @java.lang.Override
      public int getGveDuplicateLoseDeleteCardCount() {
        return gveDuplicateLoseDeleteCardCount_;
      }
      /**
       * <pre>
       * 公会副本失败移除卡牌数量
       * </pre>
       *
       * <code>int32 GveDuplicateLoseDeleteCardCount = 43;</code>
       * @param value The gveDuplicateLoseDeleteCardCount to set.
       * @return This builder for chaining.
       */
      public Builder setGveDuplicateLoseDeleteCardCount(int value) {
        
        gveDuplicateLoseDeleteCardCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公会副本失败移除卡牌数量
       * </pre>
       *
       * <code>int32 GveDuplicateLoseDeleteCardCount = 43;</code>
       * @return This builder for chaining.
       */
      public Builder clearGveDuplicateLoseDeleteCardCount() {
        
        gveDuplicateLoseDeleteCardCount_ = 0;
        onChanged();
        return this;
      }

      private int gveDuplicateOverCardCount_ ;
      /**
       * <pre>
       * 公会副本结束判定任意一方移除卡排数量大于等于该值
       * </pre>
       *
       * <code>int32 GveDuplicateOverCardCount = 44;</code>
       * @return The gveDuplicateOverCardCount.
       */
      @java.lang.Override
      public int getGveDuplicateOverCardCount() {
        return gveDuplicateOverCardCount_;
      }
      /**
       * <pre>
       * 公会副本结束判定任意一方移除卡排数量大于等于该值
       * </pre>
       *
       * <code>int32 GveDuplicateOverCardCount = 44;</code>
       * @param value The gveDuplicateOverCardCount to set.
       * @return This builder for chaining.
       */
      public Builder setGveDuplicateOverCardCount(int value) {
        
        gveDuplicateOverCardCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公会副本结束判定任意一方移除卡排数量大于等于该值
       * </pre>
       *
       * <code>int32 GveDuplicateOverCardCount = 44;</code>
       * @return This builder for chaining.
       */
      public Builder clearGveDuplicateOverCardCount() {
        
        gveDuplicateOverCardCount_ = 0;
        onChanged();
        return this;
      }

      private int gveDuplicateBossLossHpCount_ ;
      /**
       * <pre>
       * 公会副本每张牌扣除BOSS血量系数
       * </pre>
       *
       * <code>int32 GveDuplicateBossLossHpCount = 45;</code>
       * @return The gveDuplicateBossLossHpCount.
       */
      @java.lang.Override
      public int getGveDuplicateBossLossHpCount() {
        return gveDuplicateBossLossHpCount_;
      }
      /**
       * <pre>
       * 公会副本每张牌扣除BOSS血量系数
       * </pre>
       *
       * <code>int32 GveDuplicateBossLossHpCount = 45;</code>
       * @param value The gveDuplicateBossLossHpCount to set.
       * @return This builder for chaining.
       */
      public Builder setGveDuplicateBossLossHpCount(int value) {
        
        gveDuplicateBossLossHpCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公会副本每张牌扣除BOSS血量系数
       * </pre>
       *
       * <code>int32 GveDuplicateBossLossHpCount = 45;</code>
       * @return This builder for chaining.
       */
      public Builder clearGveDuplicateBossLossHpCount() {
        
        gveDuplicateBossLossHpCount_ = 0;
        onChanged();
        return this;
      }

      private int gveDuplicateRewardGold_ ;
      /**
       * <pre>
       * 公会副本对BOSS每造成1点伤害获得金币系数
       * </pre>
       *
       * <code>int32 GveDuplicateRewardGold = 46;</code>
       * @return The gveDuplicateRewardGold.
       */
      @java.lang.Override
      public int getGveDuplicateRewardGold() {
        return gveDuplicateRewardGold_;
      }
      /**
       * <pre>
       * 公会副本对BOSS每造成1点伤害获得金币系数
       * </pre>
       *
       * <code>int32 GveDuplicateRewardGold = 46;</code>
       * @param value The gveDuplicateRewardGold to set.
       * @return This builder for chaining.
       */
      public Builder setGveDuplicateRewardGold(int value) {
        
        gveDuplicateRewardGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公会副本对BOSS每造成1点伤害获得金币系数
       * </pre>
       *
       * <code>int32 GveDuplicateRewardGold = 46;</code>
       * @return This builder for chaining.
       */
      public Builder clearGveDuplicateRewardGold() {
        
        gveDuplicateRewardGold_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Config.GlobalTemplate)
    }

    // @@protoc_insertion_point(class_scope:Config.GlobalTemplate)
    private static final Config.GlobalTemplateOuterClass.GlobalTemplate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Config.GlobalTemplateOuterClass.GlobalTemplate();
    }

    public static Config.GlobalTemplateOuterClass.GlobalTemplate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GlobalTemplate>
        PARSER = new com.google.protobuf.AbstractParser<GlobalTemplate>() {
      @java.lang.Override
      public GlobalTemplate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GlobalTemplate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GlobalTemplate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GlobalTemplate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public Config.GlobalTemplateOuterClass.GlobalTemplate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Config_GlobalTemplate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Config_GlobalTemplate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Config_GlobalTemplate_Fieldheronumlimit__descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Config_GlobalTemplate_Fieldheronumlimit__fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Config_GlobalTemplate_Heroattributeevaluation__descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Config_GlobalTemplate_Heroattributeevaluation__fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Config_GlobalTemplate_Heroclassneedcard__descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Config_GlobalTemplate_Heroclassneedcard__fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033protos/GlobalTemplate.proto\022\006Config\"\225\016" +
      "\n\016GlobalTemplate\022\021\n\tNameLimit\030\001 \001(\005\022\030\n\020D" +
      "efaultDropGroup\030\002 \001(\005\022\026\n\016ChangeNameCost\030" +
      "\003 \001(\005\022\036\n\026PlayeEnergyRecoverTime\030\004 \001(\005\022E\n" +
      "\022FieldHeroNumLimits\030\005 \003(\0132).Config.Globa" +
      "lTemplate.Fieldheronumlimit_\022\032\n\022Formatio" +
      "nNameLimit\030\006 \001(\005\022\034\n\024FormationCareerLimit" +
      "\030\007 \001(\005\022\035\n\025InitialFormaitonHeros\030\010 \003(\005\022\026\n" +
      "\016FormationCount\030\t \001(\005\022\"\n\032HeroNormalTalen" +
      "tCountLimit\030\n \001(\010\022 \n\030HeroHealthCorrectio" +
      "nBase\030\013 \001(\010\022\037\n\027HeroHealthCorrectionCoe\030\014" +
      " \001(\001\022 \n\030HeroAttackCorrectionBase\030\r \001(\005\022\037" +
      "\n\027HeroAttackCorrectionCoe\030\016 \001(\001\022\037\n\027HeroD" +
      "odgeCorrectionBase\030\017 \001(\005\022\036\n\026HeroDodgeCor" +
      "rectionCoe\030\020 \001(\001\022\036\n\026HeroCritCorrectionBa" +
      "se\030\021 \001(\005\022\035\n\025HeroCritCorrectionCoe\030\022 \001(\001\022" +
      "\036\n\026HeroBlckCorrectionBase\030\023 \001(\005\022\035\n\025HeroB" +
      "lckCorrectionCoe\030\024 \001(\001\022P\n\027HeroAttributeE" +
      "valuation\030\025 \001(\0132/.Config.GlobalTemplate." +
      "Heroattributeevaluation_\022\027\n\017HeroLevelLim" +
      "its\030\026 \003(\005\022\025\n\rHeroStarLimit\030\027 \001(\005\022\033\n\023Hero" +
      "StarUpNeedCards\030\030 \003(\005\022\033\n\023HeroStarUpNeedG" +
      "olds\030\031 \003(\005\022#\n\033HeroStarUpGainNormalTalent" +
      "s\030\032 \003(\005\022!\n\031HeroStarUpCancelGiveCards\030\033 \003" +
      "(\005\022 \n\030HeroStarUpCancelGiveGold\030\034 \001(\001\022\035\n\025" +
      "HeroLearningNeedGolds\030\035 \003(\005\022E\n\022heroClass" +
      "NeedCards\030\036 \003(\0132).Config.GlobalTemplate." +
      "Heroclassneedcard_\022#\n\033HeroSkillTrainingG" +
      "iveExpCoe\030\037 \001(\001\022\035\n\025NormalLotteryFreeTime" +
      "\030  \001(\005\022\036\n\026SpecialLotteryFreeTime\030! \001(\005\022 " +
      "\n\030LotteryTicketDiamondCost\030\" \001(\005\022\022\n\nGuil" +
      "dIcons\030# \003(\t\022\030\n\020GuildSeekHelpNum\030$ \001(\005\022\027" +
      "\n\017TavernTaskBrisk\030% \001(\005\022\031\n\021GveMapBattleC" +
      "ount\030& \001(\005\022%\n\035GveDuplicateCardElementCou" +
      "nts\030\' \003(\005\022\034\n\024GveDuplicateHandCard\030( \001(\005\022" +
      "\035\n\025GveDuplicateRoundTime\030) \001(\005\022&\n\036GveDup" +
      "licateWinDeleteCardCount\030* \001(\005\022\'\n\037GveDup" +
      "licateLoseDeleteCardCount\030+ \001(\005\022!\n\031GveDu" +
      "plicateOverCardCount\030, \001(\005\022#\n\033GveDuplica" +
      "teBossLossHpCount\030- \001(\005\022\036\n\026GveDuplicateR" +
      "ewardGold\030. \001(\005\0320\n\022Fieldheronumlimit_\022\r\n" +
      "\005Level\030\001 \001(\005\022\013\n\003Num\030\002 \001(\005\032D\n\030Heroattribu" +
      "teevaluation_\022\014\n\004Num1\030\001 \001(\005\022\014\n\004Num2\030\002 \001(" +
      "\005\022\014\n\004Num3\030\003 \001(\005\032t\n\022Heroclassneedcard_\022\016\n" +
      "\006Class1\030\001 \001(\005\022\016\n\006Class2\030\002 \001(\005\022\016\n\006Class3\030" +
      "\003 \001(\005\022\016\n\006Class4\030\004 \001(\005\022\016\n\006Class5\030\005 \001(\005\022\016\n" +
      "\006Class6\030\006 \001(\005b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_Config_GlobalTemplate_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Config_GlobalTemplate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Config_GlobalTemplate_descriptor,
        new java.lang.String[] { "NameLimit", "DefaultDropGroup", "ChangeNameCost", "PlayeEnergyRecoverTime", "FieldHeroNumLimits", "FormationNameLimit", "FormationCareerLimit", "InitialFormaitonHeros", "FormationCount", "HeroNormalTalentCountLimit", "HeroHealthCorrectionBase", "HeroHealthCorrectionCoe", "HeroAttackCorrectionBase", "HeroAttackCorrectionCoe", "HeroDodgeCorrectionBase", "HeroDodgeCorrectionCoe", "HeroCritCorrectionBase", "HeroCritCorrectionCoe", "HeroBlckCorrectionBase", "HeroBlckCorrectionCoe", "HeroAttributeEvaluation", "HeroLevelLimits", "HeroStarLimit", "HeroStarUpNeedCards", "HeroStarUpNeedGolds", "HeroStarUpGainNormalTalents", "HeroStarUpCancelGiveCards", "HeroStarUpCancelGiveGold", "HeroLearningNeedGolds", "HeroClassNeedCards", "HeroSkillTrainingGiveExpCoe", "NormalLotteryFreeTime", "SpecialLotteryFreeTime", "LotteryTicketDiamondCost", "GuildIcons", "GuildSeekHelpNum", "TavernTaskBrisk", "GveMapBattleCount", "GveDuplicateCardElementCounts", "GveDuplicateHandCard", "GveDuplicateRoundTime", "GveDuplicateWinDeleteCardCount", "GveDuplicateLoseDeleteCardCount", "GveDuplicateOverCardCount", "GveDuplicateBossLossHpCount", "GveDuplicateRewardGold", });
    internal_static_Config_GlobalTemplate_Fieldheronumlimit__descriptor =
      internal_static_Config_GlobalTemplate_descriptor.getNestedTypes().get(0);
    internal_static_Config_GlobalTemplate_Fieldheronumlimit__fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Config_GlobalTemplate_Fieldheronumlimit__descriptor,
        new java.lang.String[] { "Level", "Num", });
    internal_static_Config_GlobalTemplate_Heroattributeevaluation__descriptor =
      internal_static_Config_GlobalTemplate_descriptor.getNestedTypes().get(1);
    internal_static_Config_GlobalTemplate_Heroattributeevaluation__fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Config_GlobalTemplate_Heroattributeevaluation__descriptor,
        new java.lang.String[] { "Num1", "Num2", "Num3", });
    internal_static_Config_GlobalTemplate_Heroclassneedcard__descriptor =
      internal_static_Config_GlobalTemplate_descriptor.getNestedTypes().get(2);
    internal_static_Config_GlobalTemplate_Heroclassneedcard__fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Config_GlobalTemplate_Heroclassneedcard__descriptor,
        new java.lang.String[] { "Class1", "Class2", "Class3", "Class4", "Class5", "Class6", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
