-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: Config

local flatbuffers = require('flatbuffers')

---@class TestListTablesTemplate : TestListTablesTemplate__mt 
 local TestListTablesTemplate = {} -- the module
 ---@class TestListTablesTemplate__mt 
 local TestListTablesTemplate_mt = {} -- the class metatable
 
function TestListTablesTemplate.New()
    local o = {}
    setmetatable(o, {__index = TestListTablesTemplate_mt})
    return o
end
function TestListTablesTemplate.GetRootAsTestListTablesTemplate(buf, offset)
    if type(buf) == "string" then
        buf = flatbuffers.binaryArray.New(buf)
    end
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = TestListTablesTemplate.New()
    o:Init(buf, n + offset)
    return o
end
function TestListTablesTemplate_mt:Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end
function TestListTablesTemplate_mt:Key()
    local o = self.view:Offset(4)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function TestListTablesTemplate.Start(builder) builder:StartObject(1) end
function TestListTablesTemplate.AddKey(builder, key) builder:PrependUOffsetTRelativeSlot(0, key, 0) end
function TestListTablesTemplate.End(builder) return builder:EndObject() end

return TestListTablesTemplate -- return the module