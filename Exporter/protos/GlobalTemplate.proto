syntax = "proto3";
package Config;
message GlobalTemplate {
   int32 NameLimit = 1 ; // 名字字数限制
   int32 DefaultDropGroup = 2 ; // 玩家进入游戏时初始获得物品掉落组
   int32 ChangeNameCost = 3 ; // 改名消耗（单位：宝石）
   int32 PlayeEnergyRecoverTime = 4 ; // 每恢复一点体力所需时间（单位：分钟）
   repeated Fieldheronumlimit_ FieldHeroNumLimits = 5 ; // 各等级可上阵英雄数量，现在的等级对应的是玩家等级
   int32 FormationNameLimit = 6 ; // 阵容名字字数限制
   int32 FormationCareerLimit = 7 ; // 同职业的魔物上阵不能超过x个
   repeated int32 InitialFormaitonHeros = 8 ; // 队伍1-队伍3默认初始英雄及站位
   int32 FormationCount = 9 ; // 玩家可设置X个队伍
   bool HeroNormalTalentCountLimit = 10 ; // 英雄普通奥义数量上限
   bool HeroHealthCorrectionBase = 11 ; // 英雄生命属性权重值
   double HeroHealthCorrectionCoe = 12 ; // 英雄生命属性权重系数
   int32 HeroAttackCorrectionBase = 13 ; // 英雄攻击属性权重值
   double HeroAttackCorrectionCoe = 14 ; // 英雄攻击属性权重系数
   int32 HeroDodgeCorrectionBase = 15 ; // 英雄闪避属性权重值
   double HeroDodgeCorrectionCoe = 16 ; // 英雄闪避属性权重系数
   int32 HeroCritCorrectionBase = 17 ; // 英雄暴击属性权重值
   double HeroCritCorrectionCoe = 18 ; // 英雄暴击属性权重系数
   int32 HeroBlckCorrectionBase = 19 ; // 英雄暴击属性权重值
   double HeroBlckCorrectionCoe = 20 ; // 英雄暴击属性权重系数
   Heroattributeevaluation_ HeroAttributeEvaluation = 21 ; // 英雄个体值评价（(0,Num1]是C，(Num1,Num2]是B，(Num2,Num3]是A，大于Num3是S）
   repeated int32 HeroLevelLimits = 22 ; // 英雄不同星级对应的等级上限，数组第一项为1星对应的等级上限
   int32 HeroStarLimit = 23 ; // 英雄星级上限
   repeated int32 HeroStarUpNeedCards = 24 ; // 英雄不同星级升星所需消耗的同星副卡数量，数组第一项为1星升2星时所需数量
   repeated int32 HeroStarUpNeedGolds = 25 ; // 英雄不同星级升星所需消耗的金币数量，数组第一项为1星升2星时所需数量
   repeated int32 HeroStarUpGainNormalTalents = 26 ; // 当英雄升到指定星级时，可获得1个奥义，从英雄表里的奥义库中随机1个(新增字段！！！）
   repeated int32 HeroStarUpCancelGiveCards = 27 ; // 英雄不同星级取消升星时返还的副卡数量，数组第一项为1星升2星取消时返还的数量（删除了放弃升星结果的操作，该字段删除）
   double HeroStarUpCancelGiveGold = 28 ; // 英雄取消升星时消耗的金币比例（删除了放弃升星结果的操作，该字段删除）
   repeated int32 HeroLearningNeedGolds = 29 ; // 英雄不同星级学习时所需消耗的金币数量，数组第一项为1星所需数量
   repeated Heroclassneedcard_ heroClassNeedCards = 30 ; // 英雄不同星级在不同阶数时进阶所需消耗的同卡数量，数组第一项为1星时所需数量，Class1表示0阶升1阶所需数量
   double HeroSkillTrainingGiveExpCoe = 31 ; // 英雄特训返还英雄经验比例
   int32 NormalLotteryFreeTime = 32 ; // 金币免费召唤冷却时间，单位：分钟
   int32 SpecialLotteryFreeTime = 33 ; // 氪金免费召唤冷却时间，单位：分钟
   int32 LotteryTicketDiamondCost = 34 ; // 单张抽卡券消耗的钻石
   repeated string GuildIcons = 35 ; // 公会图标（最多配置12个）
   int32 GuildSeekHelpNum = 36 ; // 公会援助请求次数（每日00：00刷新）
   int32 TavernTaskBrisk = 37 ; // 酒馆任务给工会增加活跃度
   int32 GveMapBattleCount = 38 ; // 工会副本每天每个委托可挑战次数
   repeated int32 GveDuplicateCardElementCounts = 39 ; // 公会副本玩家牌库地、水、火、风各元素卡牌数量（总和四元素相加总数）
   int32 GveDuplicateHandCard = 40 ; // 公会副本玩家每回合补充手牌的最大数量
   int32 GveDuplicateRoundTime = 41 ; // 公会副本回合准备时间
   int32 GveDuplicateWinDeleteCardCount = 42 ; // 公会副本胜利移除卡牌数量
   int32 GveDuplicateLoseDeleteCardCount = 43 ; // 公会副本失败移除卡牌数量
   int32 GveDuplicateOverCardCount = 44 ; // 公会副本结束判定任意一方移除卡排数量大于等于该值
   int32 GveDuplicateBossLossHpCount = 45 ; // 公会副本每张牌扣除BOSS血量系数
   int32 GveDuplicateRewardGold = 46 ; // 公会副本对BOSS每造成1点伤害获得金币系数
  message Fieldheronumlimit_ {
   int32 Level = 1 ; // Level
   int32 Num = 2 ; // Num
  }
  message Heroattributeevaluation_ {
   int32 Num1 = 1 ; // Num1
   int32 Num2 = 2 ; // Num2
   int32 Num3 = 3 ; // Num3
  }
  message Heroclassneedcard_ {
   int32 Class1 = 1 ; // Class1
   int32 Class2 = 2 ; // Class2
   int32 Class3 = 3 ; // Class3
   int32 Class4 = 4 ; // Class4
   int32 Class5 = 5 ; // Class5
   int32 Class6 = 6 ; // Class6
  }
}