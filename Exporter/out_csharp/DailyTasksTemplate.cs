// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/DailyTasksTemplate.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Config {

  /// <summary>Holder for reflection information generated from protos/DailyTasksTemplate.proto</summary>
  public static partial class DailyTasksTemplateReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/DailyTasksTemplate.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DailyTasksTemplateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9wcm90b3MvRGFpbHlUYXNrc1RlbXBsYXRlLnByb3RvEgZDb25maWcizAQK",
            "EkRhaWx5VGFza3NUZW1wbGF0ZRIKCgJJZBgBIAEoBRIMCgRLaW5kGAIgASgF",
            "EjoKCkxldmVsUmFuZ2UYAyABKAsyJi5Db25maWcuRGFpbHlUYXNrc1RlbXBs",
            "YXRlLkxldmVscmFuZ2VfEg8KB1F1YWxpdHkYBCABKAUSDQoFTGV2ZWwYBSAB",
            "KAUSFAoMU2hvd1Byb2dyZXNzGAYgASgFEhAKCEFjY2Vzc0lkGAcgASgFEjYK",
            "CFRhc2tJbmZvGAggASgLMiQuQ29uZmlnLkRhaWx5VGFza3NUZW1wbGF0ZS5U",
            "YXNraW5mb18SMwoHUmV3YXJkcxgJIAMoCzIiLkNvbmZpZy5EYWlseVRhc2tz",
            "VGVtcGxhdGUuUmV3YXJkXxI7CgtTaG93UmV3YXJkcxgKIAMoCzImLkNvbmZp",
            "Zy5EYWlseVRhc2tzVGVtcGxhdGUuU2hvd3Jld2FyZF8aJwoLTGV2ZWxyYW5n",
            "ZV8SCwoDTWluGAEgASgFEgsKA01heBgCIAEoBRpJCglUYXNraW5mb18SDAoE",
            "VHlwZRgBIAEoBRIOCgZQYXJhbTEYAiABKAUSDgoGUGFyYW0yGAMgASgFEg4K",
            "BlBhcmFtMxgEIAEoBRpCCgdSZXdhcmRfEgwKBFR5cGUYASABKAUSCgoCSWQY",
            "AiABKAUSDQoFQ291bnQYAyABKAUSDgoGUGFyYW0xGAQgASgFGjYKC1Nob3dy",
            "ZXdhcmRfEgwKBFR5cGUYASABKAUSCgoCSWQYAiABKAUSDQoFQ291bnQYAyAB",
            "KAUiSQoWRGFpbHlUYXNrc1RlbXBsYXRlTGlzdBIvCgtEYWlseVRhc2tzcxgB",
            "IAMoCzIaLkNvbmZpZy5EYWlseVRhc2tzVGVtcGxhdGViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Config.DailyTasksTemplate), global::Config.DailyTasksTemplate.Parser, new[]{ "Id", "Kind", "LevelRange", "Quality", "Level", "ShowProgress", "AccessId", "TaskInfo", "Rewards", "ShowRewards" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Config.DailyTasksTemplate.Types.Levelrange_), global::Config.DailyTasksTemplate.Types.Levelrange_.Parser, new[]{ "Min", "Max" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Config.DailyTasksTemplate.Types.Taskinfo_), global::Config.DailyTasksTemplate.Types.Taskinfo_.Parser, new[]{ "Type", "Param1", "Param2", "Param3" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Config.DailyTasksTemplate.Types.Reward_), global::Config.DailyTasksTemplate.Types.Reward_.Parser, new[]{ "Type", "Id", "Count", "Param1" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Config.DailyTasksTemplate.Types.Showreward_), global::Config.DailyTasksTemplate.Types.Showreward_.Parser, new[]{ "Type", "Id", "Count" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Config.DailyTasksTemplateList), global::Config.DailyTasksTemplateList.Parser, new[]{ "DailyTaskss" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DailyTasksTemplate : pb::IMessage<DailyTasksTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DailyTasksTemplate> _parser = new pb::MessageParser<DailyTasksTemplate>(() => new DailyTasksTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DailyTasksTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Config.DailyTasksTemplateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyTasksTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyTasksTemplate(DailyTasksTemplate other) : this() {
      id_ = other.id_;
      kind_ = other.kind_;
      levelRange_ = other.levelRange_ != null ? other.levelRange_.Clone() : null;
      quality_ = other.quality_;
      level_ = other.level_;
      showProgress_ = other.showProgress_;
      accessId_ = other.accessId_;
      taskInfo_ = other.taskInfo_ != null ? other.taskInfo_.Clone() : null;
      rewards_ = other.rewards_.Clone();
      showRewards_ = other.showRewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyTasksTemplate Clone() {
      return new DailyTasksTemplate(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 任务ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Kind" field.</summary>
    public const int KindFieldNumber = 2;
    private int kind_;
    /// <summary>
    /// 任务种类
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "LevelRange" field.</summary>
    public const int LevelRangeFieldNumber = 3;
    private global::Config.DailyTasksTemplate.Types.Levelrange_ levelRange_;
    /// <summary>
    /// 酒馆等级区间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Config.DailyTasksTemplate.Types.Levelrange_ LevelRange {
      get { return levelRange_; }
      set {
        levelRange_ = value;
      }
    }

    /// <summary>Field number for the "Quality" field.</summary>
    public const int QualityFieldNumber = 4;
    private int quality_;
    /// <summary>
    /// 任务品质
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 5;
    private int level_;
    /// <summary>
    /// 需求玩家等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "ShowProgress" field.</summary>
    public const int ShowProgressFieldNumber = 6;
    private int showProgress_;
    /// <summary>
    /// 进度显示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShowProgress {
      get { return showProgress_; }
      set {
        showProgress_ = value;
      }
    }

    /// <summary>Field number for the "AccessId" field.</summary>
    public const int AccessIdFieldNumber = 7;
    private int accessId_;
    /// <summary>
    /// 跳转
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccessId {
      get { return accessId_; }
      set {
        accessId_ = value;
      }
    }

    /// <summary>Field number for the "TaskInfo" field.</summary>
    public const int TaskInfoFieldNumber = 8;
    private global::Config.DailyTasksTemplate.Types.Taskinfo_ taskInfo_;
    /// <summary>
    /// 任务信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Config.DailyTasksTemplate.Types.Taskinfo_ TaskInfo {
      get { return taskInfo_; }
      set {
        taskInfo_ = value;
      }
    }

    /// <summary>Field number for the "Rewards" field.</summary>
    public const int RewardsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Config.DailyTasksTemplate.Types.Reward_> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(74, global::Config.DailyTasksTemplate.Types.Reward_.Parser);
    private readonly pbc::RepeatedField<global::Config.DailyTasksTemplate.Types.Reward_> rewards_ = new pbc::RepeatedField<global::Config.DailyTasksTemplate.Types.Reward_>();
    /// <summary>
    /// 任务奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Config.DailyTasksTemplate.Types.Reward_> Rewards {
      get { return rewards_; }
    }

    /// <summary>Field number for the "ShowRewards" field.</summary>
    public const int ShowRewardsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Config.DailyTasksTemplate.Types.Showreward_> _repeated_showRewards_codec
        = pb::FieldCodec.ForMessage(82, global::Config.DailyTasksTemplate.Types.Showreward_.Parser);
    private readonly pbc::RepeatedField<global::Config.DailyTasksTemplate.Types.Showreward_> showRewards_ = new pbc::RepeatedField<global::Config.DailyTasksTemplate.Types.Showreward_>();
    /// <summary>
    /// 奖励展示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Config.DailyTasksTemplate.Types.Showreward_> ShowRewards {
      get { return showRewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DailyTasksTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DailyTasksTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Kind != other.Kind) return false;
      if (!object.Equals(LevelRange, other.LevelRange)) return false;
      if (Quality != other.Quality) return false;
      if (Level != other.Level) return false;
      if (ShowProgress != other.ShowProgress) return false;
      if (AccessId != other.AccessId) return false;
      if (!object.Equals(TaskInfo, other.TaskInfo)) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      if(!showRewards_.Equals(other.showRewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Kind != 0) hash ^= Kind.GetHashCode();
      if (levelRange_ != null) hash ^= LevelRange.GetHashCode();
      if (Quality != 0) hash ^= Quality.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (ShowProgress != 0) hash ^= ShowProgress.GetHashCode();
      if (AccessId != 0) hash ^= AccessId.GetHashCode();
      if (taskInfo_ != null) hash ^= TaskInfo.GetHashCode();
      hash ^= rewards_.GetHashCode();
      hash ^= showRewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Kind != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Kind);
      }
      if (levelRange_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LevelRange);
      }
      if (Quality != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Quality);
      }
      if (Level != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Level);
      }
      if (ShowProgress != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ShowProgress);
      }
      if (AccessId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AccessId);
      }
      if (taskInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(TaskInfo);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      showRewards_.WriteTo(output, _repeated_showRewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Kind != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Kind);
      }
      if (levelRange_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LevelRange);
      }
      if (Quality != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Quality);
      }
      if (Level != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Level);
      }
      if (ShowProgress != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ShowProgress);
      }
      if (AccessId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AccessId);
      }
      if (taskInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(TaskInfo);
      }
      rewards_.WriteTo(ref output, _repeated_rewards_codec);
      showRewards_.WriteTo(ref output, _repeated_showRewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Kind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kind);
      }
      if (levelRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LevelRange);
      }
      if (Quality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quality);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (ShowProgress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShowProgress);
      }
      if (AccessId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccessId);
      }
      if (taskInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskInfo);
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      size += showRewards_.CalculateSize(_repeated_showRewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DailyTasksTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Kind != 0) {
        Kind = other.Kind;
      }
      if (other.levelRange_ != null) {
        if (levelRange_ == null) {
          LevelRange = new global::Config.DailyTasksTemplate.Types.Levelrange_();
        }
        LevelRange.MergeFrom(other.LevelRange);
      }
      if (other.Quality != 0) {
        Quality = other.Quality;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.ShowProgress != 0) {
        ShowProgress = other.ShowProgress;
      }
      if (other.AccessId != 0) {
        AccessId = other.AccessId;
      }
      if (other.taskInfo_ != null) {
        if (taskInfo_ == null) {
          TaskInfo = new global::Config.DailyTasksTemplate.Types.Taskinfo_();
        }
        TaskInfo.MergeFrom(other.TaskInfo);
      }
      rewards_.Add(other.rewards_);
      showRewards_.Add(other.showRewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Kind = input.ReadInt32();
            break;
          }
          case 26: {
            if (levelRange_ == null) {
              LevelRange = new global::Config.DailyTasksTemplate.Types.Levelrange_();
            }
            input.ReadMessage(LevelRange);
            break;
          }
          case 32: {
            Quality = input.ReadInt32();
            break;
          }
          case 40: {
            Level = input.ReadInt32();
            break;
          }
          case 48: {
            ShowProgress = input.ReadInt32();
            break;
          }
          case 56: {
            AccessId = input.ReadInt32();
            break;
          }
          case 66: {
            if (taskInfo_ == null) {
              TaskInfo = new global::Config.DailyTasksTemplate.Types.Taskinfo_();
            }
            input.ReadMessage(TaskInfo);
            break;
          }
          case 74: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
          case 82: {
            showRewards_.AddEntriesFrom(input, _repeated_showRewards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Kind = input.ReadInt32();
            break;
          }
          case 26: {
            if (levelRange_ == null) {
              LevelRange = new global::Config.DailyTasksTemplate.Types.Levelrange_();
            }
            input.ReadMessage(LevelRange);
            break;
          }
          case 32: {
            Quality = input.ReadInt32();
            break;
          }
          case 40: {
            Level = input.ReadInt32();
            break;
          }
          case 48: {
            ShowProgress = input.ReadInt32();
            break;
          }
          case 56: {
            AccessId = input.ReadInt32();
            break;
          }
          case 66: {
            if (taskInfo_ == null) {
              TaskInfo = new global::Config.DailyTasksTemplate.Types.Taskinfo_();
            }
            input.ReadMessage(TaskInfo);
            break;
          }
          case 74: {
            rewards_.AddEntriesFrom(ref input, _repeated_rewards_codec);
            break;
          }
          case 82: {
            showRewards_.AddEntriesFrom(ref input, _repeated_showRewards_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DailyTasksTemplate message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Levelrange_ : pb::IMessage<Levelrange_>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Levelrange_> _parser = new pb::MessageParser<Levelrange_>(() => new Levelrange_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Levelrange_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Config.DailyTasksTemplate.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Levelrange_() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Levelrange_(Levelrange_ other) : this() {
          min_ = other.min_;
          max_ = other.max_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Levelrange_ Clone() {
          return new Levelrange_(this);
        }

        /// <summary>Field number for the "Min" field.</summary>
        public const int MinFieldNumber = 1;
        private int min_;
        /// <summary>
        /// Min
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Min {
          get { return min_; }
          set {
            min_ = value;
          }
        }

        /// <summary>Field number for the "Max" field.</summary>
        public const int MaxFieldNumber = 2;
        private int max_;
        /// <summary>
        /// Max
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Max {
          get { return max_; }
          set {
            max_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Levelrange_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Levelrange_ other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Min != other.Min) return false;
          if (Max != other.Max) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Min != 0) hash ^= Min.GetHashCode();
          if (Max != 0) hash ^= Max.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Min != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Min);
          }
          if (Max != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Max);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Min != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Min);
          }
          if (Max != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Max);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Min != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Min);
          }
          if (Max != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Max);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Levelrange_ other) {
          if (other == null) {
            return;
          }
          if (other.Min != 0) {
            Min = other.Min;
          }
          if (other.Max != 0) {
            Max = other.Max;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Min = input.ReadInt32();
                break;
              }
              case 16: {
                Max = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Min = input.ReadInt32();
                break;
              }
              case 16: {
                Max = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Taskinfo_ : pb::IMessage<Taskinfo_>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Taskinfo_> _parser = new pb::MessageParser<Taskinfo_>(() => new Taskinfo_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Taskinfo_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Config.DailyTasksTemplate.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Taskinfo_() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Taskinfo_(Taskinfo_ other) : this() {
          type_ = other.type_;
          param1_ = other.param1_;
          param2_ = other.param2_;
          param3_ = other.param3_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Taskinfo_ Clone() {
          return new Taskinfo_(this);
        }

        /// <summary>Field number for the "Type" field.</summary>
        public const int TypeFieldNumber = 1;
        private int type_;
        /// <summary>
        /// Type
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "Param1" field.</summary>
        public const int Param1FieldNumber = 2;
        private int param1_;
        /// <summary>
        /// Param1
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Param1 {
          get { return param1_; }
          set {
            param1_ = value;
          }
        }

        /// <summary>Field number for the "Param2" field.</summary>
        public const int Param2FieldNumber = 3;
        private int param2_;
        /// <summary>
        /// Param2
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Param2 {
          get { return param2_; }
          set {
            param2_ = value;
          }
        }

        /// <summary>Field number for the "Param3" field.</summary>
        public const int Param3FieldNumber = 4;
        private int param3_;
        /// <summary>
        /// Param3
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Param3 {
          get { return param3_; }
          set {
            param3_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Taskinfo_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Taskinfo_ other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (Param1 != other.Param1) return false;
          if (Param2 != other.Param2) return false;
          if (Param3 != other.Param3) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != 0) hash ^= Type.GetHashCode();
          if (Param1 != 0) hash ^= Param1.GetHashCode();
          if (Param2 != 0) hash ^= Param2.GetHashCode();
          if (Param3 != 0) hash ^= Param3.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Type);
          }
          if (Param1 != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Param1);
          }
          if (Param2 != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Param2);
          }
          if (Param3 != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Param3);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Type);
          }
          if (Param1 != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Param1);
          }
          if (Param2 != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Param2);
          }
          if (Param3 != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Param3);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
          }
          if (Param1 != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param1);
          }
          if (Param2 != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param2);
          }
          if (Param3 != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param3);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Taskinfo_ other) {
          if (other == null) {
            return;
          }
          if (other.Type != 0) {
            Type = other.Type;
          }
          if (other.Param1 != 0) {
            Param1 = other.Param1;
          }
          if (other.Param2 != 0) {
            Param2 = other.Param2;
          }
          if (other.Param3 != 0) {
            Param3 = other.Param3;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Type = input.ReadInt32();
                break;
              }
              case 16: {
                Param1 = input.ReadInt32();
                break;
              }
              case 24: {
                Param2 = input.ReadInt32();
                break;
              }
              case 32: {
                Param3 = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Type = input.ReadInt32();
                break;
              }
              case 16: {
                Param1 = input.ReadInt32();
                break;
              }
              case 24: {
                Param2 = input.ReadInt32();
                break;
              }
              case 32: {
                Param3 = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Reward_ : pb::IMessage<Reward_>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Reward_> _parser = new pb::MessageParser<Reward_>(() => new Reward_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Reward_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Config.DailyTasksTemplate.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Reward_() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Reward_(Reward_ other) : this() {
          type_ = other.type_;
          id_ = other.id_;
          count_ = other.count_;
          param1_ = other.param1_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Reward_ Clone() {
          return new Reward_(this);
        }

        /// <summary>Field number for the "Type" field.</summary>
        public const int TypeFieldNumber = 1;
        private int type_;
        /// <summary>
        /// Type
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "Id" field.</summary>
        public const int IdFieldNumber = 2;
        private int id_;
        /// <summary>
        /// Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "Count" field.</summary>
        public const int CountFieldNumber = 3;
        private int count_;
        /// <summary>
        /// Count
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Count {
          get { return count_; }
          set {
            count_ = value;
          }
        }

        /// <summary>Field number for the "Param1" field.</summary>
        public const int Param1FieldNumber = 4;
        private int param1_;
        /// <summary>
        /// Param1
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Param1 {
          get { return param1_; }
          set {
            param1_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Reward_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Reward_ other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (Id != other.Id) return false;
          if (Count != other.Count) return false;
          if (Param1 != other.Param1) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != 0) hash ^= Type.GetHashCode();
          if (Id != 0) hash ^= Id.GetHashCode();
          if (Count != 0) hash ^= Count.GetHashCode();
          if (Param1 != 0) hash ^= Param1.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Type);
          }
          if (Id != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Id);
          }
          if (Count != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Count);
          }
          if (Param1 != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Param1);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Type);
          }
          if (Id != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Id);
          }
          if (Count != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Count);
          }
          if (Param1 != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Param1);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
          }
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
          }
          if (Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
          }
          if (Param1 != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param1);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Reward_ other) {
          if (other == null) {
            return;
          }
          if (other.Type != 0) {
            Type = other.Type;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.Count != 0) {
            Count = other.Count;
          }
          if (other.Param1 != 0) {
            Param1 = other.Param1;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Type = input.ReadInt32();
                break;
              }
              case 16: {
                Id = input.ReadInt32();
                break;
              }
              case 24: {
                Count = input.ReadInt32();
                break;
              }
              case 32: {
                Param1 = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Type = input.ReadInt32();
                break;
              }
              case 16: {
                Id = input.ReadInt32();
                break;
              }
              case 24: {
                Count = input.ReadInt32();
                break;
              }
              case 32: {
                Param1 = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Showreward_ : pb::IMessage<Showreward_>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Showreward_> _parser = new pb::MessageParser<Showreward_>(() => new Showreward_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Showreward_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Config.DailyTasksTemplate.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Showreward_() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Showreward_(Showreward_ other) : this() {
          type_ = other.type_;
          id_ = other.id_;
          count_ = other.count_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Showreward_ Clone() {
          return new Showreward_(this);
        }

        /// <summary>Field number for the "Type" field.</summary>
        public const int TypeFieldNumber = 1;
        private int type_;
        /// <summary>
        /// Type
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "Id" field.</summary>
        public const int IdFieldNumber = 2;
        private int id_;
        /// <summary>
        /// Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "Count" field.</summary>
        public const int CountFieldNumber = 3;
        private int count_;
        /// <summary>
        /// Count
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Count {
          get { return count_; }
          set {
            count_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Showreward_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Showreward_ other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (Id != other.Id) return false;
          if (Count != other.Count) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != 0) hash ^= Type.GetHashCode();
          if (Id != 0) hash ^= Id.GetHashCode();
          if (Count != 0) hash ^= Count.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Type);
          }
          if (Id != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Id);
          }
          if (Count != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Count);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Type);
          }
          if (Id != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Id);
          }
          if (Count != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Count);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
          }
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
          }
          if (Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Showreward_ other) {
          if (other == null) {
            return;
          }
          if (other.Type != 0) {
            Type = other.Type;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.Count != 0) {
            Count = other.Count;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Type = input.ReadInt32();
                break;
              }
              case 16: {
                Id = input.ReadInt32();
                break;
              }
              case 24: {
                Count = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Type = input.ReadInt32();
                break;
              }
              case 16: {
                Id = input.ReadInt32();
                break;
              }
              case 24: {
                Count = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class DailyTasksTemplateList : pb::IMessage<DailyTasksTemplateList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DailyTasksTemplateList> _parser = new pb::MessageParser<DailyTasksTemplateList>(() => new DailyTasksTemplateList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DailyTasksTemplateList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Config.DailyTasksTemplateReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyTasksTemplateList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyTasksTemplateList(DailyTasksTemplateList other) : this() {
      dailyTaskss_ = other.dailyTaskss_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyTasksTemplateList Clone() {
      return new DailyTasksTemplateList(this);
    }

    /// <summary>Field number for the "DailyTaskss" field.</summary>
    public const int DailyTaskssFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Config.DailyTasksTemplate> _repeated_dailyTaskss_codec
        = pb::FieldCodec.ForMessage(10, global::Config.DailyTasksTemplate.Parser);
    private readonly pbc::RepeatedField<global::Config.DailyTasksTemplate> dailyTaskss_ = new pbc::RepeatedField<global::Config.DailyTasksTemplate>();
    /// <summary>
    /// List
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Config.DailyTasksTemplate> DailyTaskss {
      get { return dailyTaskss_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DailyTasksTemplateList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DailyTasksTemplateList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dailyTaskss_.Equals(other.dailyTaskss_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dailyTaskss_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dailyTaskss_.WriteTo(output, _repeated_dailyTaskss_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dailyTaskss_.WriteTo(ref output, _repeated_dailyTaskss_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dailyTaskss_.CalculateSize(_repeated_dailyTaskss_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DailyTasksTemplateList other) {
      if (other == null) {
        return;
      }
      dailyTaskss_.Add(other.dailyTaskss_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dailyTaskss_.AddEntriesFrom(input, _repeated_dailyTaskss_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dailyTaskss_.AddEntriesFrom(ref input, _repeated_dailyTaskss_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
