// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/TestGlobalTemplate.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Config {

  /// <summary>Holder for reflection information generated from protos/TestGlobalTemplate.proto</summary>
  public static partial class TestGlobalTemplateReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/TestGlobalTemplate.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TestGlobalTemplateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9wcm90b3MvVGVzdEdsb2JhbFRlbXBsYXRlLnByb3RvEgZDb25maWcaF3By",
            "b3Rvcy9Qb3NpdGlvbjNkLnByb3RvGhxwcm90b3MvUG9zaXRpb25BcnJheTNk",
            "LnByb3RvIoAHChJUZXN0R2xvYmFsVGVtcGxhdGUSDwoHVGVzdEludBgBIAEo",
            "BRIYChBUZXN0U3RyaW5nQXJyYXlzGAIgAygJEhMKC1Rlc3RTdHJpbmcxGAMg",
            "ASgBEhIKClRlc3RTdHJpbmcYBCABKAkSEQoJVGVzdEZsb2F0GAUgASgCEhIK",
            "ClRlc3REb3VibGUYBiABKAESEAoIVGVzdEJvb2wYByABKAgSFQoNVGVzdElu",
            "dEFycmF5cxgIIAMoBRIXCg9UZXN0RmxvYXRBcnJheXMYCSADKAISGAoQVGVz",
            "dERvdWJsZUFycmF5cxgKIAMoARIWCg5UZXN0Qm9vbEFycmF5cxgLIAMoCBI0",
            "CgdUZXN0T2JqGAwgASgLMiMuQ29uZmlnLlRlc3RHbG9iYWxUZW1wbGF0ZS5U",
            "ZXN0T2JqXxI2CghUZXN0T2JqMRgNIAEoCzIkLkNvbmZpZy5UZXN0R2xvYmFs",
            "VGVtcGxhdGUuVGVzdE9iajFfEj8KDVRlc3RPYmpBcnJheXMYDiADKAsyKC5D",
            "b25maWcuVGVzdEdsb2JhbFRlbXBsYXRlLlRlc3RPYmpBcnJheV8SQQoOVGVz",
            "dE9iakFycmF5MXMYDyADKAsyKS5Db25maWcuVGVzdEdsb2JhbFRlbXBsYXRl",
            "LlRlc3RPYmpBcnJheTFfEikKFFRlc3REZWZpbmVGcm9tR2xvYmFsGBAgASgL",
            "MgsuUG9zaXRpb24zZBIrChZUZXN0RGVmaW5lRnJvbUdsb2JhbDJzGBEgAygL",
            "MgsuUG9zaXRpb24zZBInCg1UZXN0Q3VzdG9tT2JqGBIgASgLMhAuUG9zaXRp",
            "b25BcnJheTNkEi0KE1Rlc3RDdXN0b21PYmpBcnJheXMYEyADKAsyEC5Qb3Np",
            "dGlvbkFycmF5M2QSEAoIVGVzdDFJbnQYFCABKAUSEAoIVGVzdEludDEYFSAB",
            "KAUaKwoIVGVzdE9ial8SCQoBYRgBIAEoBRIJCgFiGAIgASgCEgkKAWMYAyAB",
            "KAgaLQoJVGVzdE9iajFfEgkKAWEYASABKAUSCgoCYnMYAiADKAISCQoBdhgD",
            "IAEoCBowCg1UZXN0T2JqQXJyYXlfEgkKAWEYASABKAUSCQoBYhgCIAEoBRIJ",
            "CgFjGAMgASgFGicKDlRlc3RPYmpBcnJheTFfEgkKAWEYASABKAUSCgoCYnMY",
            "AiADKAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Position3DReflection.Descriptor, global::PositionArray3DReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Config.TestGlobalTemplate), global::Config.TestGlobalTemplate.Parser, new[]{ "TestInt", "TestStringArrays", "TestString1", "TestString", "TestFloat", "TestDouble", "TestBool", "TestIntArrays", "TestFloatArrays", "TestDoubleArrays", "TestBoolArrays", "TestObj", "TestObj1", "TestObjArrays", "TestObjArray1S", "TestDefineFromGlobal", "TestDefineFromGlobal2S", "TestCustomObj", "TestCustomObjArrays", "Test1Int", "TestInt1" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Config.TestGlobalTemplate.Types.TestObj_), global::Config.TestGlobalTemplate.Types.TestObj_.Parser, new[]{ "A", "B", "C" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Config.TestGlobalTemplate.Types.TestObj1_), global::Config.TestGlobalTemplate.Types.TestObj1_.Parser, new[]{ "A", "Bs", "V" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Config.TestGlobalTemplate.Types.TestObjArray_), global::Config.TestGlobalTemplate.Types.TestObjArray_.Parser, new[]{ "A", "B", "C" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Config.TestGlobalTemplate.Types.TestObjArray1_), global::Config.TestGlobalTemplate.Types.TestObjArray1_.Parser, new[]{ "A", "Bs" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TestGlobalTemplate : pb::IMessage<TestGlobalTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestGlobalTemplate> _parser = new pb::MessageParser<TestGlobalTemplate>(() => new TestGlobalTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestGlobalTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Config.TestGlobalTemplateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestGlobalTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestGlobalTemplate(TestGlobalTemplate other) : this() {
      testInt_ = other.testInt_;
      testStringArrays_ = other.testStringArrays_.Clone();
      testString1_ = other.testString1_;
      testString_ = other.testString_;
      testFloat_ = other.testFloat_;
      testDouble_ = other.testDouble_;
      testBool_ = other.testBool_;
      testIntArrays_ = other.testIntArrays_.Clone();
      testFloatArrays_ = other.testFloatArrays_.Clone();
      testDoubleArrays_ = other.testDoubleArrays_.Clone();
      testBoolArrays_ = other.testBoolArrays_.Clone();
      testObj_ = other.testObj_ != null ? other.testObj_.Clone() : null;
      testObj1_ = other.testObj1_ != null ? other.testObj1_.Clone() : null;
      testObjArrays_ = other.testObjArrays_.Clone();
      testObjArray1S_ = other.testObjArray1S_.Clone();
      testDefineFromGlobal_ = other.testDefineFromGlobal_ != null ? other.testDefineFromGlobal_.Clone() : null;
      testDefineFromGlobal2S_ = other.testDefineFromGlobal2S_.Clone();
      testCustomObj_ = other.testCustomObj_ != null ? other.testCustomObj_.Clone() : null;
      testCustomObjArrays_ = other.testCustomObjArrays_.Clone();
      test1Int_ = other.test1Int_;
      testInt1_ = other.testInt1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestGlobalTemplate Clone() {
      return new TestGlobalTemplate(this);
    }

    /// <summary>Field number for the "TestInt" field.</summary>
    public const int TestIntFieldNumber = 1;
    private int testInt_;
    /// <summary>
    /// 测试int类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TestInt {
      get { return testInt_; }
      set {
        testInt_ = value;
      }
    }

    /// <summary>Field number for the "TestStringArrays" field.</summary>
    public const int TestStringArraysFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_testStringArrays_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> testStringArrays_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 测试string[]类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TestStringArrays {
      get { return testStringArrays_; }
    }

    /// <summary>Field number for the "TestString1" field.</summary>
    public const int TestString1FieldNumber = 3;
    private double testString1_;
    /// <summary>
    /// 测试string数字类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TestString1 {
      get { return testString1_; }
      set {
        testString1_ = value;
      }
    }

    /// <summary>Field number for the "TestString" field.</summary>
    public const int TestStringFieldNumber = 4;
    private string testString_ = "";
    /// <summary>
    /// 测试string类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestString {
      get { return testString_; }
      set {
        testString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TestFloat" field.</summary>
    public const int TestFloatFieldNumber = 5;
    private float testFloat_;
    /// <summary>
    /// 测试float类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float TestFloat {
      get { return testFloat_; }
      set {
        testFloat_ = value;
      }
    }

    /// <summary>Field number for the "TestDouble" field.</summary>
    public const int TestDoubleFieldNumber = 6;
    private double testDouble_;
    /// <summary>
    /// 测试double类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TestDouble {
      get { return testDouble_; }
      set {
        testDouble_ = value;
      }
    }

    /// <summary>Field number for the "TestBool" field.</summary>
    public const int TestBoolFieldNumber = 7;
    private bool testBool_;
    /// <summary>
    /// 测试bool类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TestBool {
      get { return testBool_; }
      set {
        testBool_ = value;
      }
    }

    /// <summary>Field number for the "TestIntArrays" field.</summary>
    public const int TestIntArraysFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_testIntArrays_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> testIntArrays_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 测试int数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> TestIntArrays {
      get { return testIntArrays_; }
    }

    /// <summary>Field number for the "TestFloatArrays" field.</summary>
    public const int TestFloatArraysFieldNumber = 9;
    private static readonly pb::FieldCodec<float> _repeated_testFloatArrays_codec
        = pb::FieldCodec.ForFloat(74);
    private readonly pbc::RepeatedField<float> testFloatArrays_ = new pbc::RepeatedField<float>();
    /// <summary>
    /// 测试float数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> TestFloatArrays {
      get { return testFloatArrays_; }
    }

    /// <summary>Field number for the "TestDoubleArrays" field.</summary>
    public const int TestDoubleArraysFieldNumber = 10;
    private static readonly pb::FieldCodec<double> _repeated_testDoubleArrays_codec
        = pb::FieldCodec.ForDouble(82);
    private readonly pbc::RepeatedField<double> testDoubleArrays_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// 测试double数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> TestDoubleArrays {
      get { return testDoubleArrays_; }
    }

    /// <summary>Field number for the "TestBoolArrays" field.</summary>
    public const int TestBoolArraysFieldNumber = 11;
    private static readonly pb::FieldCodec<bool> _repeated_testBoolArrays_codec
        = pb::FieldCodec.ForBool(90);
    private readonly pbc::RepeatedField<bool> testBoolArrays_ = new pbc::RepeatedField<bool>();
    /// <summary>
    /// 测试bool数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> TestBoolArrays {
      get { return testBoolArrays_; }
    }

    /// <summary>Field number for the "TestObj" field.</summary>
    public const int TestObjFieldNumber = 12;
    private global::Config.TestGlobalTemplate.Types.TestObj_ testObj_;
    /// <summary>
    /// 测试普通自定义对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Config.TestGlobalTemplate.Types.TestObj_ TestObj {
      get { return testObj_; }
      set {
        testObj_ = value;
      }
    }

    /// <summary>Field number for the "TestObj1" field.</summary>
    public const int TestObj1FieldNumber = 13;
    private global::Config.TestGlobalTemplate.Types.TestObj1_ testObj1_;
    /// <summary>
    /// 测试普通自定义内部含有数组对象,
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Config.TestGlobalTemplate.Types.TestObj1_ TestObj1 {
      get { return testObj1_; }
      set {
        testObj1_ = value;
      }
    }

    /// <summary>Field number for the "TestObjArrays" field.</summary>
    public const int TestObjArraysFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Config.TestGlobalTemplate.Types.TestObjArray_> _repeated_testObjArrays_codec
        = pb::FieldCodec.ForMessage(114, global::Config.TestGlobalTemplate.Types.TestObjArray_.Parser);
    private readonly pbc::RepeatedField<global::Config.TestGlobalTemplate.Types.TestObjArray_> testObjArrays_ = new pbc::RepeatedField<global::Config.TestGlobalTemplate.Types.TestObjArray_>();
    /// <summary>
    /// 测试普通自定义对象数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Config.TestGlobalTemplate.Types.TestObjArray_> TestObjArrays {
      get { return testObjArrays_; }
    }

    /// <summary>Field number for the "TestObjArray1s" field.</summary>
    public const int TestObjArray1SFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Config.TestGlobalTemplate.Types.TestObjArray1_> _repeated_testObjArray1S_codec
        = pb::FieldCodec.ForMessage(122, global::Config.TestGlobalTemplate.Types.TestObjArray1_.Parser);
    private readonly pbc::RepeatedField<global::Config.TestGlobalTemplate.Types.TestObjArray1_> testObjArray1S_ = new pbc::RepeatedField<global::Config.TestGlobalTemplate.Types.TestObjArray1_>();
    /// <summary>
    /// 测试普通自定义内部含有数组对象数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Config.TestGlobalTemplate.Types.TestObjArray1_> TestObjArray1S {
      get { return testObjArray1S_; }
    }

    /// <summary>Field number for the "TestDefineFromGlobal" field.</summary>
    public const int TestDefineFromGlobalFieldNumber = 16;
    private global::Position3d testDefineFromGlobal_;
    /// <summary>
    /// 测试全局对象声明
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Position3d TestDefineFromGlobal {
      get { return testDefineFromGlobal_; }
      set {
        testDefineFromGlobal_ = value;
      }
    }

    /// <summary>Field number for the "TestDefineFromGlobal2s" field.</summary>
    public const int TestDefineFromGlobal2SFieldNumber = 17;
    private static readonly pb::FieldCodec<global::Position3d> _repeated_testDefineFromGlobal2S_codec
        = pb::FieldCodec.ForMessage(138, global::Position3d.Parser);
    private readonly pbc::RepeatedField<global::Position3d> testDefineFromGlobal2S_ = new pbc::RepeatedField<global::Position3d>();
    /// <summary>
    /// 测试全局对象声明数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Position3d> TestDefineFromGlobal2S {
      get { return testDefineFromGlobal2S_; }
    }

    /// <summary>Field number for the "TestCustomObj" field.</summary>
    public const int TestCustomObjFieldNumber = 18;
    private global::PositionArray3d testCustomObj_;
    /// <summary>
    /// 测试全局配置数组字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PositionArray3d TestCustomObj {
      get { return testCustomObj_; }
      set {
        testCustomObj_ = value;
      }
    }

    /// <summary>Field number for the "TestCustomObjArrays" field.</summary>
    public const int TestCustomObjArraysFieldNumber = 19;
    private static readonly pb::FieldCodec<global::PositionArray3d> _repeated_testCustomObjArrays_codec
        = pb::FieldCodec.ForMessage(154, global::PositionArray3d.Parser);
    private readonly pbc::RepeatedField<global::PositionArray3d> testCustomObjArrays_ = new pbc::RepeatedField<global::PositionArray3d>();
    /// <summary>
    /// 测试全局配置含有数组字段的数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PositionArray3d> TestCustomObjArrays {
      get { return testCustomObjArrays_; }
    }

    /// <summary>Field number for the "Test1Int" field.</summary>
    public const int Test1IntFieldNumber = 20;
    private int test1Int_;
    /// <summary>
    /// 测试int类型 可以 但不建议字段命名含有数字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Test1Int {
      get { return test1Int_; }
      set {
        test1Int_ = value;
      }
    }

    /// <summary>Field number for the "TestInt1" field.</summary>
    public const int TestInt1FieldNumber = 21;
    private int testInt1_;
    /// <summary>
    /// 测试int类型 可以 但不建议字段命名含有数字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TestInt1 {
      get { return testInt1_; }
      set {
        testInt1_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestGlobalTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestGlobalTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TestInt != other.TestInt) return false;
      if(!testStringArrays_.Equals(other.testStringArrays_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TestString1, other.TestString1)) return false;
      if (TestString != other.TestString) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TestFloat, other.TestFloat)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TestDouble, other.TestDouble)) return false;
      if (TestBool != other.TestBool) return false;
      if(!testIntArrays_.Equals(other.testIntArrays_)) return false;
      if(!testFloatArrays_.Equals(other.testFloatArrays_)) return false;
      if(!testDoubleArrays_.Equals(other.testDoubleArrays_)) return false;
      if(!testBoolArrays_.Equals(other.testBoolArrays_)) return false;
      if (!object.Equals(TestObj, other.TestObj)) return false;
      if (!object.Equals(TestObj1, other.TestObj1)) return false;
      if(!testObjArrays_.Equals(other.testObjArrays_)) return false;
      if(!testObjArray1S_.Equals(other.testObjArray1S_)) return false;
      if (!object.Equals(TestDefineFromGlobal, other.TestDefineFromGlobal)) return false;
      if(!testDefineFromGlobal2S_.Equals(other.testDefineFromGlobal2S_)) return false;
      if (!object.Equals(TestCustomObj, other.TestCustomObj)) return false;
      if(!testCustomObjArrays_.Equals(other.testCustomObjArrays_)) return false;
      if (Test1Int != other.Test1Int) return false;
      if (TestInt1 != other.TestInt1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TestInt != 0) hash ^= TestInt.GetHashCode();
      hash ^= testStringArrays_.GetHashCode();
      if (TestString1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TestString1);
      if (TestString.Length != 0) hash ^= TestString.GetHashCode();
      if (TestFloat != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TestFloat);
      if (TestDouble != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TestDouble);
      if (TestBool != false) hash ^= TestBool.GetHashCode();
      hash ^= testIntArrays_.GetHashCode();
      hash ^= testFloatArrays_.GetHashCode();
      hash ^= testDoubleArrays_.GetHashCode();
      hash ^= testBoolArrays_.GetHashCode();
      if (testObj_ != null) hash ^= TestObj.GetHashCode();
      if (testObj1_ != null) hash ^= TestObj1.GetHashCode();
      hash ^= testObjArrays_.GetHashCode();
      hash ^= testObjArray1S_.GetHashCode();
      if (testDefineFromGlobal_ != null) hash ^= TestDefineFromGlobal.GetHashCode();
      hash ^= testDefineFromGlobal2S_.GetHashCode();
      if (testCustomObj_ != null) hash ^= TestCustomObj.GetHashCode();
      hash ^= testCustomObjArrays_.GetHashCode();
      if (Test1Int != 0) hash ^= Test1Int.GetHashCode();
      if (TestInt1 != 0) hash ^= TestInt1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TestInt != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TestInt);
      }
      testStringArrays_.WriteTo(output, _repeated_testStringArrays_codec);
      if (TestString1 != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TestString1);
      }
      if (TestString.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TestString);
      }
      if (TestFloat != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(TestFloat);
      }
      if (TestDouble != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(TestDouble);
      }
      if (TestBool != false) {
        output.WriteRawTag(56);
        output.WriteBool(TestBool);
      }
      testIntArrays_.WriteTo(output, _repeated_testIntArrays_codec);
      testFloatArrays_.WriteTo(output, _repeated_testFloatArrays_codec);
      testDoubleArrays_.WriteTo(output, _repeated_testDoubleArrays_codec);
      testBoolArrays_.WriteTo(output, _repeated_testBoolArrays_codec);
      if (testObj_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(TestObj);
      }
      if (testObj1_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(TestObj1);
      }
      testObjArrays_.WriteTo(output, _repeated_testObjArrays_codec);
      testObjArray1S_.WriteTo(output, _repeated_testObjArray1S_codec);
      if (testDefineFromGlobal_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(TestDefineFromGlobal);
      }
      testDefineFromGlobal2S_.WriteTo(output, _repeated_testDefineFromGlobal2S_codec);
      if (testCustomObj_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(TestCustomObj);
      }
      testCustomObjArrays_.WriteTo(output, _repeated_testCustomObjArrays_codec);
      if (Test1Int != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Test1Int);
      }
      if (TestInt1 != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(TestInt1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TestInt != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TestInt);
      }
      testStringArrays_.WriteTo(ref output, _repeated_testStringArrays_codec);
      if (TestString1 != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TestString1);
      }
      if (TestString.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TestString);
      }
      if (TestFloat != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(TestFloat);
      }
      if (TestDouble != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(TestDouble);
      }
      if (TestBool != false) {
        output.WriteRawTag(56);
        output.WriteBool(TestBool);
      }
      testIntArrays_.WriteTo(ref output, _repeated_testIntArrays_codec);
      testFloatArrays_.WriteTo(ref output, _repeated_testFloatArrays_codec);
      testDoubleArrays_.WriteTo(ref output, _repeated_testDoubleArrays_codec);
      testBoolArrays_.WriteTo(ref output, _repeated_testBoolArrays_codec);
      if (testObj_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(TestObj);
      }
      if (testObj1_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(TestObj1);
      }
      testObjArrays_.WriteTo(ref output, _repeated_testObjArrays_codec);
      testObjArray1S_.WriteTo(ref output, _repeated_testObjArray1S_codec);
      if (testDefineFromGlobal_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(TestDefineFromGlobal);
      }
      testDefineFromGlobal2S_.WriteTo(ref output, _repeated_testDefineFromGlobal2S_codec);
      if (testCustomObj_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(TestCustomObj);
      }
      testCustomObjArrays_.WriteTo(ref output, _repeated_testCustomObjArrays_codec);
      if (Test1Int != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Test1Int);
      }
      if (TestInt1 != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(TestInt1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TestInt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TestInt);
      }
      size += testStringArrays_.CalculateSize(_repeated_testStringArrays_codec);
      if (TestString1 != 0D) {
        size += 1 + 8;
      }
      if (TestString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestString);
      }
      if (TestFloat != 0F) {
        size += 1 + 4;
      }
      if (TestDouble != 0D) {
        size += 1 + 8;
      }
      if (TestBool != false) {
        size += 1 + 1;
      }
      size += testIntArrays_.CalculateSize(_repeated_testIntArrays_codec);
      size += testFloatArrays_.CalculateSize(_repeated_testFloatArrays_codec);
      size += testDoubleArrays_.CalculateSize(_repeated_testDoubleArrays_codec);
      size += testBoolArrays_.CalculateSize(_repeated_testBoolArrays_codec);
      if (testObj_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TestObj);
      }
      if (testObj1_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TestObj1);
      }
      size += testObjArrays_.CalculateSize(_repeated_testObjArrays_codec);
      size += testObjArray1S_.CalculateSize(_repeated_testObjArray1S_codec);
      if (testDefineFromGlobal_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TestDefineFromGlobal);
      }
      size += testDefineFromGlobal2S_.CalculateSize(_repeated_testDefineFromGlobal2S_codec);
      if (testCustomObj_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TestCustomObj);
      }
      size += testCustomObjArrays_.CalculateSize(_repeated_testCustomObjArrays_codec);
      if (Test1Int != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Test1Int);
      }
      if (TestInt1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TestInt1);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestGlobalTemplate other) {
      if (other == null) {
        return;
      }
      if (other.TestInt != 0) {
        TestInt = other.TestInt;
      }
      testStringArrays_.Add(other.testStringArrays_);
      if (other.TestString1 != 0D) {
        TestString1 = other.TestString1;
      }
      if (other.TestString.Length != 0) {
        TestString = other.TestString;
      }
      if (other.TestFloat != 0F) {
        TestFloat = other.TestFloat;
      }
      if (other.TestDouble != 0D) {
        TestDouble = other.TestDouble;
      }
      if (other.TestBool != false) {
        TestBool = other.TestBool;
      }
      testIntArrays_.Add(other.testIntArrays_);
      testFloatArrays_.Add(other.testFloatArrays_);
      testDoubleArrays_.Add(other.testDoubleArrays_);
      testBoolArrays_.Add(other.testBoolArrays_);
      if (other.testObj_ != null) {
        if (testObj_ == null) {
          TestObj = new global::Config.TestGlobalTemplate.Types.TestObj_();
        }
        TestObj.MergeFrom(other.TestObj);
      }
      if (other.testObj1_ != null) {
        if (testObj1_ == null) {
          TestObj1 = new global::Config.TestGlobalTemplate.Types.TestObj1_();
        }
        TestObj1.MergeFrom(other.TestObj1);
      }
      testObjArrays_.Add(other.testObjArrays_);
      testObjArray1S_.Add(other.testObjArray1S_);
      if (other.testDefineFromGlobal_ != null) {
        if (testDefineFromGlobal_ == null) {
          TestDefineFromGlobal = new global::Position3d();
        }
        TestDefineFromGlobal.MergeFrom(other.TestDefineFromGlobal);
      }
      testDefineFromGlobal2S_.Add(other.testDefineFromGlobal2S_);
      if (other.testCustomObj_ != null) {
        if (testCustomObj_ == null) {
          TestCustomObj = new global::PositionArray3d();
        }
        TestCustomObj.MergeFrom(other.TestCustomObj);
      }
      testCustomObjArrays_.Add(other.testCustomObjArrays_);
      if (other.Test1Int != 0) {
        Test1Int = other.Test1Int;
      }
      if (other.TestInt1 != 0) {
        TestInt1 = other.TestInt1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TestInt = input.ReadInt32();
            break;
          }
          case 18: {
            testStringArrays_.AddEntriesFrom(input, _repeated_testStringArrays_codec);
            break;
          }
          case 25: {
            TestString1 = input.ReadDouble();
            break;
          }
          case 34: {
            TestString = input.ReadString();
            break;
          }
          case 45: {
            TestFloat = input.ReadFloat();
            break;
          }
          case 49: {
            TestDouble = input.ReadDouble();
            break;
          }
          case 56: {
            TestBool = input.ReadBool();
            break;
          }
          case 66:
          case 64: {
            testIntArrays_.AddEntriesFrom(input, _repeated_testIntArrays_codec);
            break;
          }
          case 74:
          case 77: {
            testFloatArrays_.AddEntriesFrom(input, _repeated_testFloatArrays_codec);
            break;
          }
          case 82:
          case 81: {
            testDoubleArrays_.AddEntriesFrom(input, _repeated_testDoubleArrays_codec);
            break;
          }
          case 90:
          case 88: {
            testBoolArrays_.AddEntriesFrom(input, _repeated_testBoolArrays_codec);
            break;
          }
          case 98: {
            if (testObj_ == null) {
              TestObj = new global::Config.TestGlobalTemplate.Types.TestObj_();
            }
            input.ReadMessage(TestObj);
            break;
          }
          case 106: {
            if (testObj1_ == null) {
              TestObj1 = new global::Config.TestGlobalTemplate.Types.TestObj1_();
            }
            input.ReadMessage(TestObj1);
            break;
          }
          case 114: {
            testObjArrays_.AddEntriesFrom(input, _repeated_testObjArrays_codec);
            break;
          }
          case 122: {
            testObjArray1S_.AddEntriesFrom(input, _repeated_testObjArray1S_codec);
            break;
          }
          case 130: {
            if (testDefineFromGlobal_ == null) {
              TestDefineFromGlobal = new global::Position3d();
            }
            input.ReadMessage(TestDefineFromGlobal);
            break;
          }
          case 138: {
            testDefineFromGlobal2S_.AddEntriesFrom(input, _repeated_testDefineFromGlobal2S_codec);
            break;
          }
          case 146: {
            if (testCustomObj_ == null) {
              TestCustomObj = new global::PositionArray3d();
            }
            input.ReadMessage(TestCustomObj);
            break;
          }
          case 154: {
            testCustomObjArrays_.AddEntriesFrom(input, _repeated_testCustomObjArrays_codec);
            break;
          }
          case 160: {
            Test1Int = input.ReadInt32();
            break;
          }
          case 168: {
            TestInt1 = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TestInt = input.ReadInt32();
            break;
          }
          case 18: {
            testStringArrays_.AddEntriesFrom(ref input, _repeated_testStringArrays_codec);
            break;
          }
          case 25: {
            TestString1 = input.ReadDouble();
            break;
          }
          case 34: {
            TestString = input.ReadString();
            break;
          }
          case 45: {
            TestFloat = input.ReadFloat();
            break;
          }
          case 49: {
            TestDouble = input.ReadDouble();
            break;
          }
          case 56: {
            TestBool = input.ReadBool();
            break;
          }
          case 66:
          case 64: {
            testIntArrays_.AddEntriesFrom(ref input, _repeated_testIntArrays_codec);
            break;
          }
          case 74:
          case 77: {
            testFloatArrays_.AddEntriesFrom(ref input, _repeated_testFloatArrays_codec);
            break;
          }
          case 82:
          case 81: {
            testDoubleArrays_.AddEntriesFrom(ref input, _repeated_testDoubleArrays_codec);
            break;
          }
          case 90:
          case 88: {
            testBoolArrays_.AddEntriesFrom(ref input, _repeated_testBoolArrays_codec);
            break;
          }
          case 98: {
            if (testObj_ == null) {
              TestObj = new global::Config.TestGlobalTemplate.Types.TestObj_();
            }
            input.ReadMessage(TestObj);
            break;
          }
          case 106: {
            if (testObj1_ == null) {
              TestObj1 = new global::Config.TestGlobalTemplate.Types.TestObj1_();
            }
            input.ReadMessage(TestObj1);
            break;
          }
          case 114: {
            testObjArrays_.AddEntriesFrom(ref input, _repeated_testObjArrays_codec);
            break;
          }
          case 122: {
            testObjArray1S_.AddEntriesFrom(ref input, _repeated_testObjArray1S_codec);
            break;
          }
          case 130: {
            if (testDefineFromGlobal_ == null) {
              TestDefineFromGlobal = new global::Position3d();
            }
            input.ReadMessage(TestDefineFromGlobal);
            break;
          }
          case 138: {
            testDefineFromGlobal2S_.AddEntriesFrom(ref input, _repeated_testDefineFromGlobal2S_codec);
            break;
          }
          case 146: {
            if (testCustomObj_ == null) {
              TestCustomObj = new global::PositionArray3d();
            }
            input.ReadMessage(TestCustomObj);
            break;
          }
          case 154: {
            testCustomObjArrays_.AddEntriesFrom(ref input, _repeated_testCustomObjArrays_codec);
            break;
          }
          case 160: {
            Test1Int = input.ReadInt32();
            break;
          }
          case 168: {
            TestInt1 = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TestGlobalTemplate message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class TestObj_ : pb::IMessage<TestObj_>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TestObj_> _parser = new pb::MessageParser<TestObj_>(() => new TestObj_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TestObj_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Config.TestGlobalTemplate.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestObj_() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestObj_(TestObj_ other) : this() {
          a_ = other.a_;
          b_ = other.b_;
          c_ = other.c_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestObj_ Clone() {
          return new TestObj_(this);
        }

        /// <summary>Field number for the "a" field.</summary>
        public const int AFieldNumber = 1;
        private int a_;
        /// <summary>
        /// a
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int A {
          get { return a_; }
          set {
            a_ = value;
          }
        }

        /// <summary>Field number for the "b" field.</summary>
        public const int BFieldNumber = 2;
        private float b_;
        /// <summary>
        /// b
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float B {
          get { return b_; }
          set {
            b_ = value;
          }
        }

        /// <summary>Field number for the "c" field.</summary>
        public const int CFieldNumber = 3;
        private bool c_;
        /// <summary>
        /// c
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool C {
          get { return c_; }
          set {
            c_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TestObj_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TestObj_ other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (A != other.A) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(B, other.B)) return false;
          if (C != other.C) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (A != 0) hash ^= A.GetHashCode();
          if (B != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(B);
          if (C != false) hash ^= C.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (A != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(A);
          }
          if (B != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(B);
          }
          if (C != false) {
            output.WriteRawTag(24);
            output.WriteBool(C);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (A != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(A);
          }
          if (B != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(B);
          }
          if (C != false) {
            output.WriteRawTag(24);
            output.WriteBool(C);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (A != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(A);
          }
          if (B != 0F) {
            size += 1 + 4;
          }
          if (C != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TestObj_ other) {
          if (other == null) {
            return;
          }
          if (other.A != 0) {
            A = other.A;
          }
          if (other.B != 0F) {
            B = other.B;
          }
          if (other.C != false) {
            C = other.C;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                A = input.ReadInt32();
                break;
              }
              case 21: {
                B = input.ReadFloat();
                break;
              }
              case 24: {
                C = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                A = input.ReadInt32();
                break;
              }
              case 21: {
                B = input.ReadFloat();
                break;
              }
              case 24: {
                C = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class TestObj1_ : pb::IMessage<TestObj1_>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TestObj1_> _parser = new pb::MessageParser<TestObj1_>(() => new TestObj1_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TestObj1_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Config.TestGlobalTemplate.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestObj1_() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestObj1_(TestObj1_ other) : this() {
          a_ = other.a_;
          bs_ = other.bs_.Clone();
          v_ = other.v_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestObj1_ Clone() {
          return new TestObj1_(this);
        }

        /// <summary>Field number for the "a" field.</summary>
        public const int AFieldNumber = 1;
        private int a_;
        /// <summary>
        /// a
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int A {
          get { return a_; }
          set {
            a_ = value;
          }
        }

        /// <summary>Field number for the "bs" field.</summary>
        public const int BsFieldNumber = 2;
        private static readonly pb::FieldCodec<float> _repeated_bs_codec
            = pb::FieldCodec.ForFloat(18);
        private readonly pbc::RepeatedField<float> bs_ = new pbc::RepeatedField<float>();
        /// <summary>
        /// b
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<float> Bs {
          get { return bs_; }
        }

        /// <summary>Field number for the "v" field.</summary>
        public const int VFieldNumber = 3;
        private bool v_;
        /// <summary>
        /// v
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool V {
          get { return v_; }
          set {
            v_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TestObj1_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TestObj1_ other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (A != other.A) return false;
          if(!bs_.Equals(other.bs_)) return false;
          if (V != other.V) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (A != 0) hash ^= A.GetHashCode();
          hash ^= bs_.GetHashCode();
          if (V != false) hash ^= V.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (A != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(A);
          }
          bs_.WriteTo(output, _repeated_bs_codec);
          if (V != false) {
            output.WriteRawTag(24);
            output.WriteBool(V);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (A != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(A);
          }
          bs_.WriteTo(ref output, _repeated_bs_codec);
          if (V != false) {
            output.WriteRawTag(24);
            output.WriteBool(V);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (A != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(A);
          }
          size += bs_.CalculateSize(_repeated_bs_codec);
          if (V != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TestObj1_ other) {
          if (other == null) {
            return;
          }
          if (other.A != 0) {
            A = other.A;
          }
          bs_.Add(other.bs_);
          if (other.V != false) {
            V = other.V;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                A = input.ReadInt32();
                break;
              }
              case 18:
              case 21: {
                bs_.AddEntriesFrom(input, _repeated_bs_codec);
                break;
              }
              case 24: {
                V = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                A = input.ReadInt32();
                break;
              }
              case 18:
              case 21: {
                bs_.AddEntriesFrom(ref input, _repeated_bs_codec);
                break;
              }
              case 24: {
                V = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class TestObjArray_ : pb::IMessage<TestObjArray_>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TestObjArray_> _parser = new pb::MessageParser<TestObjArray_>(() => new TestObjArray_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TestObjArray_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Config.TestGlobalTemplate.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestObjArray_() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestObjArray_(TestObjArray_ other) : this() {
          a_ = other.a_;
          b_ = other.b_;
          c_ = other.c_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestObjArray_ Clone() {
          return new TestObjArray_(this);
        }

        /// <summary>Field number for the "a" field.</summary>
        public const int AFieldNumber = 1;
        private int a_;
        /// <summary>
        /// a
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int A {
          get { return a_; }
          set {
            a_ = value;
          }
        }

        /// <summary>Field number for the "b" field.</summary>
        public const int BFieldNumber = 2;
        private int b_;
        /// <summary>
        /// b
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int B {
          get { return b_; }
          set {
            b_ = value;
          }
        }

        /// <summary>Field number for the "c" field.</summary>
        public const int CFieldNumber = 3;
        private int c_;
        /// <summary>
        /// c
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int C {
          get { return c_; }
          set {
            c_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TestObjArray_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TestObjArray_ other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (A != other.A) return false;
          if (B != other.B) return false;
          if (C != other.C) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (A != 0) hash ^= A.GetHashCode();
          if (B != 0) hash ^= B.GetHashCode();
          if (C != 0) hash ^= C.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (A != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(A);
          }
          if (B != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(B);
          }
          if (C != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(C);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (A != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(A);
          }
          if (B != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(B);
          }
          if (C != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(C);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (A != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(A);
          }
          if (B != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(B);
          }
          if (C != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(C);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TestObjArray_ other) {
          if (other == null) {
            return;
          }
          if (other.A != 0) {
            A = other.A;
          }
          if (other.B != 0) {
            B = other.B;
          }
          if (other.C != 0) {
            C = other.C;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                A = input.ReadInt32();
                break;
              }
              case 16: {
                B = input.ReadInt32();
                break;
              }
              case 24: {
                C = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                A = input.ReadInt32();
                break;
              }
              case 16: {
                B = input.ReadInt32();
                break;
              }
              case 24: {
                C = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class TestObjArray1_ : pb::IMessage<TestObjArray1_>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TestObjArray1_> _parser = new pb::MessageParser<TestObjArray1_>(() => new TestObjArray1_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TestObjArray1_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Config.TestGlobalTemplate.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestObjArray1_() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestObjArray1_(TestObjArray1_ other) : this() {
          a_ = other.a_;
          bs_ = other.bs_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestObjArray1_ Clone() {
          return new TestObjArray1_(this);
        }

        /// <summary>Field number for the "a" field.</summary>
        public const int AFieldNumber = 1;
        private int a_;
        /// <summary>
        /// a
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int A {
          get { return a_; }
          set {
            a_ = value;
          }
        }

        /// <summary>Field number for the "bs" field.</summary>
        public const int BsFieldNumber = 2;
        private static readonly pb::FieldCodec<float> _repeated_bs_codec
            = pb::FieldCodec.ForFloat(18);
        private readonly pbc::RepeatedField<float> bs_ = new pbc::RepeatedField<float>();
        /// <summary>
        /// b
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<float> Bs {
          get { return bs_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TestObjArray1_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TestObjArray1_ other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (A != other.A) return false;
          if(!bs_.Equals(other.bs_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (A != 0) hash ^= A.GetHashCode();
          hash ^= bs_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (A != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(A);
          }
          bs_.WriteTo(output, _repeated_bs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (A != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(A);
          }
          bs_.WriteTo(ref output, _repeated_bs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (A != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(A);
          }
          size += bs_.CalculateSize(_repeated_bs_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TestObjArray1_ other) {
          if (other == null) {
            return;
          }
          if (other.A != 0) {
            A = other.A;
          }
          bs_.Add(other.bs_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                A = input.ReadInt32();
                break;
              }
              case 18:
              case 21: {
                bs_.AddEntriesFrom(input, _repeated_bs_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                A = input.ReadInt32();
                break;
              }
              case 18:
              case 21: {
                bs_.AddEntriesFrom(ref input, _repeated_bs_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
