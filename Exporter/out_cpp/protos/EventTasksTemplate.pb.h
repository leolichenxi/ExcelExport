// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/EventTasksTemplate.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fEventTasksTemplate_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fEventTasksTemplate_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_protos_2fEventTasksTemplate_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fEventTasksTemplate_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protos_2fEventTasksTemplate_2eproto;
namespace Config {
class EventTasksTemplate;
class EventTasksTemplateDefaultTypeInternal;
extern EventTasksTemplateDefaultTypeInternal _EventTasksTemplate_default_instance_;
class EventTasksTemplateList;
class EventTasksTemplateListDefaultTypeInternal;
extern EventTasksTemplateListDefaultTypeInternal _EventTasksTemplateList_default_instance_;
class EventTasksTemplate_Accessid_;
class EventTasksTemplate_Accessid_DefaultTypeInternal;
extern EventTasksTemplate_Accessid_DefaultTypeInternal _EventTasksTemplate_Accessid__default_instance_;
class EventTasksTemplate_Reward_;
class EventTasksTemplate_Reward_DefaultTypeInternal;
extern EventTasksTemplate_Reward_DefaultTypeInternal _EventTasksTemplate_Reward__default_instance_;
class EventTasksTemplate_Taskinfo_;
class EventTasksTemplate_Taskinfo_DefaultTypeInternal;
extern EventTasksTemplate_Taskinfo_DefaultTypeInternal _EventTasksTemplate_Taskinfo__default_instance_;
}  // namespace Config
PROTOBUF_NAMESPACE_OPEN
template<> ::Config::EventTasksTemplate* Arena::CreateMaybeMessage<::Config::EventTasksTemplate>(Arena*);
template<> ::Config::EventTasksTemplateList* Arena::CreateMaybeMessage<::Config::EventTasksTemplateList>(Arena*);
template<> ::Config::EventTasksTemplate_Accessid_* Arena::CreateMaybeMessage<::Config::EventTasksTemplate_Accessid_>(Arena*);
template<> ::Config::EventTasksTemplate_Reward_* Arena::CreateMaybeMessage<::Config::EventTasksTemplate_Reward_>(Arena*);
template<> ::Config::EventTasksTemplate_Taskinfo_* Arena::CreateMaybeMessage<::Config::EventTasksTemplate_Taskinfo_>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Config {

// ===================================================================

class EventTasksTemplate_Accessid_ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Config.EventTasksTemplate.Accessid_) */ {
 public:
  inline EventTasksTemplate_Accessid_() : EventTasksTemplate_Accessid_(nullptr) {}
  virtual ~EventTasksTemplate_Accessid_();

  EventTasksTemplate_Accessid_(const EventTasksTemplate_Accessid_& from);
  EventTasksTemplate_Accessid_(EventTasksTemplate_Accessid_&& from) noexcept
    : EventTasksTemplate_Accessid_() {
    *this = ::std::move(from);
  }

  inline EventTasksTemplate_Accessid_& operator=(const EventTasksTemplate_Accessid_& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventTasksTemplate_Accessid_& operator=(EventTasksTemplate_Accessid_&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EventTasksTemplate_Accessid_& default_instance();

  static inline const EventTasksTemplate_Accessid_* internal_default_instance() {
    return reinterpret_cast<const EventTasksTemplate_Accessid_*>(
               &_EventTasksTemplate_Accessid__default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EventTasksTemplate_Accessid_& a, EventTasksTemplate_Accessid_& b) {
    a.Swap(&b);
  }
  inline void Swap(EventTasksTemplate_Accessid_* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventTasksTemplate_Accessid_* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EventTasksTemplate_Accessid_* New() const final {
    return CreateMaybeMessage<EventTasksTemplate_Accessid_>(nullptr);
  }

  EventTasksTemplate_Accessid_* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EventTasksTemplate_Accessid_>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EventTasksTemplate_Accessid_& from);
  void MergeFrom(const EventTasksTemplate_Accessid_& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventTasksTemplate_Accessid_* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Config.EventTasksTemplate.Accessid_";
  }
  protected:
  explicit EventTasksTemplate_Accessid_(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_protos_2fEventTasksTemplate_2eproto);
    return ::descriptor_table_protos_2fEventTasksTemplate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kParam1FieldNumber = 2,
  };
  // int32 Id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Param1 = 2;
  void clear_param1();
  ::PROTOBUF_NAMESPACE_ID::int32 param1() const;
  void set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param1() const;
  void _internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Config.EventTasksTemplate.Accessid_)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 param1_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fEventTasksTemplate_2eproto;
};
// -------------------------------------------------------------------

class EventTasksTemplate_Taskinfo_ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Config.EventTasksTemplate.Taskinfo_) */ {
 public:
  inline EventTasksTemplate_Taskinfo_() : EventTasksTemplate_Taskinfo_(nullptr) {}
  virtual ~EventTasksTemplate_Taskinfo_();

  EventTasksTemplate_Taskinfo_(const EventTasksTemplate_Taskinfo_& from);
  EventTasksTemplate_Taskinfo_(EventTasksTemplate_Taskinfo_&& from) noexcept
    : EventTasksTemplate_Taskinfo_() {
    *this = ::std::move(from);
  }

  inline EventTasksTemplate_Taskinfo_& operator=(const EventTasksTemplate_Taskinfo_& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventTasksTemplate_Taskinfo_& operator=(EventTasksTemplate_Taskinfo_&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EventTasksTemplate_Taskinfo_& default_instance();

  static inline const EventTasksTemplate_Taskinfo_* internal_default_instance() {
    return reinterpret_cast<const EventTasksTemplate_Taskinfo_*>(
               &_EventTasksTemplate_Taskinfo__default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(EventTasksTemplate_Taskinfo_& a, EventTasksTemplate_Taskinfo_& b) {
    a.Swap(&b);
  }
  inline void Swap(EventTasksTemplate_Taskinfo_* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventTasksTemplate_Taskinfo_* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EventTasksTemplate_Taskinfo_* New() const final {
    return CreateMaybeMessage<EventTasksTemplate_Taskinfo_>(nullptr);
  }

  EventTasksTemplate_Taskinfo_* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EventTasksTemplate_Taskinfo_>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EventTasksTemplate_Taskinfo_& from);
  void MergeFrom(const EventTasksTemplate_Taskinfo_& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventTasksTemplate_Taskinfo_* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Config.EventTasksTemplate.Taskinfo_";
  }
  protected:
  explicit EventTasksTemplate_Taskinfo_(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_protos_2fEventTasksTemplate_2eproto);
    return ::descriptor_table_protos_2fEventTasksTemplate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kParam1FieldNumber = 2,
    kParam2FieldNumber = 3,
    kParam3FieldNumber = 4,
  };
  // int32 Type = 1;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Param1 = 2;
  void clear_param1();
  ::PROTOBUF_NAMESPACE_ID::int32 param1() const;
  void set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param1() const;
  void _internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Param2 = 3;
  void clear_param2();
  ::PROTOBUF_NAMESPACE_ID::int32 param2() const;
  void set_param2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param2() const;
  void _internal_set_param2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Param3 = 4;
  void clear_param3();
  ::PROTOBUF_NAMESPACE_ID::int32 param3() const;
  void set_param3(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param3() const;
  void _internal_set_param3(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Config.EventTasksTemplate.Taskinfo_)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 param1_;
  ::PROTOBUF_NAMESPACE_ID::int32 param2_;
  ::PROTOBUF_NAMESPACE_ID::int32 param3_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fEventTasksTemplate_2eproto;
};
// -------------------------------------------------------------------

class EventTasksTemplate_Reward_ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Config.EventTasksTemplate.Reward_) */ {
 public:
  inline EventTasksTemplate_Reward_() : EventTasksTemplate_Reward_(nullptr) {}
  virtual ~EventTasksTemplate_Reward_();

  EventTasksTemplate_Reward_(const EventTasksTemplate_Reward_& from);
  EventTasksTemplate_Reward_(EventTasksTemplate_Reward_&& from) noexcept
    : EventTasksTemplate_Reward_() {
    *this = ::std::move(from);
  }

  inline EventTasksTemplate_Reward_& operator=(const EventTasksTemplate_Reward_& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventTasksTemplate_Reward_& operator=(EventTasksTemplate_Reward_&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EventTasksTemplate_Reward_& default_instance();

  static inline const EventTasksTemplate_Reward_* internal_default_instance() {
    return reinterpret_cast<const EventTasksTemplate_Reward_*>(
               &_EventTasksTemplate_Reward__default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(EventTasksTemplate_Reward_& a, EventTasksTemplate_Reward_& b) {
    a.Swap(&b);
  }
  inline void Swap(EventTasksTemplate_Reward_* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventTasksTemplate_Reward_* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EventTasksTemplate_Reward_* New() const final {
    return CreateMaybeMessage<EventTasksTemplate_Reward_>(nullptr);
  }

  EventTasksTemplate_Reward_* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EventTasksTemplate_Reward_>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EventTasksTemplate_Reward_& from);
  void MergeFrom(const EventTasksTemplate_Reward_& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventTasksTemplate_Reward_* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Config.EventTasksTemplate.Reward_";
  }
  protected:
  explicit EventTasksTemplate_Reward_(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_protos_2fEventTasksTemplate_2eproto);
    return ::descriptor_table_protos_2fEventTasksTemplate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kIdFieldNumber = 2,
    kCountFieldNumber = 3,
    kParam1FieldNumber = 4,
  };
  // int32 Type = 1;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Id = 2;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Count = 3;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Param1 = 4;
  void clear_param1();
  ::PROTOBUF_NAMESPACE_ID::int32 param1() const;
  void set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param1() const;
  void _internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Config.EventTasksTemplate.Reward_)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  ::PROTOBUF_NAMESPACE_ID::int32 param1_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fEventTasksTemplate_2eproto;
};
// -------------------------------------------------------------------

class EventTasksTemplate PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Config.EventTasksTemplate) */ {
 public:
  inline EventTasksTemplate() : EventTasksTemplate(nullptr) {}
  virtual ~EventTasksTemplate();

  EventTasksTemplate(const EventTasksTemplate& from);
  EventTasksTemplate(EventTasksTemplate&& from) noexcept
    : EventTasksTemplate() {
    *this = ::std::move(from);
  }

  inline EventTasksTemplate& operator=(const EventTasksTemplate& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventTasksTemplate& operator=(EventTasksTemplate&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EventTasksTemplate& default_instance();

  static inline const EventTasksTemplate* internal_default_instance() {
    return reinterpret_cast<const EventTasksTemplate*>(
               &_EventTasksTemplate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(EventTasksTemplate& a, EventTasksTemplate& b) {
    a.Swap(&b);
  }
  inline void Swap(EventTasksTemplate* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventTasksTemplate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EventTasksTemplate* New() const final {
    return CreateMaybeMessage<EventTasksTemplate>(nullptr);
  }

  EventTasksTemplate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EventTasksTemplate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EventTasksTemplate& from);
  void MergeFrom(const EventTasksTemplate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventTasksTemplate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Config.EventTasksTemplate";
  }
  protected:
  explicit EventTasksTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_protos_2fEventTasksTemplate_2eproto);
    return ::descriptor_table_protos_2fEventTasksTemplate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef EventTasksTemplate_Accessid_ Accessid_;
  typedef EventTasksTemplate_Taskinfo_ Taskinfo_;
  typedef EventTasksTemplate_Reward_ Reward_;

  // accessors -------------------------------------------------------

  enum : int {
    kBindEventIdsFieldNumber = 5,
    kRewardsFieldNumber = 7,
    kAccessIdFieldNumber = 3,
    kTaskInfoFieldNumber = 4,
    kIdFieldNumber = 1,
    kShowProgressFieldNumber = 2,
    kNextTaskFieldNumber = 6,
  };
  // repeated int32 BindEventIds = 5;
  int bindeventids_size() const;
  private:
  int _internal_bindeventids_size() const;
  public:
  void clear_bindeventids();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bindeventids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_bindeventids() const;
  void _internal_add_bindeventids(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_bindeventids();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 bindeventids(int index) const;
  void set_bindeventids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_bindeventids(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      bindeventids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_bindeventids();

  // repeated .Config.EventTasksTemplate.Reward_ Rewards = 7;
  int rewards_size() const;
  private:
  int _internal_rewards_size() const;
  public:
  void clear_rewards();
  ::Config::EventTasksTemplate_Reward_* mutable_rewards(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::EventTasksTemplate_Reward_ >*
      mutable_rewards();
  private:
  const ::Config::EventTasksTemplate_Reward_& _internal_rewards(int index) const;
  ::Config::EventTasksTemplate_Reward_* _internal_add_rewards();
  public:
  const ::Config::EventTasksTemplate_Reward_& rewards(int index) const;
  ::Config::EventTasksTemplate_Reward_* add_rewards();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::EventTasksTemplate_Reward_ >&
      rewards() const;

  // .Config.EventTasksTemplate.Accessid_ AccessId = 3;
  bool has_accessid() const;
  private:
  bool _internal_has_accessid() const;
  public:
  void clear_accessid();
  const ::Config::EventTasksTemplate_Accessid_& accessid() const;
  ::Config::EventTasksTemplate_Accessid_* release_accessid();
  ::Config::EventTasksTemplate_Accessid_* mutable_accessid();
  void set_allocated_accessid(::Config::EventTasksTemplate_Accessid_* accessid);
  private:
  const ::Config::EventTasksTemplate_Accessid_& _internal_accessid() const;
  ::Config::EventTasksTemplate_Accessid_* _internal_mutable_accessid();
  public:
  void unsafe_arena_set_allocated_accessid(
      ::Config::EventTasksTemplate_Accessid_* accessid);
  ::Config::EventTasksTemplate_Accessid_* unsafe_arena_release_accessid();

  // .Config.EventTasksTemplate.Taskinfo_ TaskInfo = 4;
  bool has_taskinfo() const;
  private:
  bool _internal_has_taskinfo() const;
  public:
  void clear_taskinfo();
  const ::Config::EventTasksTemplate_Taskinfo_& taskinfo() const;
  ::Config::EventTasksTemplate_Taskinfo_* release_taskinfo();
  ::Config::EventTasksTemplate_Taskinfo_* mutable_taskinfo();
  void set_allocated_taskinfo(::Config::EventTasksTemplate_Taskinfo_* taskinfo);
  private:
  const ::Config::EventTasksTemplate_Taskinfo_& _internal_taskinfo() const;
  ::Config::EventTasksTemplate_Taskinfo_* _internal_mutable_taskinfo();
  public:
  void unsafe_arena_set_allocated_taskinfo(
      ::Config::EventTasksTemplate_Taskinfo_* taskinfo);
  ::Config::EventTasksTemplate_Taskinfo_* unsafe_arena_release_taskinfo();

  // int32 Id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ShowProgress = 2;
  void clear_showprogress();
  ::PROTOBUF_NAMESPACE_ID::int32 showprogress() const;
  void set_showprogress(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_showprogress() const;
  void _internal_set_showprogress(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 NextTask = 6;
  void clear_nexttask();
  ::PROTOBUF_NAMESPACE_ID::int32 nexttask() const;
  void set_nexttask(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_nexttask() const;
  void _internal_set_nexttask(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Config.EventTasksTemplate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > bindeventids_;
  mutable std::atomic<int> _bindeventids_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::EventTasksTemplate_Reward_ > rewards_;
  ::Config::EventTasksTemplate_Accessid_* accessid_;
  ::Config::EventTasksTemplate_Taskinfo_* taskinfo_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 showprogress_;
  ::PROTOBUF_NAMESPACE_ID::int32 nexttask_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fEventTasksTemplate_2eproto;
};
// -------------------------------------------------------------------

class EventTasksTemplateList PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Config.EventTasksTemplateList) */ {
 public:
  inline EventTasksTemplateList() : EventTasksTemplateList(nullptr) {}
  virtual ~EventTasksTemplateList();

  EventTasksTemplateList(const EventTasksTemplateList& from);
  EventTasksTemplateList(EventTasksTemplateList&& from) noexcept
    : EventTasksTemplateList() {
    *this = ::std::move(from);
  }

  inline EventTasksTemplateList& operator=(const EventTasksTemplateList& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventTasksTemplateList& operator=(EventTasksTemplateList&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EventTasksTemplateList& default_instance();

  static inline const EventTasksTemplateList* internal_default_instance() {
    return reinterpret_cast<const EventTasksTemplateList*>(
               &_EventTasksTemplateList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(EventTasksTemplateList& a, EventTasksTemplateList& b) {
    a.Swap(&b);
  }
  inline void Swap(EventTasksTemplateList* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventTasksTemplateList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EventTasksTemplateList* New() const final {
    return CreateMaybeMessage<EventTasksTemplateList>(nullptr);
  }

  EventTasksTemplateList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EventTasksTemplateList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EventTasksTemplateList& from);
  void MergeFrom(const EventTasksTemplateList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventTasksTemplateList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Config.EventTasksTemplateList";
  }
  protected:
  explicit EventTasksTemplateList(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_protos_2fEventTasksTemplate_2eproto);
    return ::descriptor_table_protos_2fEventTasksTemplate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventTaskssFieldNumber = 1,
  };
  // repeated .Config.EventTasksTemplate EventTaskss = 1;
  int eventtaskss_size() const;
  private:
  int _internal_eventtaskss_size() const;
  public:
  void clear_eventtaskss();
  ::Config::EventTasksTemplate* mutable_eventtaskss(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::EventTasksTemplate >*
      mutable_eventtaskss();
  private:
  const ::Config::EventTasksTemplate& _internal_eventtaskss(int index) const;
  ::Config::EventTasksTemplate* _internal_add_eventtaskss();
  public:
  const ::Config::EventTasksTemplate& eventtaskss(int index) const;
  ::Config::EventTasksTemplate* add_eventtaskss();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::EventTasksTemplate >&
      eventtaskss() const;

  // @@protoc_insertion_point(class_scope:Config.EventTasksTemplateList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::EventTasksTemplate > eventtaskss_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fEventTasksTemplate_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EventTasksTemplate_Accessid_

// int32 Id = 1;
inline void EventTasksTemplate_Accessid_::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Accessid_::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Accessid_::id() const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.Accessid_.Id)
  return _internal_id();
}
inline void EventTasksTemplate_Accessid_::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void EventTasksTemplate_Accessid_::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Config.EventTasksTemplate.Accessid_.Id)
}

// int32 Param1 = 2;
inline void EventTasksTemplate_Accessid_::clear_param1() {
  param1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Accessid_::_internal_param1() const {
  return param1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Accessid_::param1() const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.Accessid_.Param1)
  return _internal_param1();
}
inline void EventTasksTemplate_Accessid_::_internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param1_ = value;
}
inline void EventTasksTemplate_Accessid_::set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param1(value);
  // @@protoc_insertion_point(field_set:Config.EventTasksTemplate.Accessid_.Param1)
}

// -------------------------------------------------------------------

// EventTasksTemplate_Taskinfo_

// int32 Type = 1;
inline void EventTasksTemplate_Taskinfo_::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Taskinfo_::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Taskinfo_::type() const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.Taskinfo_.Type)
  return _internal_type();
}
inline void EventTasksTemplate_Taskinfo_::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void EventTasksTemplate_Taskinfo_::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Config.EventTasksTemplate.Taskinfo_.Type)
}

// int32 Param1 = 2;
inline void EventTasksTemplate_Taskinfo_::clear_param1() {
  param1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Taskinfo_::_internal_param1() const {
  return param1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Taskinfo_::param1() const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.Taskinfo_.Param1)
  return _internal_param1();
}
inline void EventTasksTemplate_Taskinfo_::_internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param1_ = value;
}
inline void EventTasksTemplate_Taskinfo_::set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param1(value);
  // @@protoc_insertion_point(field_set:Config.EventTasksTemplate.Taskinfo_.Param1)
}

// int32 Param2 = 3;
inline void EventTasksTemplate_Taskinfo_::clear_param2() {
  param2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Taskinfo_::_internal_param2() const {
  return param2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Taskinfo_::param2() const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.Taskinfo_.Param2)
  return _internal_param2();
}
inline void EventTasksTemplate_Taskinfo_::_internal_set_param2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param2_ = value;
}
inline void EventTasksTemplate_Taskinfo_::set_param2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param2(value);
  // @@protoc_insertion_point(field_set:Config.EventTasksTemplate.Taskinfo_.Param2)
}

// int32 Param3 = 4;
inline void EventTasksTemplate_Taskinfo_::clear_param3() {
  param3_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Taskinfo_::_internal_param3() const {
  return param3_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Taskinfo_::param3() const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.Taskinfo_.Param3)
  return _internal_param3();
}
inline void EventTasksTemplate_Taskinfo_::_internal_set_param3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param3_ = value;
}
inline void EventTasksTemplate_Taskinfo_::set_param3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param3(value);
  // @@protoc_insertion_point(field_set:Config.EventTasksTemplate.Taskinfo_.Param3)
}

// -------------------------------------------------------------------

// EventTasksTemplate_Reward_

// int32 Type = 1;
inline void EventTasksTemplate_Reward_::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Reward_::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Reward_::type() const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.Reward_.Type)
  return _internal_type();
}
inline void EventTasksTemplate_Reward_::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void EventTasksTemplate_Reward_::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Config.EventTasksTemplate.Reward_.Type)
}

// int32 Id = 2;
inline void EventTasksTemplate_Reward_::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Reward_::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Reward_::id() const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.Reward_.Id)
  return _internal_id();
}
inline void EventTasksTemplate_Reward_::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void EventTasksTemplate_Reward_::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Config.EventTasksTemplate.Reward_.Id)
}

// int32 Count = 3;
inline void EventTasksTemplate_Reward_::clear_count() {
  count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Reward_::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Reward_::count() const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.Reward_.Count)
  return _internal_count();
}
inline void EventTasksTemplate_Reward_::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  count_ = value;
}
inline void EventTasksTemplate_Reward_::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:Config.EventTasksTemplate.Reward_.Count)
}

// int32 Param1 = 4;
inline void EventTasksTemplate_Reward_::clear_param1() {
  param1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Reward_::_internal_param1() const {
  return param1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate_Reward_::param1() const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.Reward_.Param1)
  return _internal_param1();
}
inline void EventTasksTemplate_Reward_::_internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param1_ = value;
}
inline void EventTasksTemplate_Reward_::set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param1(value);
  // @@protoc_insertion_point(field_set:Config.EventTasksTemplate.Reward_.Param1)
}

// -------------------------------------------------------------------

// EventTasksTemplate

// int32 Id = 1;
inline void EventTasksTemplate::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate::id() const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.Id)
  return _internal_id();
}
inline void EventTasksTemplate::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void EventTasksTemplate::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Config.EventTasksTemplate.Id)
}

// int32 ShowProgress = 2;
inline void EventTasksTemplate::clear_showprogress() {
  showprogress_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate::_internal_showprogress() const {
  return showprogress_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate::showprogress() const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.ShowProgress)
  return _internal_showprogress();
}
inline void EventTasksTemplate::_internal_set_showprogress(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  showprogress_ = value;
}
inline void EventTasksTemplate::set_showprogress(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_showprogress(value);
  // @@protoc_insertion_point(field_set:Config.EventTasksTemplate.ShowProgress)
}

// .Config.EventTasksTemplate.Accessid_ AccessId = 3;
inline bool EventTasksTemplate::_internal_has_accessid() const {
  return this != internal_default_instance() && accessid_ != nullptr;
}
inline bool EventTasksTemplate::has_accessid() const {
  return _internal_has_accessid();
}
inline void EventTasksTemplate::clear_accessid() {
  if (GetArena() == nullptr && accessid_ != nullptr) {
    delete accessid_;
  }
  accessid_ = nullptr;
}
inline const ::Config::EventTasksTemplate_Accessid_& EventTasksTemplate::_internal_accessid() const {
  const ::Config::EventTasksTemplate_Accessid_* p = accessid_;
  return p != nullptr ? *p : reinterpret_cast<const ::Config::EventTasksTemplate_Accessid_&>(
      ::Config::_EventTasksTemplate_Accessid__default_instance_);
}
inline const ::Config::EventTasksTemplate_Accessid_& EventTasksTemplate::accessid() const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.AccessId)
  return _internal_accessid();
}
inline void EventTasksTemplate::unsafe_arena_set_allocated_accessid(
    ::Config::EventTasksTemplate_Accessid_* accessid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(accessid_);
  }
  accessid_ = accessid;
  if (accessid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Config.EventTasksTemplate.AccessId)
}
inline ::Config::EventTasksTemplate_Accessid_* EventTasksTemplate::release_accessid() {
  
  ::Config::EventTasksTemplate_Accessid_* temp = accessid_;
  accessid_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Config::EventTasksTemplate_Accessid_* EventTasksTemplate::unsafe_arena_release_accessid() {
  // @@protoc_insertion_point(field_release:Config.EventTasksTemplate.AccessId)
  
  ::Config::EventTasksTemplate_Accessid_* temp = accessid_;
  accessid_ = nullptr;
  return temp;
}
inline ::Config::EventTasksTemplate_Accessid_* EventTasksTemplate::_internal_mutable_accessid() {
  
  if (accessid_ == nullptr) {
    auto* p = CreateMaybeMessage<::Config::EventTasksTemplate_Accessid_>(GetArena());
    accessid_ = p;
  }
  return accessid_;
}
inline ::Config::EventTasksTemplate_Accessid_* EventTasksTemplate::mutable_accessid() {
  // @@protoc_insertion_point(field_mutable:Config.EventTasksTemplate.AccessId)
  return _internal_mutable_accessid();
}
inline void EventTasksTemplate::set_allocated_accessid(::Config::EventTasksTemplate_Accessid_* accessid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete accessid_;
  }
  if (accessid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(accessid);
    if (message_arena != submessage_arena) {
      accessid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, accessid, submessage_arena);
    }
    
  } else {
    
  }
  accessid_ = accessid;
  // @@protoc_insertion_point(field_set_allocated:Config.EventTasksTemplate.AccessId)
}

// .Config.EventTasksTemplate.Taskinfo_ TaskInfo = 4;
inline bool EventTasksTemplate::_internal_has_taskinfo() const {
  return this != internal_default_instance() && taskinfo_ != nullptr;
}
inline bool EventTasksTemplate::has_taskinfo() const {
  return _internal_has_taskinfo();
}
inline void EventTasksTemplate::clear_taskinfo() {
  if (GetArena() == nullptr && taskinfo_ != nullptr) {
    delete taskinfo_;
  }
  taskinfo_ = nullptr;
}
inline const ::Config::EventTasksTemplate_Taskinfo_& EventTasksTemplate::_internal_taskinfo() const {
  const ::Config::EventTasksTemplate_Taskinfo_* p = taskinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::Config::EventTasksTemplate_Taskinfo_&>(
      ::Config::_EventTasksTemplate_Taskinfo__default_instance_);
}
inline const ::Config::EventTasksTemplate_Taskinfo_& EventTasksTemplate::taskinfo() const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.TaskInfo)
  return _internal_taskinfo();
}
inline void EventTasksTemplate::unsafe_arena_set_allocated_taskinfo(
    ::Config::EventTasksTemplate_Taskinfo_* taskinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(taskinfo_);
  }
  taskinfo_ = taskinfo;
  if (taskinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Config.EventTasksTemplate.TaskInfo)
}
inline ::Config::EventTasksTemplate_Taskinfo_* EventTasksTemplate::release_taskinfo() {
  
  ::Config::EventTasksTemplate_Taskinfo_* temp = taskinfo_;
  taskinfo_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Config::EventTasksTemplate_Taskinfo_* EventTasksTemplate::unsafe_arena_release_taskinfo() {
  // @@protoc_insertion_point(field_release:Config.EventTasksTemplate.TaskInfo)
  
  ::Config::EventTasksTemplate_Taskinfo_* temp = taskinfo_;
  taskinfo_ = nullptr;
  return temp;
}
inline ::Config::EventTasksTemplate_Taskinfo_* EventTasksTemplate::_internal_mutable_taskinfo() {
  
  if (taskinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::Config::EventTasksTemplate_Taskinfo_>(GetArena());
    taskinfo_ = p;
  }
  return taskinfo_;
}
inline ::Config::EventTasksTemplate_Taskinfo_* EventTasksTemplate::mutable_taskinfo() {
  // @@protoc_insertion_point(field_mutable:Config.EventTasksTemplate.TaskInfo)
  return _internal_mutable_taskinfo();
}
inline void EventTasksTemplate::set_allocated_taskinfo(::Config::EventTasksTemplate_Taskinfo_* taskinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete taskinfo_;
  }
  if (taskinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(taskinfo);
    if (message_arena != submessage_arena) {
      taskinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, taskinfo, submessage_arena);
    }
    
  } else {
    
  }
  taskinfo_ = taskinfo;
  // @@protoc_insertion_point(field_set_allocated:Config.EventTasksTemplate.TaskInfo)
}

// repeated int32 BindEventIds = 5;
inline int EventTasksTemplate::_internal_bindeventids_size() const {
  return bindeventids_.size();
}
inline int EventTasksTemplate::bindeventids_size() const {
  return _internal_bindeventids_size();
}
inline void EventTasksTemplate::clear_bindeventids() {
  bindeventids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate::_internal_bindeventids(int index) const {
  return bindeventids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate::bindeventids(int index) const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.BindEventIds)
  return _internal_bindeventids(index);
}
inline void EventTasksTemplate::set_bindeventids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  bindeventids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Config.EventTasksTemplate.BindEventIds)
}
inline void EventTasksTemplate::_internal_add_bindeventids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  bindeventids_.Add(value);
}
inline void EventTasksTemplate::add_bindeventids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_bindeventids(value);
  // @@protoc_insertion_point(field_add:Config.EventTasksTemplate.BindEventIds)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
EventTasksTemplate::_internal_bindeventids() const {
  return bindeventids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
EventTasksTemplate::bindeventids() const {
  // @@protoc_insertion_point(field_list:Config.EventTasksTemplate.BindEventIds)
  return _internal_bindeventids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
EventTasksTemplate::_internal_mutable_bindeventids() {
  return &bindeventids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
EventTasksTemplate::mutable_bindeventids() {
  // @@protoc_insertion_point(field_mutable_list:Config.EventTasksTemplate.BindEventIds)
  return _internal_mutable_bindeventids();
}

// int32 NextTask = 6;
inline void EventTasksTemplate::clear_nexttask() {
  nexttask_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate::_internal_nexttask() const {
  return nexttask_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventTasksTemplate::nexttask() const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.NextTask)
  return _internal_nexttask();
}
inline void EventTasksTemplate::_internal_set_nexttask(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  nexttask_ = value;
}
inline void EventTasksTemplate::set_nexttask(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_nexttask(value);
  // @@protoc_insertion_point(field_set:Config.EventTasksTemplate.NextTask)
}

// repeated .Config.EventTasksTemplate.Reward_ Rewards = 7;
inline int EventTasksTemplate::_internal_rewards_size() const {
  return rewards_.size();
}
inline int EventTasksTemplate::rewards_size() const {
  return _internal_rewards_size();
}
inline void EventTasksTemplate::clear_rewards() {
  rewards_.Clear();
}
inline ::Config::EventTasksTemplate_Reward_* EventTasksTemplate::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:Config.EventTasksTemplate.Rewards)
  return rewards_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::EventTasksTemplate_Reward_ >*
EventTasksTemplate::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:Config.EventTasksTemplate.Rewards)
  return &rewards_;
}
inline const ::Config::EventTasksTemplate_Reward_& EventTasksTemplate::_internal_rewards(int index) const {
  return rewards_.Get(index);
}
inline const ::Config::EventTasksTemplate_Reward_& EventTasksTemplate::rewards(int index) const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplate.Rewards)
  return _internal_rewards(index);
}
inline ::Config::EventTasksTemplate_Reward_* EventTasksTemplate::_internal_add_rewards() {
  return rewards_.Add();
}
inline ::Config::EventTasksTemplate_Reward_* EventTasksTemplate::add_rewards() {
  // @@protoc_insertion_point(field_add:Config.EventTasksTemplate.Rewards)
  return _internal_add_rewards();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::EventTasksTemplate_Reward_ >&
EventTasksTemplate::rewards() const {
  // @@protoc_insertion_point(field_list:Config.EventTasksTemplate.Rewards)
  return rewards_;
}

// -------------------------------------------------------------------

// EventTasksTemplateList

// repeated .Config.EventTasksTemplate EventTaskss = 1;
inline int EventTasksTemplateList::_internal_eventtaskss_size() const {
  return eventtaskss_.size();
}
inline int EventTasksTemplateList::eventtaskss_size() const {
  return _internal_eventtaskss_size();
}
inline void EventTasksTemplateList::clear_eventtaskss() {
  eventtaskss_.Clear();
}
inline ::Config::EventTasksTemplate* EventTasksTemplateList::mutable_eventtaskss(int index) {
  // @@protoc_insertion_point(field_mutable:Config.EventTasksTemplateList.EventTaskss)
  return eventtaskss_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::EventTasksTemplate >*
EventTasksTemplateList::mutable_eventtaskss() {
  // @@protoc_insertion_point(field_mutable_list:Config.EventTasksTemplateList.EventTaskss)
  return &eventtaskss_;
}
inline const ::Config::EventTasksTemplate& EventTasksTemplateList::_internal_eventtaskss(int index) const {
  return eventtaskss_.Get(index);
}
inline const ::Config::EventTasksTemplate& EventTasksTemplateList::eventtaskss(int index) const {
  // @@protoc_insertion_point(field_get:Config.EventTasksTemplateList.EventTaskss)
  return _internal_eventtaskss(index);
}
inline ::Config::EventTasksTemplate* EventTasksTemplateList::_internal_add_eventtaskss() {
  return eventtaskss_.Add();
}
inline ::Config::EventTasksTemplate* EventTasksTemplateList::add_eventtaskss() {
  // @@protoc_insertion_point(field_add:Config.EventTasksTemplateList.EventTaskss)
  return _internal_add_eventtaskss();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::EventTasksTemplate >&
EventTasksTemplateList::eventtaskss() const {
  // @@protoc_insertion_point(field_list:Config.EventTasksTemplateList.EventTaskss)
  return eventtaskss_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_protos_2fEventTasksTemplate_2eproto
