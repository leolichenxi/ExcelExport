// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/EventTasksTemplate.proto

#include "protos/EventTasksTemplate.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_protos_2fEventTasksTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_EventTasksTemplate_protos_2fEventTasksTemplate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fEventTasksTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EventTasksTemplate_Accessid__protos_2fEventTasksTemplate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fEventTasksTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EventTasksTemplate_Reward__protos_2fEventTasksTemplate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fEventTasksTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EventTasksTemplate_Taskinfo__protos_2fEventTasksTemplate_2eproto;
namespace Config {
class EventTasksTemplate_Accessid_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EventTasksTemplate_Accessid_> _instance;
} _EventTasksTemplate_Accessid__default_instance_;
class EventTasksTemplate_Taskinfo_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EventTasksTemplate_Taskinfo_> _instance;
} _EventTasksTemplate_Taskinfo__default_instance_;
class EventTasksTemplate_Reward_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EventTasksTemplate_Reward_> _instance;
} _EventTasksTemplate_Reward__default_instance_;
class EventTasksTemplateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EventTasksTemplate> _instance;
} _EventTasksTemplate_default_instance_;
class EventTasksTemplateListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EventTasksTemplateList> _instance;
} _EventTasksTemplateList_default_instance_;
}  // namespace Config
static void InitDefaultsscc_info_EventTasksTemplate_protos_2fEventTasksTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_EventTasksTemplate_default_instance_;
    new (ptr) ::Config::EventTasksTemplate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_EventTasksTemplate_protos_2fEventTasksTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_EventTasksTemplate_protos_2fEventTasksTemplate_2eproto}, {
      &scc_info_EventTasksTemplate_Accessid__protos_2fEventTasksTemplate_2eproto.base,
      &scc_info_EventTasksTemplate_Taskinfo__protos_2fEventTasksTemplate_2eproto.base,
      &scc_info_EventTasksTemplate_Reward__protos_2fEventTasksTemplate_2eproto.base,}};

static void InitDefaultsscc_info_EventTasksTemplate_Accessid__protos_2fEventTasksTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_EventTasksTemplate_Accessid__default_instance_;
    new (ptr) ::Config::EventTasksTemplate_Accessid_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EventTasksTemplate_Accessid__protos_2fEventTasksTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EventTasksTemplate_Accessid__protos_2fEventTasksTemplate_2eproto}, {}};

static void InitDefaultsscc_info_EventTasksTemplate_Reward__protos_2fEventTasksTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_EventTasksTemplate_Reward__default_instance_;
    new (ptr) ::Config::EventTasksTemplate_Reward_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EventTasksTemplate_Reward__protos_2fEventTasksTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EventTasksTemplate_Reward__protos_2fEventTasksTemplate_2eproto}, {}};

static void InitDefaultsscc_info_EventTasksTemplate_Taskinfo__protos_2fEventTasksTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_EventTasksTemplate_Taskinfo__default_instance_;
    new (ptr) ::Config::EventTasksTemplate_Taskinfo_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EventTasksTemplate_Taskinfo__protos_2fEventTasksTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EventTasksTemplate_Taskinfo__protos_2fEventTasksTemplate_2eproto}, {}};

static void InitDefaultsscc_info_EventTasksTemplateList_protos_2fEventTasksTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_EventTasksTemplateList_default_instance_;
    new (ptr) ::Config::EventTasksTemplateList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EventTasksTemplateList_protos_2fEventTasksTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EventTasksTemplateList_protos_2fEventTasksTemplate_2eproto}, {
      &scc_info_EventTasksTemplate_protos_2fEventTasksTemplate_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_protos_2fEventTasksTemplate_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_protos_2fEventTasksTemplate_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_protos_2fEventTasksTemplate_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_protos_2fEventTasksTemplate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate_Accessid_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate_Accessid_, id_),
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate_Accessid_, param1_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate_Taskinfo_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate_Taskinfo_, type_),
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate_Taskinfo_, param1_),
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate_Taskinfo_, param2_),
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate_Taskinfo_, param3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate_Reward_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate_Reward_, type_),
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate_Reward_, id_),
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate_Reward_, count_),
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate_Reward_, param1_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate, id_),
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate, showprogress_),
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate, accessid_),
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate, taskinfo_),
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate, bindeventids_),
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate, nexttask_),
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplate, rewards_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplateList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::EventTasksTemplateList, eventtaskss_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Config::EventTasksTemplate_Accessid_)},
  { 7, -1, sizeof(::Config::EventTasksTemplate_Taskinfo_)},
  { 16, -1, sizeof(::Config::EventTasksTemplate_Reward_)},
  { 25, -1, sizeof(::Config::EventTasksTemplate)},
  { 37, -1, sizeof(::Config::EventTasksTemplateList)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_EventTasksTemplate_Accessid__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_EventTasksTemplate_Taskinfo__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_EventTasksTemplate_Reward__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_EventTasksTemplate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_EventTasksTemplateList_default_instance_),
};

const char descriptor_table_protodef_protos_2fEventTasksTemplate_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037protos/EventTasksTemplate.proto\022\006Confi"
  "g\"\273\003\n\022EventTasksTemplate\022\n\n\002Id\030\001 \001(\005\022\024\n\014"
  "ShowProgress\030\002 \001(\005\0226\n\010AccessId\030\003 \001(\0132$.C"
  "onfig.EventTasksTemplate.Accessid_\0226\n\010Ta"
  "skInfo\030\004 \001(\0132$.Config.EventTasksTemplate"
  ".Taskinfo_\022\024\n\014BindEventIds\030\005 \003(\005\022\020\n\010Next"
  "Task\030\006 \001(\005\0223\n\007Rewards\030\007 \003(\0132\".Config.Eve"
  "ntTasksTemplate.Reward_\032\'\n\tAccessid_\022\n\n\002"
  "Id\030\001 \001(\005\022\016\n\006Param1\030\002 \001(\005\032I\n\tTaskinfo_\022\014\n"
  "\004Type\030\001 \001(\005\022\016\n\006Param1\030\002 \001(\005\022\016\n\006Param2\030\003 "
  "\001(\005\022\016\n\006Param3\030\004 \001(\005\032B\n\007Reward_\022\014\n\004Type\030\001"
  " \001(\005\022\n\n\002Id\030\002 \001(\005\022\r\n\005Count\030\003 \001(\005\022\016\n\006Param"
  "1\030\004 \001(\005\"I\n\026EventTasksTemplateList\022/\n\013Eve"
  "ntTaskss\030\001 \003(\0132\032.Config.EventTasksTempla"
  "teb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_protos_2fEventTasksTemplate_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_protos_2fEventTasksTemplate_2eproto_sccs[5] = {
  &scc_info_EventTasksTemplate_protos_2fEventTasksTemplate_2eproto.base,
  &scc_info_EventTasksTemplate_Accessid__protos_2fEventTasksTemplate_2eproto.base,
  &scc_info_EventTasksTemplate_Reward__protos_2fEventTasksTemplate_2eproto.base,
  &scc_info_EventTasksTemplate_Taskinfo__protos_2fEventTasksTemplate_2eproto.base,
  &scc_info_EventTasksTemplateList_protos_2fEventTasksTemplate_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_protos_2fEventTasksTemplate_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protos_2fEventTasksTemplate_2eproto = {
  false, false, descriptor_table_protodef_protos_2fEventTasksTemplate_2eproto, "protos/EventTasksTemplate.proto", 570,
  &descriptor_table_protos_2fEventTasksTemplate_2eproto_once, descriptor_table_protos_2fEventTasksTemplate_2eproto_sccs, descriptor_table_protos_2fEventTasksTemplate_2eproto_deps, 5, 0,
  schemas, file_default_instances, TableStruct_protos_2fEventTasksTemplate_2eproto::offsets,
  file_level_metadata_protos_2fEventTasksTemplate_2eproto, 5, file_level_enum_descriptors_protos_2fEventTasksTemplate_2eproto, file_level_service_descriptors_protos_2fEventTasksTemplate_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protos_2fEventTasksTemplate_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_protos_2fEventTasksTemplate_2eproto)), true);
namespace Config {

// ===================================================================

class EventTasksTemplate_Accessid_::_Internal {
 public:
};

EventTasksTemplate_Accessid_::EventTasksTemplate_Accessid_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.EventTasksTemplate.Accessid_)
}
EventTasksTemplate_Accessid_::EventTasksTemplate_Accessid_(const EventTasksTemplate_Accessid_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&param1_) -
    reinterpret_cast<char*>(&id_)) + sizeof(param1_));
  // @@protoc_insertion_point(copy_constructor:Config.EventTasksTemplate.Accessid_)
}

void EventTasksTemplate_Accessid_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&param1_) -
      reinterpret_cast<char*>(&id_)) + sizeof(param1_));
}

EventTasksTemplate_Accessid_::~EventTasksTemplate_Accessid_() {
  // @@protoc_insertion_point(destructor:Config.EventTasksTemplate.Accessid_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EventTasksTemplate_Accessid_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EventTasksTemplate_Accessid_::ArenaDtor(void* object) {
  EventTasksTemplate_Accessid_* _this = reinterpret_cast< EventTasksTemplate_Accessid_* >(object);
  (void)_this;
}
void EventTasksTemplate_Accessid_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EventTasksTemplate_Accessid_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EventTasksTemplate_Accessid_& EventTasksTemplate_Accessid_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EventTasksTemplate_Accessid__protos_2fEventTasksTemplate_2eproto.base);
  return *internal_default_instance();
}


void EventTasksTemplate_Accessid_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.EventTasksTemplate.Accessid_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param1_) -
      reinterpret_cast<char*>(&id_)) + sizeof(param1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EventTasksTemplate_Accessid_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Param1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          param1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EventTasksTemplate_Accessid_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.EventTasksTemplate.Accessid_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 Param1 = 2;
  if (this->param1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_param1(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.EventTasksTemplate.Accessid_)
  return target;
}

size_t EventTasksTemplate_Accessid_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.EventTasksTemplate.Accessid_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 Param1 = 2;
  if (this->param1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_param1());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventTasksTemplate_Accessid_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.EventTasksTemplate.Accessid_)
  GOOGLE_DCHECK_NE(&from, this);
  const EventTasksTemplate_Accessid_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EventTasksTemplate_Accessid_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.EventTasksTemplate.Accessid_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.EventTasksTemplate.Accessid_)
    MergeFrom(*source);
  }
}

void EventTasksTemplate_Accessid_::MergeFrom(const EventTasksTemplate_Accessid_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.EventTasksTemplate.Accessid_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.param1() != 0) {
    _internal_set_param1(from._internal_param1());
  }
}

void EventTasksTemplate_Accessid_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.EventTasksTemplate.Accessid_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventTasksTemplate_Accessid_::CopyFrom(const EventTasksTemplate_Accessid_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.EventTasksTemplate.Accessid_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventTasksTemplate_Accessid_::IsInitialized() const {
  return true;
}

void EventTasksTemplate_Accessid_::InternalSwap(EventTasksTemplate_Accessid_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventTasksTemplate_Accessid_, param1_)
      + sizeof(EventTasksTemplate_Accessid_::param1_)
      - PROTOBUF_FIELD_OFFSET(EventTasksTemplate_Accessid_, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EventTasksTemplate_Accessid_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EventTasksTemplate_Taskinfo_::_Internal {
 public:
};

EventTasksTemplate_Taskinfo_::EventTasksTemplate_Taskinfo_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.EventTasksTemplate.Taskinfo_)
}
EventTasksTemplate_Taskinfo_::EventTasksTemplate_Taskinfo_(const EventTasksTemplate_Taskinfo_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&param3_) -
    reinterpret_cast<char*>(&type_)) + sizeof(param3_));
  // @@protoc_insertion_point(copy_constructor:Config.EventTasksTemplate.Taskinfo_)
}

void EventTasksTemplate_Taskinfo_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&param3_) -
      reinterpret_cast<char*>(&type_)) + sizeof(param3_));
}

EventTasksTemplate_Taskinfo_::~EventTasksTemplate_Taskinfo_() {
  // @@protoc_insertion_point(destructor:Config.EventTasksTemplate.Taskinfo_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EventTasksTemplate_Taskinfo_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EventTasksTemplate_Taskinfo_::ArenaDtor(void* object) {
  EventTasksTemplate_Taskinfo_* _this = reinterpret_cast< EventTasksTemplate_Taskinfo_* >(object);
  (void)_this;
}
void EventTasksTemplate_Taskinfo_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EventTasksTemplate_Taskinfo_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EventTasksTemplate_Taskinfo_& EventTasksTemplate_Taskinfo_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EventTasksTemplate_Taskinfo__protos_2fEventTasksTemplate_2eproto.base);
  return *internal_default_instance();
}


void EventTasksTemplate_Taskinfo_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.EventTasksTemplate.Taskinfo_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param3_) -
      reinterpret_cast<char*>(&type_)) + sizeof(param3_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EventTasksTemplate_Taskinfo_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Param1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          param1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Param2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          param2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Param3 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          param3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EventTasksTemplate_Taskinfo_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.EventTasksTemplate.Taskinfo_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  // int32 Param1 = 2;
  if (this->param1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_param1(), target);
  }

  // int32 Param2 = 3;
  if (this->param2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_param2(), target);
  }

  // int32 Param3 = 4;
  if (this->param3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_param3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.EventTasksTemplate.Taskinfo_)
  return target;
}

size_t EventTasksTemplate_Taskinfo_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.EventTasksTemplate.Taskinfo_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // int32 Param1 = 2;
  if (this->param1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_param1());
  }

  // int32 Param2 = 3;
  if (this->param2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_param2());
  }

  // int32 Param3 = 4;
  if (this->param3() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_param3());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventTasksTemplate_Taskinfo_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.EventTasksTemplate.Taskinfo_)
  GOOGLE_DCHECK_NE(&from, this);
  const EventTasksTemplate_Taskinfo_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EventTasksTemplate_Taskinfo_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.EventTasksTemplate.Taskinfo_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.EventTasksTemplate.Taskinfo_)
    MergeFrom(*source);
  }
}

void EventTasksTemplate_Taskinfo_::MergeFrom(const EventTasksTemplate_Taskinfo_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.EventTasksTemplate.Taskinfo_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.param1() != 0) {
    _internal_set_param1(from._internal_param1());
  }
  if (from.param2() != 0) {
    _internal_set_param2(from._internal_param2());
  }
  if (from.param3() != 0) {
    _internal_set_param3(from._internal_param3());
  }
}

void EventTasksTemplate_Taskinfo_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.EventTasksTemplate.Taskinfo_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventTasksTemplate_Taskinfo_::CopyFrom(const EventTasksTemplate_Taskinfo_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.EventTasksTemplate.Taskinfo_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventTasksTemplate_Taskinfo_::IsInitialized() const {
  return true;
}

void EventTasksTemplate_Taskinfo_::InternalSwap(EventTasksTemplate_Taskinfo_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventTasksTemplate_Taskinfo_, param3_)
      + sizeof(EventTasksTemplate_Taskinfo_::param3_)
      - PROTOBUF_FIELD_OFFSET(EventTasksTemplate_Taskinfo_, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EventTasksTemplate_Taskinfo_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EventTasksTemplate_Reward_::_Internal {
 public:
};

EventTasksTemplate_Reward_::EventTasksTemplate_Reward_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.EventTasksTemplate.Reward_)
}
EventTasksTemplate_Reward_::EventTasksTemplate_Reward_(const EventTasksTemplate_Reward_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&param1_) -
    reinterpret_cast<char*>(&type_)) + sizeof(param1_));
  // @@protoc_insertion_point(copy_constructor:Config.EventTasksTemplate.Reward_)
}

void EventTasksTemplate_Reward_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&param1_) -
      reinterpret_cast<char*>(&type_)) + sizeof(param1_));
}

EventTasksTemplate_Reward_::~EventTasksTemplate_Reward_() {
  // @@protoc_insertion_point(destructor:Config.EventTasksTemplate.Reward_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EventTasksTemplate_Reward_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EventTasksTemplate_Reward_::ArenaDtor(void* object) {
  EventTasksTemplate_Reward_* _this = reinterpret_cast< EventTasksTemplate_Reward_* >(object);
  (void)_this;
}
void EventTasksTemplate_Reward_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EventTasksTemplate_Reward_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EventTasksTemplate_Reward_& EventTasksTemplate_Reward_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EventTasksTemplate_Reward__protos_2fEventTasksTemplate_2eproto.base);
  return *internal_default_instance();
}


void EventTasksTemplate_Reward_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.EventTasksTemplate.Reward_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param1_) -
      reinterpret_cast<char*>(&type_)) + sizeof(param1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EventTasksTemplate_Reward_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Param1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          param1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EventTasksTemplate_Reward_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.EventTasksTemplate.Reward_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  // int32 Id = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_id(), target);
  }

  // int32 Count = 3;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_count(), target);
  }

  // int32 Param1 = 4;
  if (this->param1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_param1(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.EventTasksTemplate.Reward_)
  return target;
}

size_t EventTasksTemplate_Reward_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.EventTasksTemplate.Reward_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // int32 Id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 Count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_count());
  }

  // int32 Param1 = 4;
  if (this->param1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_param1());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventTasksTemplate_Reward_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.EventTasksTemplate.Reward_)
  GOOGLE_DCHECK_NE(&from, this);
  const EventTasksTemplate_Reward_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EventTasksTemplate_Reward_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.EventTasksTemplate.Reward_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.EventTasksTemplate.Reward_)
    MergeFrom(*source);
  }
}

void EventTasksTemplate_Reward_::MergeFrom(const EventTasksTemplate_Reward_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.EventTasksTemplate.Reward_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from.param1() != 0) {
    _internal_set_param1(from._internal_param1());
  }
}

void EventTasksTemplate_Reward_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.EventTasksTemplate.Reward_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventTasksTemplate_Reward_::CopyFrom(const EventTasksTemplate_Reward_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.EventTasksTemplate.Reward_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventTasksTemplate_Reward_::IsInitialized() const {
  return true;
}

void EventTasksTemplate_Reward_::InternalSwap(EventTasksTemplate_Reward_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventTasksTemplate_Reward_, param1_)
      + sizeof(EventTasksTemplate_Reward_::param1_)
      - PROTOBUF_FIELD_OFFSET(EventTasksTemplate_Reward_, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EventTasksTemplate_Reward_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EventTasksTemplate::_Internal {
 public:
  static const ::Config::EventTasksTemplate_Accessid_& accessid(const EventTasksTemplate* msg);
  static const ::Config::EventTasksTemplate_Taskinfo_& taskinfo(const EventTasksTemplate* msg);
};

const ::Config::EventTasksTemplate_Accessid_&
EventTasksTemplate::_Internal::accessid(const EventTasksTemplate* msg) {
  return *msg->accessid_;
}
const ::Config::EventTasksTemplate_Taskinfo_&
EventTasksTemplate::_Internal::taskinfo(const EventTasksTemplate* msg) {
  return *msg->taskinfo_;
}
EventTasksTemplate::EventTasksTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  bindeventids_(arena),
  rewards_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.EventTasksTemplate)
}
EventTasksTemplate::EventTasksTemplate(const EventTasksTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      bindeventids_(from.bindeventids_),
      rewards_(from.rewards_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_accessid()) {
    accessid_ = new ::Config::EventTasksTemplate_Accessid_(*from.accessid_);
  } else {
    accessid_ = nullptr;
  }
  if (from._internal_has_taskinfo()) {
    taskinfo_ = new ::Config::EventTasksTemplate_Taskinfo_(*from.taskinfo_);
  } else {
    taskinfo_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&nexttask_) -
    reinterpret_cast<char*>(&id_)) + sizeof(nexttask_));
  // @@protoc_insertion_point(copy_constructor:Config.EventTasksTemplate)
}

void EventTasksTemplate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EventTasksTemplate_protos_2fEventTasksTemplate_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&accessid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&nexttask_) -
      reinterpret_cast<char*>(&accessid_)) + sizeof(nexttask_));
}

EventTasksTemplate::~EventTasksTemplate() {
  // @@protoc_insertion_point(destructor:Config.EventTasksTemplate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EventTasksTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete accessid_;
  if (this != internal_default_instance()) delete taskinfo_;
}

void EventTasksTemplate::ArenaDtor(void* object) {
  EventTasksTemplate* _this = reinterpret_cast< EventTasksTemplate* >(object);
  (void)_this;
}
void EventTasksTemplate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EventTasksTemplate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EventTasksTemplate& EventTasksTemplate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EventTasksTemplate_protos_2fEventTasksTemplate_2eproto.base);
  return *internal_default_instance();
}


void EventTasksTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.EventTasksTemplate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bindeventids_.Clear();
  rewards_.Clear();
  if (GetArena() == nullptr && accessid_ != nullptr) {
    delete accessid_;
  }
  accessid_ = nullptr;
  if (GetArena() == nullptr && taskinfo_ != nullptr) {
    delete taskinfo_;
  }
  taskinfo_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nexttask_) -
      reinterpret_cast<char*>(&id_)) + sizeof(nexttask_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EventTasksTemplate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ShowProgress = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          showprogress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Config.EventTasksTemplate.Accessid_ AccessId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_accessid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Config.EventTasksTemplate.Taskinfo_ TaskInfo = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_taskinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 BindEventIds = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_bindeventids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40) {
          _internal_add_bindeventids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 NextTask = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          nexttask_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Config.EventTasksTemplate.Reward_ Rewards = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rewards(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EventTasksTemplate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.EventTasksTemplate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 ShowProgress = 2;
  if (this->showprogress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_showprogress(), target);
  }

  // .Config.EventTasksTemplate.Accessid_ AccessId = 3;
  if (this->has_accessid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::accessid(this), target, stream);
  }

  // .Config.EventTasksTemplate.Taskinfo_ TaskInfo = 4;
  if (this->has_taskinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::taskinfo(this), target, stream);
  }

  // repeated int32 BindEventIds = 5;
  {
    int byte_size = _bindeventids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          5, _internal_bindeventids(), byte_size, target);
    }
  }

  // int32 NextTask = 6;
  if (this->nexttask() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_nexttask(), target);
  }

  // repeated .Config.EventTasksTemplate.Reward_ Rewards = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_rewards_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_rewards(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.EventTasksTemplate)
  return target;
}

size_t EventTasksTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.EventTasksTemplate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 BindEventIds = 5;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->bindeventids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _bindeventids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .Config.EventTasksTemplate.Reward_ Rewards = 7;
  total_size += 1UL * this->_internal_rewards_size();
  for (const auto& msg : this->rewards_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Config.EventTasksTemplate.Accessid_ AccessId = 3;
  if (this->has_accessid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *accessid_);
  }

  // .Config.EventTasksTemplate.Taskinfo_ TaskInfo = 4;
  if (this->has_taskinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *taskinfo_);
  }

  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 ShowProgress = 2;
  if (this->showprogress() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_showprogress());
  }

  // int32 NextTask = 6;
  if (this->nexttask() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_nexttask());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventTasksTemplate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.EventTasksTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  const EventTasksTemplate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EventTasksTemplate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.EventTasksTemplate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.EventTasksTemplate)
    MergeFrom(*source);
  }
}

void EventTasksTemplate::MergeFrom(const EventTasksTemplate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.EventTasksTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bindeventids_.MergeFrom(from.bindeventids_);
  rewards_.MergeFrom(from.rewards_);
  if (from.has_accessid()) {
    _internal_mutable_accessid()->::Config::EventTasksTemplate_Accessid_::MergeFrom(from._internal_accessid());
  }
  if (from.has_taskinfo()) {
    _internal_mutable_taskinfo()->::Config::EventTasksTemplate_Taskinfo_::MergeFrom(from._internal_taskinfo());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.showprogress() != 0) {
    _internal_set_showprogress(from._internal_showprogress());
  }
  if (from.nexttask() != 0) {
    _internal_set_nexttask(from._internal_nexttask());
  }
}

void EventTasksTemplate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.EventTasksTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventTasksTemplate::CopyFrom(const EventTasksTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.EventTasksTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventTasksTemplate::IsInitialized() const {
  return true;
}

void EventTasksTemplate::InternalSwap(EventTasksTemplate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  bindeventids_.InternalSwap(&other->bindeventids_);
  rewards_.InternalSwap(&other->rewards_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventTasksTemplate, nexttask_)
      + sizeof(EventTasksTemplate::nexttask_)
      - PROTOBUF_FIELD_OFFSET(EventTasksTemplate, accessid_)>(
          reinterpret_cast<char*>(&accessid_),
          reinterpret_cast<char*>(&other->accessid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EventTasksTemplate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EventTasksTemplateList::_Internal {
 public:
};

EventTasksTemplateList::EventTasksTemplateList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  eventtaskss_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.EventTasksTemplateList)
}
EventTasksTemplateList::EventTasksTemplateList(const EventTasksTemplateList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      eventtaskss_(from.eventtaskss_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Config.EventTasksTemplateList)
}

void EventTasksTemplateList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EventTasksTemplateList_protos_2fEventTasksTemplate_2eproto.base);
}

EventTasksTemplateList::~EventTasksTemplateList() {
  // @@protoc_insertion_point(destructor:Config.EventTasksTemplateList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EventTasksTemplateList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EventTasksTemplateList::ArenaDtor(void* object) {
  EventTasksTemplateList* _this = reinterpret_cast< EventTasksTemplateList* >(object);
  (void)_this;
}
void EventTasksTemplateList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EventTasksTemplateList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EventTasksTemplateList& EventTasksTemplateList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EventTasksTemplateList_protos_2fEventTasksTemplate_2eproto.base);
  return *internal_default_instance();
}


void EventTasksTemplateList::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.EventTasksTemplateList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eventtaskss_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EventTasksTemplateList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Config.EventTasksTemplate EventTaskss = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_eventtaskss(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EventTasksTemplateList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.EventTasksTemplateList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Config.EventTasksTemplate EventTaskss = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_eventtaskss_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_eventtaskss(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.EventTasksTemplateList)
  return target;
}

size_t EventTasksTemplateList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.EventTasksTemplateList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Config.EventTasksTemplate EventTaskss = 1;
  total_size += 1UL * this->_internal_eventtaskss_size();
  for (const auto& msg : this->eventtaskss_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventTasksTemplateList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.EventTasksTemplateList)
  GOOGLE_DCHECK_NE(&from, this);
  const EventTasksTemplateList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EventTasksTemplateList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.EventTasksTemplateList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.EventTasksTemplateList)
    MergeFrom(*source);
  }
}

void EventTasksTemplateList::MergeFrom(const EventTasksTemplateList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.EventTasksTemplateList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  eventtaskss_.MergeFrom(from.eventtaskss_);
}

void EventTasksTemplateList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.EventTasksTemplateList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventTasksTemplateList::CopyFrom(const EventTasksTemplateList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.EventTasksTemplateList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventTasksTemplateList::IsInitialized() const {
  return true;
}

void EventTasksTemplateList::InternalSwap(EventTasksTemplateList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  eventtaskss_.InternalSwap(&other->eventtaskss_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EventTasksTemplateList::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Config
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Config::EventTasksTemplate_Accessid_* Arena::CreateMaybeMessage< ::Config::EventTasksTemplate_Accessid_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::EventTasksTemplate_Accessid_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::EventTasksTemplate_Taskinfo_* Arena::CreateMaybeMessage< ::Config::EventTasksTemplate_Taskinfo_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::EventTasksTemplate_Taskinfo_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::EventTasksTemplate_Reward_* Arena::CreateMaybeMessage< ::Config::EventTasksTemplate_Reward_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::EventTasksTemplate_Reward_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::EventTasksTemplate* Arena::CreateMaybeMessage< ::Config::EventTasksTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::EventTasksTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::EventTasksTemplateList* Arena::CreateMaybeMessage< ::Config::EventTasksTemplateList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::EventTasksTemplateList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
