// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/PositionArray3d.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fPositionArray3d_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fPositionArray3d_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_protos_2fPositionArray3d_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fPositionArray3d_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protos_2fPositionArray3d_2eproto;
class PositionArray3d;
class PositionArray3dDefaultTypeInternal;
extern PositionArray3dDefaultTypeInternal _PositionArray3d_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::PositionArray3d* Arena::CreateMaybeMessage<::PositionArray3d>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class PositionArray3d PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PositionArray3d) */ {
 public:
  inline PositionArray3d() : PositionArray3d(nullptr) {}
  virtual ~PositionArray3d();

  PositionArray3d(const PositionArray3d& from);
  PositionArray3d(PositionArray3d&& from) noexcept
    : PositionArray3d() {
    *this = ::std::move(from);
  }

  inline PositionArray3d& operator=(const PositionArray3d& from) {
    CopyFrom(from);
    return *this;
  }
  inline PositionArray3d& operator=(PositionArray3d&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PositionArray3d& default_instance();

  static inline const PositionArray3d* internal_default_instance() {
    return reinterpret_cast<const PositionArray3d*>(
               &_PositionArray3d_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PositionArray3d& a, PositionArray3d& b) {
    a.Swap(&b);
  }
  inline void Swap(PositionArray3d* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PositionArray3d* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PositionArray3d* New() const final {
    return CreateMaybeMessage<PositionArray3d>(nullptr);
  }

  PositionArray3d* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PositionArray3d>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PositionArray3d& from);
  void MergeFrom(const PositionArray3d& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PositionArray3d* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PositionArray3d";
  }
  protected:
  explicit PositionArray3d(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_protos_2fPositionArray3d_2eproto);
    return ::descriptor_table_protos_2fPositionArray3d_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXsFieldNumber = 1,
    kYsFieldNumber = 2,
    kZsFieldNumber = 3,
  };
  // repeated float xs = 1;
  int xs_size() const;
  private:
  int _internal_xs_size() const;
  public:
  void clear_xs();
  private:
  float _internal_xs(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_xs() const;
  void _internal_add_xs(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_xs();
  public:
  float xs(int index) const;
  void set_xs(int index, float value);
  void add_xs(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      xs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_xs();

  // repeated float ys = 2;
  int ys_size() const;
  private:
  int _internal_ys_size() const;
  public:
  void clear_ys();
  private:
  float _internal_ys(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_ys() const;
  void _internal_add_ys(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_ys();
  public:
  float ys(int index) const;
  void set_ys(int index, float value);
  void add_ys(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      ys() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_ys();

  // repeated float zs = 3;
  int zs_size() const;
  private:
  int _internal_zs_size() const;
  public:
  void clear_zs();
  private:
  float _internal_zs(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_zs() const;
  void _internal_add_zs(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_zs();
  public:
  float zs(int index) const;
  void set_zs(int index, float value);
  void add_zs(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      zs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_zs();

  // @@protoc_insertion_point(class_scope:PositionArray3d)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > xs_;
  mutable std::atomic<int> _xs_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > ys_;
  mutable std::atomic<int> _ys_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > zs_;
  mutable std::atomic<int> _zs_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fPositionArray3d_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PositionArray3d

// repeated float xs = 1;
inline int PositionArray3d::_internal_xs_size() const {
  return xs_.size();
}
inline int PositionArray3d::xs_size() const {
  return _internal_xs_size();
}
inline void PositionArray3d::clear_xs() {
  xs_.Clear();
}
inline float PositionArray3d::_internal_xs(int index) const {
  return xs_.Get(index);
}
inline float PositionArray3d::xs(int index) const {
  // @@protoc_insertion_point(field_get:PositionArray3d.xs)
  return _internal_xs(index);
}
inline void PositionArray3d::set_xs(int index, float value) {
  xs_.Set(index, value);
  // @@protoc_insertion_point(field_set:PositionArray3d.xs)
}
inline void PositionArray3d::_internal_add_xs(float value) {
  xs_.Add(value);
}
inline void PositionArray3d::add_xs(float value) {
  _internal_add_xs(value);
  // @@protoc_insertion_point(field_add:PositionArray3d.xs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PositionArray3d::_internal_xs() const {
  return xs_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PositionArray3d::xs() const {
  // @@protoc_insertion_point(field_list:PositionArray3d.xs)
  return _internal_xs();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PositionArray3d::_internal_mutable_xs() {
  return &xs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PositionArray3d::mutable_xs() {
  // @@protoc_insertion_point(field_mutable_list:PositionArray3d.xs)
  return _internal_mutable_xs();
}

// repeated float ys = 2;
inline int PositionArray3d::_internal_ys_size() const {
  return ys_.size();
}
inline int PositionArray3d::ys_size() const {
  return _internal_ys_size();
}
inline void PositionArray3d::clear_ys() {
  ys_.Clear();
}
inline float PositionArray3d::_internal_ys(int index) const {
  return ys_.Get(index);
}
inline float PositionArray3d::ys(int index) const {
  // @@protoc_insertion_point(field_get:PositionArray3d.ys)
  return _internal_ys(index);
}
inline void PositionArray3d::set_ys(int index, float value) {
  ys_.Set(index, value);
  // @@protoc_insertion_point(field_set:PositionArray3d.ys)
}
inline void PositionArray3d::_internal_add_ys(float value) {
  ys_.Add(value);
}
inline void PositionArray3d::add_ys(float value) {
  _internal_add_ys(value);
  // @@protoc_insertion_point(field_add:PositionArray3d.ys)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PositionArray3d::_internal_ys() const {
  return ys_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PositionArray3d::ys() const {
  // @@protoc_insertion_point(field_list:PositionArray3d.ys)
  return _internal_ys();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PositionArray3d::_internal_mutable_ys() {
  return &ys_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PositionArray3d::mutable_ys() {
  // @@protoc_insertion_point(field_mutable_list:PositionArray3d.ys)
  return _internal_mutable_ys();
}

// repeated float zs = 3;
inline int PositionArray3d::_internal_zs_size() const {
  return zs_.size();
}
inline int PositionArray3d::zs_size() const {
  return _internal_zs_size();
}
inline void PositionArray3d::clear_zs() {
  zs_.Clear();
}
inline float PositionArray3d::_internal_zs(int index) const {
  return zs_.Get(index);
}
inline float PositionArray3d::zs(int index) const {
  // @@protoc_insertion_point(field_get:PositionArray3d.zs)
  return _internal_zs(index);
}
inline void PositionArray3d::set_zs(int index, float value) {
  zs_.Set(index, value);
  // @@protoc_insertion_point(field_set:PositionArray3d.zs)
}
inline void PositionArray3d::_internal_add_zs(float value) {
  zs_.Add(value);
}
inline void PositionArray3d::add_zs(float value) {
  _internal_add_zs(value);
  // @@protoc_insertion_point(field_add:PositionArray3d.zs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PositionArray3d::_internal_zs() const {
  return zs_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PositionArray3d::zs() const {
  // @@protoc_insertion_point(field_list:PositionArray3d.zs)
  return _internal_zs();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PositionArray3d::_internal_mutable_zs() {
  return &zs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PositionArray3d::mutable_zs() {
  // @@protoc_insertion_point(field_mutable_list:PositionArray3d.zs)
  return _internal_mutable_zs();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_protos_2fPositionArray3d_2eproto
