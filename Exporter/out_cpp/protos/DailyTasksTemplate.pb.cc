// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/DailyTasksTemplate.proto

#include "protos/DailyTasksTemplate.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_protos_2fDailyTasksTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_DailyTasksTemplate_protos_2fDailyTasksTemplate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fDailyTasksTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DailyTasksTemplate_Levelrange__protos_2fDailyTasksTemplate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fDailyTasksTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DailyTasksTemplate_Reward__protos_2fDailyTasksTemplate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fDailyTasksTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DailyTasksTemplate_Showreward__protos_2fDailyTasksTemplate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fDailyTasksTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DailyTasksTemplate_Taskinfo__protos_2fDailyTasksTemplate_2eproto;
namespace Config {
class DailyTasksTemplate_Levelrange_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DailyTasksTemplate_Levelrange_> _instance;
} _DailyTasksTemplate_Levelrange__default_instance_;
class DailyTasksTemplate_Taskinfo_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DailyTasksTemplate_Taskinfo_> _instance;
} _DailyTasksTemplate_Taskinfo__default_instance_;
class DailyTasksTemplate_Reward_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DailyTasksTemplate_Reward_> _instance;
} _DailyTasksTemplate_Reward__default_instance_;
class DailyTasksTemplate_Showreward_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DailyTasksTemplate_Showreward_> _instance;
} _DailyTasksTemplate_Showreward__default_instance_;
class DailyTasksTemplateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DailyTasksTemplate> _instance;
} _DailyTasksTemplate_default_instance_;
class DailyTasksTemplateListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DailyTasksTemplateList> _instance;
} _DailyTasksTemplateList_default_instance_;
}  // namespace Config
static void InitDefaultsscc_info_DailyTasksTemplate_protos_2fDailyTasksTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_DailyTasksTemplate_default_instance_;
    new (ptr) ::Config::DailyTasksTemplate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_DailyTasksTemplate_protos_2fDailyTasksTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_DailyTasksTemplate_protos_2fDailyTasksTemplate_2eproto}, {
      &scc_info_DailyTasksTemplate_Levelrange__protos_2fDailyTasksTemplate_2eproto.base,
      &scc_info_DailyTasksTemplate_Taskinfo__protos_2fDailyTasksTemplate_2eproto.base,
      &scc_info_DailyTasksTemplate_Reward__protos_2fDailyTasksTemplate_2eproto.base,
      &scc_info_DailyTasksTemplate_Showreward__protos_2fDailyTasksTemplate_2eproto.base,}};

static void InitDefaultsscc_info_DailyTasksTemplate_Levelrange__protos_2fDailyTasksTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_DailyTasksTemplate_Levelrange__default_instance_;
    new (ptr) ::Config::DailyTasksTemplate_Levelrange_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DailyTasksTemplate_Levelrange__protos_2fDailyTasksTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DailyTasksTemplate_Levelrange__protos_2fDailyTasksTemplate_2eproto}, {}};

static void InitDefaultsscc_info_DailyTasksTemplate_Reward__protos_2fDailyTasksTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_DailyTasksTemplate_Reward__default_instance_;
    new (ptr) ::Config::DailyTasksTemplate_Reward_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DailyTasksTemplate_Reward__protos_2fDailyTasksTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DailyTasksTemplate_Reward__protos_2fDailyTasksTemplate_2eproto}, {}};

static void InitDefaultsscc_info_DailyTasksTemplate_Showreward__protos_2fDailyTasksTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_DailyTasksTemplate_Showreward__default_instance_;
    new (ptr) ::Config::DailyTasksTemplate_Showreward_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DailyTasksTemplate_Showreward__protos_2fDailyTasksTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DailyTasksTemplate_Showreward__protos_2fDailyTasksTemplate_2eproto}, {}};

static void InitDefaultsscc_info_DailyTasksTemplate_Taskinfo__protos_2fDailyTasksTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_DailyTasksTemplate_Taskinfo__default_instance_;
    new (ptr) ::Config::DailyTasksTemplate_Taskinfo_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DailyTasksTemplate_Taskinfo__protos_2fDailyTasksTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DailyTasksTemplate_Taskinfo__protos_2fDailyTasksTemplate_2eproto}, {}};

static void InitDefaultsscc_info_DailyTasksTemplateList_protos_2fDailyTasksTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_DailyTasksTemplateList_default_instance_;
    new (ptr) ::Config::DailyTasksTemplateList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DailyTasksTemplateList_protos_2fDailyTasksTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DailyTasksTemplateList_protos_2fDailyTasksTemplate_2eproto}, {
      &scc_info_DailyTasksTemplate_protos_2fDailyTasksTemplate_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_protos_2fDailyTasksTemplate_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_protos_2fDailyTasksTemplate_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_protos_2fDailyTasksTemplate_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_protos_2fDailyTasksTemplate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Levelrange_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Levelrange_, min_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Levelrange_, max_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Taskinfo_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Taskinfo_, type_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Taskinfo_, param1_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Taskinfo_, param2_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Taskinfo_, param3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Reward_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Reward_, type_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Reward_, id_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Reward_, count_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Reward_, param1_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Showreward_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Showreward_, type_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Showreward_, id_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate_Showreward_, count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate, id_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate, kind_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate, levelrange_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate, quality_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate, level_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate, showprogress_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate, accessid_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate, taskinfo_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate, rewards_),
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplate, showrewards_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplateList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::DailyTasksTemplateList, dailytaskss_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Config::DailyTasksTemplate_Levelrange_)},
  { 7, -1, sizeof(::Config::DailyTasksTemplate_Taskinfo_)},
  { 16, -1, sizeof(::Config::DailyTasksTemplate_Reward_)},
  { 25, -1, sizeof(::Config::DailyTasksTemplate_Showreward_)},
  { 33, -1, sizeof(::Config::DailyTasksTemplate)},
  { 48, -1, sizeof(::Config::DailyTasksTemplateList)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_DailyTasksTemplate_Levelrange__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_DailyTasksTemplate_Taskinfo__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_DailyTasksTemplate_Reward__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_DailyTasksTemplate_Showreward__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_DailyTasksTemplate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_DailyTasksTemplateList_default_instance_),
};

const char descriptor_table_protodef_protos_2fDailyTasksTemplate_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037protos/DailyTasksTemplate.proto\022\006Confi"
  "g\"\314\004\n\022DailyTasksTemplate\022\n\n\002Id\030\001 \001(\005\022\014\n\004"
  "Kind\030\002 \001(\005\022:\n\nLevelRange\030\003 \001(\0132&.Config."
  "DailyTasksTemplate.Levelrange_\022\017\n\007Qualit"
  "y\030\004 \001(\005\022\r\n\005Level\030\005 \001(\005\022\024\n\014ShowProgress\030\006"
  " \001(\005\022\020\n\010AccessId\030\007 \001(\005\0226\n\010TaskInfo\030\010 \001(\013"
  "2$.Config.DailyTasksTemplate.Taskinfo_\0223"
  "\n\007Rewards\030\t \003(\0132\".Config.DailyTasksTempl"
  "ate.Reward_\022;\n\013ShowRewards\030\n \003(\0132&.Confi"
  "g.DailyTasksTemplate.Showreward_\032\'\n\013Leve"
  "lrange_\022\013\n\003Min\030\001 \001(\005\022\013\n\003Max\030\002 \001(\005\032I\n\tTas"
  "kinfo_\022\014\n\004Type\030\001 \001(\005\022\016\n\006Param1\030\002 \001(\005\022\016\n\006"
  "Param2\030\003 \001(\005\022\016\n\006Param3\030\004 \001(\005\032B\n\007Reward_\022"
  "\014\n\004Type\030\001 \001(\005\022\n\n\002Id\030\002 \001(\005\022\r\n\005Count\030\003 \001(\005"
  "\022\016\n\006Param1\030\004 \001(\005\0326\n\013Showreward_\022\014\n\004Type\030"
  "\001 \001(\005\022\n\n\002Id\030\002 \001(\005\022\r\n\005Count\030\003 \001(\005\"I\n\026Dail"
  "yTasksTemplateList\022/\n\013DailyTaskss\030\001 \003(\0132"
  "\032.Config.DailyTasksTemplateb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_protos_2fDailyTasksTemplate_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_protos_2fDailyTasksTemplate_2eproto_sccs[6] = {
  &scc_info_DailyTasksTemplate_protos_2fDailyTasksTemplate_2eproto.base,
  &scc_info_DailyTasksTemplate_Levelrange__protos_2fDailyTasksTemplate_2eproto.base,
  &scc_info_DailyTasksTemplate_Reward__protos_2fDailyTasksTemplate_2eproto.base,
  &scc_info_DailyTasksTemplate_Showreward__protos_2fDailyTasksTemplate_2eproto.base,
  &scc_info_DailyTasksTemplate_Taskinfo__protos_2fDailyTasksTemplate_2eproto.base,
  &scc_info_DailyTasksTemplateList_protos_2fDailyTasksTemplate_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_protos_2fDailyTasksTemplate_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protos_2fDailyTasksTemplate_2eproto = {
  false, false, descriptor_table_protodef_protos_2fDailyTasksTemplate_2eproto, "protos/DailyTasksTemplate.proto", 715,
  &descriptor_table_protos_2fDailyTasksTemplate_2eproto_once, descriptor_table_protos_2fDailyTasksTemplate_2eproto_sccs, descriptor_table_protos_2fDailyTasksTemplate_2eproto_deps, 6, 0,
  schemas, file_default_instances, TableStruct_protos_2fDailyTasksTemplate_2eproto::offsets,
  file_level_metadata_protos_2fDailyTasksTemplate_2eproto, 6, file_level_enum_descriptors_protos_2fDailyTasksTemplate_2eproto, file_level_service_descriptors_protos_2fDailyTasksTemplate_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protos_2fDailyTasksTemplate_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_protos_2fDailyTasksTemplate_2eproto)), true);
namespace Config {

// ===================================================================

class DailyTasksTemplate_Levelrange_::_Internal {
 public:
};

DailyTasksTemplate_Levelrange_::DailyTasksTemplate_Levelrange_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.DailyTasksTemplate.Levelrange_)
}
DailyTasksTemplate_Levelrange_::DailyTasksTemplate_Levelrange_(const DailyTasksTemplate_Levelrange_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&min_, &from.min_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_) -
    reinterpret_cast<char*>(&min_)) + sizeof(max_));
  // @@protoc_insertion_point(copy_constructor:Config.DailyTasksTemplate.Levelrange_)
}

void DailyTasksTemplate_Levelrange_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&min_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&min_)) + sizeof(max_));
}

DailyTasksTemplate_Levelrange_::~DailyTasksTemplate_Levelrange_() {
  // @@protoc_insertion_point(destructor:Config.DailyTasksTemplate.Levelrange_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DailyTasksTemplate_Levelrange_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DailyTasksTemplate_Levelrange_::ArenaDtor(void* object) {
  DailyTasksTemplate_Levelrange_* _this = reinterpret_cast< DailyTasksTemplate_Levelrange_* >(object);
  (void)_this;
}
void DailyTasksTemplate_Levelrange_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DailyTasksTemplate_Levelrange_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DailyTasksTemplate_Levelrange_& DailyTasksTemplate_Levelrange_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DailyTasksTemplate_Levelrange__protos_2fDailyTasksTemplate_2eproto.base);
  return *internal_default_instance();
}


void DailyTasksTemplate_Levelrange_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.DailyTasksTemplate.Levelrange_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&min_)) + sizeof(max_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DailyTasksTemplate_Levelrange_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Min = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          min_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Max = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          max_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DailyTasksTemplate_Levelrange_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.DailyTasksTemplate.Levelrange_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Min = 1;
  if (this->min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_min(), target);
  }

  // int32 Max = 2;
  if (this->max() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_max(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.DailyTasksTemplate.Levelrange_)
  return target;
}

size_t DailyTasksTemplate_Levelrange_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.DailyTasksTemplate.Levelrange_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Min = 1;
  if (this->min() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_min());
  }

  // int32 Max = 2;
  if (this->max() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_max());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DailyTasksTemplate_Levelrange_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.DailyTasksTemplate.Levelrange_)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTasksTemplate_Levelrange_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DailyTasksTemplate_Levelrange_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.DailyTasksTemplate.Levelrange_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.DailyTasksTemplate.Levelrange_)
    MergeFrom(*source);
  }
}

void DailyTasksTemplate_Levelrange_::MergeFrom(const DailyTasksTemplate_Levelrange_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.DailyTasksTemplate.Levelrange_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.min() != 0) {
    _internal_set_min(from._internal_min());
  }
  if (from.max() != 0) {
    _internal_set_max(from._internal_max());
  }
}

void DailyTasksTemplate_Levelrange_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.DailyTasksTemplate.Levelrange_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTasksTemplate_Levelrange_::CopyFrom(const DailyTasksTemplate_Levelrange_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.DailyTasksTemplate.Levelrange_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTasksTemplate_Levelrange_::IsInitialized() const {
  return true;
}

void DailyTasksTemplate_Levelrange_::InternalSwap(DailyTasksTemplate_Levelrange_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DailyTasksTemplate_Levelrange_, max_)
      + sizeof(DailyTasksTemplate_Levelrange_::max_)
      - PROTOBUF_FIELD_OFFSET(DailyTasksTemplate_Levelrange_, min_)>(
          reinterpret_cast<char*>(&min_),
          reinterpret_cast<char*>(&other->min_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DailyTasksTemplate_Levelrange_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DailyTasksTemplate_Taskinfo_::_Internal {
 public:
};

DailyTasksTemplate_Taskinfo_::DailyTasksTemplate_Taskinfo_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.DailyTasksTemplate.Taskinfo_)
}
DailyTasksTemplate_Taskinfo_::DailyTasksTemplate_Taskinfo_(const DailyTasksTemplate_Taskinfo_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&param3_) -
    reinterpret_cast<char*>(&type_)) + sizeof(param3_));
  // @@protoc_insertion_point(copy_constructor:Config.DailyTasksTemplate.Taskinfo_)
}

void DailyTasksTemplate_Taskinfo_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&param3_) -
      reinterpret_cast<char*>(&type_)) + sizeof(param3_));
}

DailyTasksTemplate_Taskinfo_::~DailyTasksTemplate_Taskinfo_() {
  // @@protoc_insertion_point(destructor:Config.DailyTasksTemplate.Taskinfo_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DailyTasksTemplate_Taskinfo_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DailyTasksTemplate_Taskinfo_::ArenaDtor(void* object) {
  DailyTasksTemplate_Taskinfo_* _this = reinterpret_cast< DailyTasksTemplate_Taskinfo_* >(object);
  (void)_this;
}
void DailyTasksTemplate_Taskinfo_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DailyTasksTemplate_Taskinfo_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DailyTasksTemplate_Taskinfo_& DailyTasksTemplate_Taskinfo_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DailyTasksTemplate_Taskinfo__protos_2fDailyTasksTemplate_2eproto.base);
  return *internal_default_instance();
}


void DailyTasksTemplate_Taskinfo_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.DailyTasksTemplate.Taskinfo_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param3_) -
      reinterpret_cast<char*>(&type_)) + sizeof(param3_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DailyTasksTemplate_Taskinfo_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Param1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          param1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Param2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          param2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Param3 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          param3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DailyTasksTemplate_Taskinfo_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.DailyTasksTemplate.Taskinfo_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  // int32 Param1 = 2;
  if (this->param1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_param1(), target);
  }

  // int32 Param2 = 3;
  if (this->param2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_param2(), target);
  }

  // int32 Param3 = 4;
  if (this->param3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_param3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.DailyTasksTemplate.Taskinfo_)
  return target;
}

size_t DailyTasksTemplate_Taskinfo_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.DailyTasksTemplate.Taskinfo_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // int32 Param1 = 2;
  if (this->param1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_param1());
  }

  // int32 Param2 = 3;
  if (this->param2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_param2());
  }

  // int32 Param3 = 4;
  if (this->param3() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_param3());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DailyTasksTemplate_Taskinfo_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.DailyTasksTemplate.Taskinfo_)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTasksTemplate_Taskinfo_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DailyTasksTemplate_Taskinfo_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.DailyTasksTemplate.Taskinfo_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.DailyTasksTemplate.Taskinfo_)
    MergeFrom(*source);
  }
}

void DailyTasksTemplate_Taskinfo_::MergeFrom(const DailyTasksTemplate_Taskinfo_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.DailyTasksTemplate.Taskinfo_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.param1() != 0) {
    _internal_set_param1(from._internal_param1());
  }
  if (from.param2() != 0) {
    _internal_set_param2(from._internal_param2());
  }
  if (from.param3() != 0) {
    _internal_set_param3(from._internal_param3());
  }
}

void DailyTasksTemplate_Taskinfo_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.DailyTasksTemplate.Taskinfo_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTasksTemplate_Taskinfo_::CopyFrom(const DailyTasksTemplate_Taskinfo_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.DailyTasksTemplate.Taskinfo_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTasksTemplate_Taskinfo_::IsInitialized() const {
  return true;
}

void DailyTasksTemplate_Taskinfo_::InternalSwap(DailyTasksTemplate_Taskinfo_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DailyTasksTemplate_Taskinfo_, param3_)
      + sizeof(DailyTasksTemplate_Taskinfo_::param3_)
      - PROTOBUF_FIELD_OFFSET(DailyTasksTemplate_Taskinfo_, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DailyTasksTemplate_Taskinfo_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DailyTasksTemplate_Reward_::_Internal {
 public:
};

DailyTasksTemplate_Reward_::DailyTasksTemplate_Reward_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.DailyTasksTemplate.Reward_)
}
DailyTasksTemplate_Reward_::DailyTasksTemplate_Reward_(const DailyTasksTemplate_Reward_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&param1_) -
    reinterpret_cast<char*>(&type_)) + sizeof(param1_));
  // @@protoc_insertion_point(copy_constructor:Config.DailyTasksTemplate.Reward_)
}

void DailyTasksTemplate_Reward_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&param1_) -
      reinterpret_cast<char*>(&type_)) + sizeof(param1_));
}

DailyTasksTemplate_Reward_::~DailyTasksTemplate_Reward_() {
  // @@protoc_insertion_point(destructor:Config.DailyTasksTemplate.Reward_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DailyTasksTemplate_Reward_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DailyTasksTemplate_Reward_::ArenaDtor(void* object) {
  DailyTasksTemplate_Reward_* _this = reinterpret_cast< DailyTasksTemplate_Reward_* >(object);
  (void)_this;
}
void DailyTasksTemplate_Reward_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DailyTasksTemplate_Reward_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DailyTasksTemplate_Reward_& DailyTasksTemplate_Reward_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DailyTasksTemplate_Reward__protos_2fDailyTasksTemplate_2eproto.base);
  return *internal_default_instance();
}


void DailyTasksTemplate_Reward_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.DailyTasksTemplate.Reward_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param1_) -
      reinterpret_cast<char*>(&type_)) + sizeof(param1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DailyTasksTemplate_Reward_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Param1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          param1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DailyTasksTemplate_Reward_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.DailyTasksTemplate.Reward_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  // int32 Id = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_id(), target);
  }

  // int32 Count = 3;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_count(), target);
  }

  // int32 Param1 = 4;
  if (this->param1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_param1(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.DailyTasksTemplate.Reward_)
  return target;
}

size_t DailyTasksTemplate_Reward_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.DailyTasksTemplate.Reward_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // int32 Id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 Count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_count());
  }

  // int32 Param1 = 4;
  if (this->param1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_param1());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DailyTasksTemplate_Reward_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.DailyTasksTemplate.Reward_)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTasksTemplate_Reward_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DailyTasksTemplate_Reward_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.DailyTasksTemplate.Reward_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.DailyTasksTemplate.Reward_)
    MergeFrom(*source);
  }
}

void DailyTasksTemplate_Reward_::MergeFrom(const DailyTasksTemplate_Reward_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.DailyTasksTemplate.Reward_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from.param1() != 0) {
    _internal_set_param1(from._internal_param1());
  }
}

void DailyTasksTemplate_Reward_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.DailyTasksTemplate.Reward_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTasksTemplate_Reward_::CopyFrom(const DailyTasksTemplate_Reward_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.DailyTasksTemplate.Reward_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTasksTemplate_Reward_::IsInitialized() const {
  return true;
}

void DailyTasksTemplate_Reward_::InternalSwap(DailyTasksTemplate_Reward_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DailyTasksTemplate_Reward_, param1_)
      + sizeof(DailyTasksTemplate_Reward_::param1_)
      - PROTOBUF_FIELD_OFFSET(DailyTasksTemplate_Reward_, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DailyTasksTemplate_Reward_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DailyTasksTemplate_Showreward_::_Internal {
 public:
};

DailyTasksTemplate_Showreward_::DailyTasksTemplate_Showreward_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.DailyTasksTemplate.Showreward_)
}
DailyTasksTemplate_Showreward_::DailyTasksTemplate_Showreward_(const DailyTasksTemplate_Showreward_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&type_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:Config.DailyTasksTemplate.Showreward_)
}

void DailyTasksTemplate_Showreward_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&type_)) + sizeof(count_));
}

DailyTasksTemplate_Showreward_::~DailyTasksTemplate_Showreward_() {
  // @@protoc_insertion_point(destructor:Config.DailyTasksTemplate.Showreward_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DailyTasksTemplate_Showreward_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DailyTasksTemplate_Showreward_::ArenaDtor(void* object) {
  DailyTasksTemplate_Showreward_* _this = reinterpret_cast< DailyTasksTemplate_Showreward_* >(object);
  (void)_this;
}
void DailyTasksTemplate_Showreward_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DailyTasksTemplate_Showreward_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DailyTasksTemplate_Showreward_& DailyTasksTemplate_Showreward_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DailyTasksTemplate_Showreward__protos_2fDailyTasksTemplate_2eproto.base);
  return *internal_default_instance();
}


void DailyTasksTemplate_Showreward_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.DailyTasksTemplate.Showreward_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&type_)) + sizeof(count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DailyTasksTemplate_Showreward_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DailyTasksTemplate_Showreward_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.DailyTasksTemplate.Showreward_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  // int32 Id = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_id(), target);
  }

  // int32 Count = 3;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.DailyTasksTemplate.Showreward_)
  return target;
}

size_t DailyTasksTemplate_Showreward_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.DailyTasksTemplate.Showreward_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // int32 Id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 Count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DailyTasksTemplate_Showreward_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.DailyTasksTemplate.Showreward_)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTasksTemplate_Showreward_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DailyTasksTemplate_Showreward_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.DailyTasksTemplate.Showreward_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.DailyTasksTemplate.Showreward_)
    MergeFrom(*source);
  }
}

void DailyTasksTemplate_Showreward_::MergeFrom(const DailyTasksTemplate_Showreward_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.DailyTasksTemplate.Showreward_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
}

void DailyTasksTemplate_Showreward_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.DailyTasksTemplate.Showreward_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTasksTemplate_Showreward_::CopyFrom(const DailyTasksTemplate_Showreward_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.DailyTasksTemplate.Showreward_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTasksTemplate_Showreward_::IsInitialized() const {
  return true;
}

void DailyTasksTemplate_Showreward_::InternalSwap(DailyTasksTemplate_Showreward_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DailyTasksTemplate_Showreward_, count_)
      + sizeof(DailyTasksTemplate_Showreward_::count_)
      - PROTOBUF_FIELD_OFFSET(DailyTasksTemplate_Showreward_, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DailyTasksTemplate_Showreward_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DailyTasksTemplate::_Internal {
 public:
  static const ::Config::DailyTasksTemplate_Levelrange_& levelrange(const DailyTasksTemplate* msg);
  static const ::Config::DailyTasksTemplate_Taskinfo_& taskinfo(const DailyTasksTemplate* msg);
};

const ::Config::DailyTasksTemplate_Levelrange_&
DailyTasksTemplate::_Internal::levelrange(const DailyTasksTemplate* msg) {
  return *msg->levelrange_;
}
const ::Config::DailyTasksTemplate_Taskinfo_&
DailyTasksTemplate::_Internal::taskinfo(const DailyTasksTemplate* msg) {
  return *msg->taskinfo_;
}
DailyTasksTemplate::DailyTasksTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  rewards_(arena),
  showrewards_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.DailyTasksTemplate)
}
DailyTasksTemplate::DailyTasksTemplate(const DailyTasksTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      rewards_(from.rewards_),
      showrewards_(from.showrewards_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_levelrange()) {
    levelrange_ = new ::Config::DailyTasksTemplate_Levelrange_(*from.levelrange_);
  } else {
    levelrange_ = nullptr;
  }
  if (from._internal_has_taskinfo()) {
    taskinfo_ = new ::Config::DailyTasksTemplate_Taskinfo_(*from.taskinfo_);
  } else {
    taskinfo_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&accessid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(accessid_));
  // @@protoc_insertion_point(copy_constructor:Config.DailyTasksTemplate)
}

void DailyTasksTemplate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DailyTasksTemplate_protos_2fDailyTasksTemplate_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&levelrange_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&accessid_) -
      reinterpret_cast<char*>(&levelrange_)) + sizeof(accessid_));
}

DailyTasksTemplate::~DailyTasksTemplate() {
  // @@protoc_insertion_point(destructor:Config.DailyTasksTemplate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DailyTasksTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete levelrange_;
  if (this != internal_default_instance()) delete taskinfo_;
}

void DailyTasksTemplate::ArenaDtor(void* object) {
  DailyTasksTemplate* _this = reinterpret_cast< DailyTasksTemplate* >(object);
  (void)_this;
}
void DailyTasksTemplate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DailyTasksTemplate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DailyTasksTemplate& DailyTasksTemplate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DailyTasksTemplate_protos_2fDailyTasksTemplate_2eproto.base);
  return *internal_default_instance();
}


void DailyTasksTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.DailyTasksTemplate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rewards_.Clear();
  showrewards_.Clear();
  if (GetArena() == nullptr && levelrange_ != nullptr) {
    delete levelrange_;
  }
  levelrange_ = nullptr;
  if (GetArena() == nullptr && taskinfo_ != nullptr) {
    delete taskinfo_;
  }
  taskinfo_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accessid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(accessid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DailyTasksTemplate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Kind = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          kind_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Config.DailyTasksTemplate.Levelrange_ LevelRange = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_levelrange(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Quality = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          quality_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Level = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ShowProgress = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          showprogress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 AccessId = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          accessid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Config.DailyTasksTemplate.Taskinfo_ TaskInfo = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_taskinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Config.DailyTasksTemplate.Reward_ Rewards = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rewards(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .Config.DailyTasksTemplate.Showreward_ ShowRewards = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_showrewards(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DailyTasksTemplate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.DailyTasksTemplate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 Kind = 2;
  if (this->kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_kind(), target);
  }

  // .Config.DailyTasksTemplate.Levelrange_ LevelRange = 3;
  if (this->has_levelrange()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::levelrange(this), target, stream);
  }

  // int32 Quality = 4;
  if (this->quality() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_quality(), target);
  }

  // int32 Level = 5;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_level(), target);
  }

  // int32 ShowProgress = 6;
  if (this->showprogress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_showprogress(), target);
  }

  // int32 AccessId = 7;
  if (this->accessid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_accessid(), target);
  }

  // .Config.DailyTasksTemplate.Taskinfo_ TaskInfo = 8;
  if (this->has_taskinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::taskinfo(this), target, stream);
  }

  // repeated .Config.DailyTasksTemplate.Reward_ Rewards = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_rewards_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, this->_internal_rewards(i), target, stream);
  }

  // repeated .Config.DailyTasksTemplate.Showreward_ ShowRewards = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_showrewards_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_showrewards(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.DailyTasksTemplate)
  return target;
}

size_t DailyTasksTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.DailyTasksTemplate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Config.DailyTasksTemplate.Reward_ Rewards = 9;
  total_size += 1UL * this->_internal_rewards_size();
  for (const auto& msg : this->rewards_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Config.DailyTasksTemplate.Showreward_ ShowRewards = 10;
  total_size += 1UL * this->_internal_showrewards_size();
  for (const auto& msg : this->showrewards_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Config.DailyTasksTemplate.Levelrange_ LevelRange = 3;
  if (this->has_levelrange()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *levelrange_);
  }

  // .Config.DailyTasksTemplate.Taskinfo_ TaskInfo = 8;
  if (this->has_taskinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *taskinfo_);
  }

  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 Kind = 2;
  if (this->kind() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_kind());
  }

  // int32 Quality = 4;
  if (this->quality() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_quality());
  }

  // int32 Level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_level());
  }

  // int32 ShowProgress = 6;
  if (this->showprogress() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_showprogress());
  }

  // int32 AccessId = 7;
  if (this->accessid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_accessid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DailyTasksTemplate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.DailyTasksTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTasksTemplate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DailyTasksTemplate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.DailyTasksTemplate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.DailyTasksTemplate)
    MergeFrom(*source);
  }
}

void DailyTasksTemplate::MergeFrom(const DailyTasksTemplate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.DailyTasksTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rewards_.MergeFrom(from.rewards_);
  showrewards_.MergeFrom(from.showrewards_);
  if (from.has_levelrange()) {
    _internal_mutable_levelrange()->::Config::DailyTasksTemplate_Levelrange_::MergeFrom(from._internal_levelrange());
  }
  if (from.has_taskinfo()) {
    _internal_mutable_taskinfo()->::Config::DailyTasksTemplate_Taskinfo_::MergeFrom(from._internal_taskinfo());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.kind() != 0) {
    _internal_set_kind(from._internal_kind());
  }
  if (from.quality() != 0) {
    _internal_set_quality(from._internal_quality());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.showprogress() != 0) {
    _internal_set_showprogress(from._internal_showprogress());
  }
  if (from.accessid() != 0) {
    _internal_set_accessid(from._internal_accessid());
  }
}

void DailyTasksTemplate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.DailyTasksTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTasksTemplate::CopyFrom(const DailyTasksTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.DailyTasksTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTasksTemplate::IsInitialized() const {
  return true;
}

void DailyTasksTemplate::InternalSwap(DailyTasksTemplate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rewards_.InternalSwap(&other->rewards_);
  showrewards_.InternalSwap(&other->showrewards_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DailyTasksTemplate, accessid_)
      + sizeof(DailyTasksTemplate::accessid_)
      - PROTOBUF_FIELD_OFFSET(DailyTasksTemplate, levelrange_)>(
          reinterpret_cast<char*>(&levelrange_),
          reinterpret_cast<char*>(&other->levelrange_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DailyTasksTemplate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DailyTasksTemplateList::_Internal {
 public:
};

DailyTasksTemplateList::DailyTasksTemplateList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  dailytaskss_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.DailyTasksTemplateList)
}
DailyTasksTemplateList::DailyTasksTemplateList(const DailyTasksTemplateList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      dailytaskss_(from.dailytaskss_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Config.DailyTasksTemplateList)
}

void DailyTasksTemplateList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DailyTasksTemplateList_protos_2fDailyTasksTemplate_2eproto.base);
}

DailyTasksTemplateList::~DailyTasksTemplateList() {
  // @@protoc_insertion_point(destructor:Config.DailyTasksTemplateList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DailyTasksTemplateList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DailyTasksTemplateList::ArenaDtor(void* object) {
  DailyTasksTemplateList* _this = reinterpret_cast< DailyTasksTemplateList* >(object);
  (void)_this;
}
void DailyTasksTemplateList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DailyTasksTemplateList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DailyTasksTemplateList& DailyTasksTemplateList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DailyTasksTemplateList_protos_2fDailyTasksTemplate_2eproto.base);
  return *internal_default_instance();
}


void DailyTasksTemplateList::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.DailyTasksTemplateList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dailytaskss_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DailyTasksTemplateList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Config.DailyTasksTemplate DailyTaskss = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_dailytaskss(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DailyTasksTemplateList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.DailyTasksTemplateList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Config.DailyTasksTemplate DailyTaskss = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_dailytaskss_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_dailytaskss(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.DailyTasksTemplateList)
  return target;
}

size_t DailyTasksTemplateList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.DailyTasksTemplateList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Config.DailyTasksTemplate DailyTaskss = 1;
  total_size += 1UL * this->_internal_dailytaskss_size();
  for (const auto& msg : this->dailytaskss_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DailyTasksTemplateList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.DailyTasksTemplateList)
  GOOGLE_DCHECK_NE(&from, this);
  const DailyTasksTemplateList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DailyTasksTemplateList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.DailyTasksTemplateList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.DailyTasksTemplateList)
    MergeFrom(*source);
  }
}

void DailyTasksTemplateList::MergeFrom(const DailyTasksTemplateList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.DailyTasksTemplateList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dailytaskss_.MergeFrom(from.dailytaskss_);
}

void DailyTasksTemplateList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.DailyTasksTemplateList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyTasksTemplateList::CopyFrom(const DailyTasksTemplateList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.DailyTasksTemplateList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyTasksTemplateList::IsInitialized() const {
  return true;
}

void DailyTasksTemplateList::InternalSwap(DailyTasksTemplateList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  dailytaskss_.InternalSwap(&other->dailytaskss_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DailyTasksTemplateList::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Config
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Config::DailyTasksTemplate_Levelrange_* Arena::CreateMaybeMessage< ::Config::DailyTasksTemplate_Levelrange_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::DailyTasksTemplate_Levelrange_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::DailyTasksTemplate_Taskinfo_* Arena::CreateMaybeMessage< ::Config::DailyTasksTemplate_Taskinfo_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::DailyTasksTemplate_Taskinfo_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::DailyTasksTemplate_Reward_* Arena::CreateMaybeMessage< ::Config::DailyTasksTemplate_Reward_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::DailyTasksTemplate_Reward_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::DailyTasksTemplate_Showreward_* Arena::CreateMaybeMessage< ::Config::DailyTasksTemplate_Showreward_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::DailyTasksTemplate_Showreward_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::DailyTasksTemplate* Arena::CreateMaybeMessage< ::Config::DailyTasksTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::DailyTasksTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::DailyTasksTemplateList* Arena::CreateMaybeMessage< ::Config::DailyTasksTemplateList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::DailyTasksTemplateList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
