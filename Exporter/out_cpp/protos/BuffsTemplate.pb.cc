// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/BuffsTemplate.proto

#include "protos/BuffsTemplate.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_protos_2fBuffsTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_BuffsTemplate_protos_2fBuffsTemplate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fBuffsTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuffsTemplate_Action__protos_2fBuffsTemplate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fBuffsTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuffsTemplate_Cover__protos_2fBuffsTemplate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fBuffsTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuffsTemplate_Endcondition__protos_2fBuffsTemplate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fBuffsTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuffsTemplate_Searchtarget__protos_2fBuffsTemplate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fBuffsTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuffsTemplate_Stacklimit__protos_2fBuffsTemplate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fBuffsTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuffsTemplate_Trigger__protos_2fBuffsTemplate_2eproto;
namespace Config {
class BuffsTemplate_Stacklimit_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BuffsTemplate_Stacklimit_> _instance;
} _BuffsTemplate_Stacklimit__default_instance_;
class BuffsTemplate_Cover_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BuffsTemplate_Cover_> _instance;
} _BuffsTemplate_Cover__default_instance_;
class BuffsTemplate_Trigger_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BuffsTemplate_Trigger_> _instance;
} _BuffsTemplate_Trigger__default_instance_;
class BuffsTemplate_Searchtarget_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BuffsTemplate_Searchtarget_> _instance;
} _BuffsTemplate_Searchtarget__default_instance_;
class BuffsTemplate_Action_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BuffsTemplate_Action_> _instance;
} _BuffsTemplate_Action__default_instance_;
class BuffsTemplate_Endcondition_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BuffsTemplate_Endcondition_> _instance;
} _BuffsTemplate_Endcondition__default_instance_;
class BuffsTemplateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BuffsTemplate> _instance;
} _BuffsTemplate_default_instance_;
class BuffsTemplateListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BuffsTemplateList> _instance;
} _BuffsTemplateList_default_instance_;
}  // namespace Config
static void InitDefaultsscc_info_BuffsTemplate_protos_2fBuffsTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_BuffsTemplate_default_instance_;
    new (ptr) ::Config::BuffsTemplate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_BuffsTemplate_protos_2fBuffsTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_BuffsTemplate_protos_2fBuffsTemplate_2eproto}, {
      &scc_info_BuffsTemplate_Stacklimit__protos_2fBuffsTemplate_2eproto.base,
      &scc_info_BuffsTemplate_Cover__protos_2fBuffsTemplate_2eproto.base,
      &scc_info_BuffsTemplate_Trigger__protos_2fBuffsTemplate_2eproto.base,
      &scc_info_BuffsTemplate_Searchtarget__protos_2fBuffsTemplate_2eproto.base,
      &scc_info_BuffsTemplate_Action__protos_2fBuffsTemplate_2eproto.base,
      &scc_info_BuffsTemplate_Endcondition__protos_2fBuffsTemplate_2eproto.base,}};

static void InitDefaultsscc_info_BuffsTemplate_Action__protos_2fBuffsTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_BuffsTemplate_Action__default_instance_;
    new (ptr) ::Config::BuffsTemplate_Action_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuffsTemplate_Action__protos_2fBuffsTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BuffsTemplate_Action__protos_2fBuffsTemplate_2eproto}, {}};

static void InitDefaultsscc_info_BuffsTemplate_Cover__protos_2fBuffsTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_BuffsTemplate_Cover__default_instance_;
    new (ptr) ::Config::BuffsTemplate_Cover_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuffsTemplate_Cover__protos_2fBuffsTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BuffsTemplate_Cover__protos_2fBuffsTemplate_2eproto}, {}};

static void InitDefaultsscc_info_BuffsTemplate_Endcondition__protos_2fBuffsTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_BuffsTemplate_Endcondition__default_instance_;
    new (ptr) ::Config::BuffsTemplate_Endcondition_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuffsTemplate_Endcondition__protos_2fBuffsTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BuffsTemplate_Endcondition__protos_2fBuffsTemplate_2eproto}, {}};

static void InitDefaultsscc_info_BuffsTemplate_Searchtarget__protos_2fBuffsTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_BuffsTemplate_Searchtarget__default_instance_;
    new (ptr) ::Config::BuffsTemplate_Searchtarget_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuffsTemplate_Searchtarget__protos_2fBuffsTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BuffsTemplate_Searchtarget__protos_2fBuffsTemplate_2eproto}, {}};

static void InitDefaultsscc_info_BuffsTemplate_Stacklimit__protos_2fBuffsTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_BuffsTemplate_Stacklimit__default_instance_;
    new (ptr) ::Config::BuffsTemplate_Stacklimit_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuffsTemplate_Stacklimit__protos_2fBuffsTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BuffsTemplate_Stacklimit__protos_2fBuffsTemplate_2eproto}, {}};

static void InitDefaultsscc_info_BuffsTemplate_Trigger__protos_2fBuffsTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_BuffsTemplate_Trigger__default_instance_;
    new (ptr) ::Config::BuffsTemplate_Trigger_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BuffsTemplate_Trigger__protos_2fBuffsTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BuffsTemplate_Trigger__protos_2fBuffsTemplate_2eproto}, {}};

static void InitDefaultsscc_info_BuffsTemplateList_protos_2fBuffsTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_BuffsTemplateList_default_instance_;
    new (ptr) ::Config::BuffsTemplateList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BuffsTemplateList_protos_2fBuffsTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_BuffsTemplateList_protos_2fBuffsTemplate_2eproto}, {
      &scc_info_BuffsTemplate_protos_2fBuffsTemplate_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_protos_2fBuffsTemplate_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_protos_2fBuffsTemplate_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_protos_2fBuffsTemplate_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_protos_2fBuffsTemplate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Stacklimit_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Stacklimit_, type_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Stacklimit_, num_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Stacklimit_, time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Cover_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Cover_, typeid__),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Cover_, condition_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Cover_, num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Trigger_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Trigger_, center_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Trigger_, type_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Trigger_, param1_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Trigger_, param2_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Trigger_, param3_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Trigger_, param4_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Searchtarget_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Searchtarget_, type_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Searchtarget_, x_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Searchtarget_, y_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Searchtarget_, condition1_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Searchtarget_, condition2_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Searchtarget_, num_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Searchtarget_, kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Action_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Action_, action_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Action_, type_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Action_, num1_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Action_, num2_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Action_, num3_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Action_, num4_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Endcondition_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Endcondition_, triggertype_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Endcondition_, num1_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Endcondition_, num2_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate_Endcondition_, num3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, id_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, group_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, type_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, kind_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, lasttime_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, stacklimit_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, cover_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, trigger_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, probility_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, searchtarget_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, actions_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, endcondition_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, isowntext_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, effectids_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, powers_),
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplate, icon_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplateList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::BuffsTemplateList, buffss_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Config::BuffsTemplate_Stacklimit_)},
  { 8, -1, sizeof(::Config::BuffsTemplate_Cover_)},
  { 16, -1, sizeof(::Config::BuffsTemplate_Trigger_)},
  { 27, -1, sizeof(::Config::BuffsTemplate_Searchtarget_)},
  { 39, -1, sizeof(::Config::BuffsTemplate_Action_)},
  { 50, -1, sizeof(::Config::BuffsTemplate_Endcondition_)},
  { 59, -1, sizeof(::Config::BuffsTemplate)},
  { 80, -1, sizeof(::Config::BuffsTemplateList)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_BuffsTemplate_Stacklimit__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_BuffsTemplate_Cover__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_BuffsTemplate_Trigger__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_BuffsTemplate_Searchtarget__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_BuffsTemplate_Action__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_BuffsTemplate_Endcondition__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_BuffsTemplate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_BuffsTemplateList_default_instance_),
};

const char descriptor_table_protodef_protos_2fBuffsTemplate_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032protos/BuffsTemplate.proto\022\006Config\"\357\007\n"
  "\rBuffsTemplate\022\n\n\002Id\030\001 \001(\005\022\r\n\005Group\030\002 \001("
  "\005\022\014\n\004Type\030\003 \001(\005\022\014\n\004Kind\030\004 \001(\005\022\020\n\010LastTim"
  "e\030\005 \001(\005\0225\n\nStackLimit\030\006 \001(\0132!.Config.Buf"
  "fsTemplate.Stacklimit_\022+\n\005Cover\030\007 \001(\0132\034."
  "Config.BuffsTemplate.Cover_\022/\n\007Trigger\030\010"
  " \001(\0132\036.Config.BuffsTemplate.Trigger_\022\021\n\t"
  "Probility\030\t \001(\005\0229\n\014SearchTarget\030\n \001(\0132#."
  "Config.BuffsTemplate.Searchtarget_\022.\n\007Ac"
  "tions\030\013 \003(\0132\035.Config.BuffsTemplate.Actio"
  "n_\0229\n\014EndCondition\030\014 \001(\0132#.Config.BuffsT"
  "emplate.Endcondition_\022\021\n\tIsOwnText\030\r \001(\010"
  "\022\021\n\tEffectIds\030\016 \003(\005\022\016\n\006Powers\030\017 \003(\001\022\014\n\004I"
  "con\030\020 \001(\t\0326\n\013Stacklimit_\022\014\n\004Type\030\001 \001(\005\022\013"
  "\n\003Num\030\002 \001(\005\022\014\n\004Time\030\003 \001(\005\0328\n\006Cover_\022\016\n\006T"
  "ypeId\030\001 \001(\005\022\021\n\tCondition\030\002 \001(\005\022\013\n\003Num\030\003 "
  "\001(\005\032h\n\010Trigger_\022\016\n\006Center\030\001 \001(\005\022\014\n\004Type\030"
  "\002 \001(\005\022\016\n\006Param1\030\003 \001(\005\022\016\n\006Param2\030\004 \001(\005\022\016\n"
  "\006Param3\030\005 \001(\005\022\016\n\006Param4\030\006 \001(\005\032v\n\rSearcht"
  "arget_\022\014\n\004Type\030\001 \001(\005\022\t\n\001X\030\002 \001(\005\022\t\n\001Y\030\003 \001"
  "(\005\022\022\n\nCondition1\030\004 \001(\005\022\022\n\nCondition2\030\005 \001"
  "(\005\022\013\n\003Num\030\006 \001(\005\022\014\n\004Kind\030\007 \001(\005\032_\n\007Action_"
  "\022\016\n\006Action\030\001 \001(\005\022\014\n\004Type\030\002 \001(\005\022\014\n\004Num1\030\003"
  " \001(\005\022\014\n\004Num2\030\004 \001(\005\022\014\n\004Num3\030\005 \001(\005\022\014\n\004Num4"
  "\030\006 \001(\005\032N\n\rEndcondition_\022\023\n\013TriggerType\030\001"
  " \001(\005\022\014\n\004Num1\030\002 \001(\005\022\014\n\004Num2\030\003 \001(\005\022\014\n\004Num3"
  "\030\004 \001(\005\":\n\021BuffsTemplateList\022%\n\006Buffss\030\001 "
  "\003(\0132\025.Config.BuffsTemplateb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_protos_2fBuffsTemplate_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_protos_2fBuffsTemplate_2eproto_sccs[8] = {
  &scc_info_BuffsTemplate_protos_2fBuffsTemplate_2eproto.base,
  &scc_info_BuffsTemplate_Action__protos_2fBuffsTemplate_2eproto.base,
  &scc_info_BuffsTemplate_Cover__protos_2fBuffsTemplate_2eproto.base,
  &scc_info_BuffsTemplate_Endcondition__protos_2fBuffsTemplate_2eproto.base,
  &scc_info_BuffsTemplate_Searchtarget__protos_2fBuffsTemplate_2eproto.base,
  &scc_info_BuffsTemplate_Stacklimit__protos_2fBuffsTemplate_2eproto.base,
  &scc_info_BuffsTemplate_Trigger__protos_2fBuffsTemplate_2eproto.base,
  &scc_info_BuffsTemplateList_protos_2fBuffsTemplate_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_protos_2fBuffsTemplate_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protos_2fBuffsTemplate_2eproto = {
  false, false, descriptor_table_protodef_protos_2fBuffsTemplate_2eproto, "protos/BuffsTemplate.proto", 1114,
  &descriptor_table_protos_2fBuffsTemplate_2eproto_once, descriptor_table_protos_2fBuffsTemplate_2eproto_sccs, descriptor_table_protos_2fBuffsTemplate_2eproto_deps, 8, 0,
  schemas, file_default_instances, TableStruct_protos_2fBuffsTemplate_2eproto::offsets,
  file_level_metadata_protos_2fBuffsTemplate_2eproto, 8, file_level_enum_descriptors_protos_2fBuffsTemplate_2eproto, file_level_service_descriptors_protos_2fBuffsTemplate_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protos_2fBuffsTemplate_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_protos_2fBuffsTemplate_2eproto)), true);
namespace Config {

// ===================================================================

class BuffsTemplate_Stacklimit_::_Internal {
 public:
};

BuffsTemplate_Stacklimit_::BuffsTemplate_Stacklimit_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.BuffsTemplate.Stacklimit_)
}
BuffsTemplate_Stacklimit_::BuffsTemplate_Stacklimit_(const BuffsTemplate_Stacklimit_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&type_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:Config.BuffsTemplate.Stacklimit_)
}

void BuffsTemplate_Stacklimit_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&type_)) + sizeof(time_));
}

BuffsTemplate_Stacklimit_::~BuffsTemplate_Stacklimit_() {
  // @@protoc_insertion_point(destructor:Config.BuffsTemplate.Stacklimit_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BuffsTemplate_Stacklimit_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BuffsTemplate_Stacklimit_::ArenaDtor(void* object) {
  BuffsTemplate_Stacklimit_* _this = reinterpret_cast< BuffsTemplate_Stacklimit_* >(object);
  (void)_this;
}
void BuffsTemplate_Stacklimit_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuffsTemplate_Stacklimit_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BuffsTemplate_Stacklimit_& BuffsTemplate_Stacklimit_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BuffsTemplate_Stacklimit__protos_2fBuffsTemplate_2eproto.base);
  return *internal_default_instance();
}


void BuffsTemplate_Stacklimit_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.BuffsTemplate.Stacklimit_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&type_)) + sizeof(time_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuffsTemplate_Stacklimit_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BuffsTemplate_Stacklimit_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.BuffsTemplate.Stacklimit_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_num(), target);
  }

  // int32 Time = 3;
  if (this->time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.BuffsTemplate.Stacklimit_)
  return target;
}

size_t BuffsTemplate_Stacklimit_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.BuffsTemplate.Stacklimit_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num());
  }

  // int32 Time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_time());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuffsTemplate_Stacklimit_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.BuffsTemplate.Stacklimit_)
  GOOGLE_DCHECK_NE(&from, this);
  const BuffsTemplate_Stacklimit_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BuffsTemplate_Stacklimit_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.BuffsTemplate.Stacklimit_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.BuffsTemplate.Stacklimit_)
    MergeFrom(*source);
  }
}

void BuffsTemplate_Stacklimit_::MergeFrom(const BuffsTemplate_Stacklimit_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.BuffsTemplate.Stacklimit_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.num() != 0) {
    _internal_set_num(from._internal_num());
  }
  if (from.time() != 0) {
    _internal_set_time(from._internal_time());
  }
}

void BuffsTemplate_Stacklimit_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.BuffsTemplate.Stacklimit_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffsTemplate_Stacklimit_::CopyFrom(const BuffsTemplate_Stacklimit_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.BuffsTemplate.Stacklimit_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffsTemplate_Stacklimit_::IsInitialized() const {
  return true;
}

void BuffsTemplate_Stacklimit_::InternalSwap(BuffsTemplate_Stacklimit_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BuffsTemplate_Stacklimit_, time_)
      + sizeof(BuffsTemplate_Stacklimit_::time_)
      - PROTOBUF_FIELD_OFFSET(BuffsTemplate_Stacklimit_, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BuffsTemplate_Stacklimit_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BuffsTemplate_Cover_::_Internal {
 public:
};

BuffsTemplate_Cover_::BuffsTemplate_Cover_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.BuffsTemplate.Cover_)
}
BuffsTemplate_Cover_::BuffsTemplate_Cover_(const BuffsTemplate_Cover_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&typeid__, &from.typeid__,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&typeid__)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:Config.BuffsTemplate.Cover_)
}

void BuffsTemplate_Cover_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&typeid__) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&typeid__)) + sizeof(num_));
}

BuffsTemplate_Cover_::~BuffsTemplate_Cover_() {
  // @@protoc_insertion_point(destructor:Config.BuffsTemplate.Cover_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BuffsTemplate_Cover_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BuffsTemplate_Cover_::ArenaDtor(void* object) {
  BuffsTemplate_Cover_* _this = reinterpret_cast< BuffsTemplate_Cover_* >(object);
  (void)_this;
}
void BuffsTemplate_Cover_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuffsTemplate_Cover_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BuffsTemplate_Cover_& BuffsTemplate_Cover_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BuffsTemplate_Cover__protos_2fBuffsTemplate_2eproto.base);
  return *internal_default_instance();
}


void BuffsTemplate_Cover_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.BuffsTemplate.Cover_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&typeid__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&typeid__)) + sizeof(num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuffsTemplate_Cover_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 TypeId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          typeid__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Condition = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          condition_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BuffsTemplate_Cover_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.BuffsTemplate.Cover_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 TypeId = 1;
  if (this->typeid_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_typeid_(), target);
  }

  // int32 Condition = 2;
  if (this->condition() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_condition(), target);
  }

  // int32 Num = 3;
  if (this->num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.BuffsTemplate.Cover_)
  return target;
}

size_t BuffsTemplate_Cover_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.BuffsTemplate.Cover_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 TypeId = 1;
  if (this->typeid_() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_typeid_());
  }

  // int32 Condition = 2;
  if (this->condition() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_condition());
  }

  // int32 Num = 3;
  if (this->num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuffsTemplate_Cover_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.BuffsTemplate.Cover_)
  GOOGLE_DCHECK_NE(&from, this);
  const BuffsTemplate_Cover_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BuffsTemplate_Cover_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.BuffsTemplate.Cover_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.BuffsTemplate.Cover_)
    MergeFrom(*source);
  }
}

void BuffsTemplate_Cover_::MergeFrom(const BuffsTemplate_Cover_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.BuffsTemplate.Cover_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.typeid_() != 0) {
    _internal_set_typeid_(from._internal_typeid_());
  }
  if (from.condition() != 0) {
    _internal_set_condition(from._internal_condition());
  }
  if (from.num() != 0) {
    _internal_set_num(from._internal_num());
  }
}

void BuffsTemplate_Cover_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.BuffsTemplate.Cover_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffsTemplate_Cover_::CopyFrom(const BuffsTemplate_Cover_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.BuffsTemplate.Cover_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffsTemplate_Cover_::IsInitialized() const {
  return true;
}

void BuffsTemplate_Cover_::InternalSwap(BuffsTemplate_Cover_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BuffsTemplate_Cover_, num_)
      + sizeof(BuffsTemplate_Cover_::num_)
      - PROTOBUF_FIELD_OFFSET(BuffsTemplate_Cover_, typeid__)>(
          reinterpret_cast<char*>(&typeid__),
          reinterpret_cast<char*>(&other->typeid__));
}

::PROTOBUF_NAMESPACE_ID::Metadata BuffsTemplate_Cover_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BuffsTemplate_Trigger_::_Internal {
 public:
};

BuffsTemplate_Trigger_::BuffsTemplate_Trigger_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.BuffsTemplate.Trigger_)
}
BuffsTemplate_Trigger_::BuffsTemplate_Trigger_(const BuffsTemplate_Trigger_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&center_, &from.center_,
    static_cast<size_t>(reinterpret_cast<char*>(&param4_) -
    reinterpret_cast<char*>(&center_)) + sizeof(param4_));
  // @@protoc_insertion_point(copy_constructor:Config.BuffsTemplate.Trigger_)
}

void BuffsTemplate_Trigger_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&center_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&param4_) -
      reinterpret_cast<char*>(&center_)) + sizeof(param4_));
}

BuffsTemplate_Trigger_::~BuffsTemplate_Trigger_() {
  // @@protoc_insertion_point(destructor:Config.BuffsTemplate.Trigger_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BuffsTemplate_Trigger_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BuffsTemplate_Trigger_::ArenaDtor(void* object) {
  BuffsTemplate_Trigger_* _this = reinterpret_cast< BuffsTemplate_Trigger_* >(object);
  (void)_this;
}
void BuffsTemplate_Trigger_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuffsTemplate_Trigger_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BuffsTemplate_Trigger_& BuffsTemplate_Trigger_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BuffsTemplate_Trigger__protos_2fBuffsTemplate_2eproto.base);
  return *internal_default_instance();
}


void BuffsTemplate_Trigger_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.BuffsTemplate.Trigger_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&center_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param4_) -
      reinterpret_cast<char*>(&center_)) + sizeof(param4_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuffsTemplate_Trigger_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Center = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          center_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Param1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          param1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Param2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          param2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Param3 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          param3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Param4 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          param4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BuffsTemplate_Trigger_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.BuffsTemplate.Trigger_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Center = 1;
  if (this->center() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_center(), target);
  }

  // int32 Type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_type(), target);
  }

  // int32 Param1 = 3;
  if (this->param1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_param1(), target);
  }

  // int32 Param2 = 4;
  if (this->param2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_param2(), target);
  }

  // int32 Param3 = 5;
  if (this->param3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_param3(), target);
  }

  // int32 Param4 = 6;
  if (this->param4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_param4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.BuffsTemplate.Trigger_)
  return target;
}

size_t BuffsTemplate_Trigger_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.BuffsTemplate.Trigger_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Center = 1;
  if (this->center() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_center());
  }

  // int32 Type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // int32 Param1 = 3;
  if (this->param1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_param1());
  }

  // int32 Param2 = 4;
  if (this->param2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_param2());
  }

  // int32 Param3 = 5;
  if (this->param3() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_param3());
  }

  // int32 Param4 = 6;
  if (this->param4() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_param4());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuffsTemplate_Trigger_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.BuffsTemplate.Trigger_)
  GOOGLE_DCHECK_NE(&from, this);
  const BuffsTemplate_Trigger_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BuffsTemplate_Trigger_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.BuffsTemplate.Trigger_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.BuffsTemplate.Trigger_)
    MergeFrom(*source);
  }
}

void BuffsTemplate_Trigger_::MergeFrom(const BuffsTemplate_Trigger_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.BuffsTemplate.Trigger_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.center() != 0) {
    _internal_set_center(from._internal_center());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.param1() != 0) {
    _internal_set_param1(from._internal_param1());
  }
  if (from.param2() != 0) {
    _internal_set_param2(from._internal_param2());
  }
  if (from.param3() != 0) {
    _internal_set_param3(from._internal_param3());
  }
  if (from.param4() != 0) {
    _internal_set_param4(from._internal_param4());
  }
}

void BuffsTemplate_Trigger_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.BuffsTemplate.Trigger_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffsTemplate_Trigger_::CopyFrom(const BuffsTemplate_Trigger_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.BuffsTemplate.Trigger_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffsTemplate_Trigger_::IsInitialized() const {
  return true;
}

void BuffsTemplate_Trigger_::InternalSwap(BuffsTemplate_Trigger_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BuffsTemplate_Trigger_, param4_)
      + sizeof(BuffsTemplate_Trigger_::param4_)
      - PROTOBUF_FIELD_OFFSET(BuffsTemplate_Trigger_, center_)>(
          reinterpret_cast<char*>(&center_),
          reinterpret_cast<char*>(&other->center_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BuffsTemplate_Trigger_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BuffsTemplate_Searchtarget_::_Internal {
 public:
};

BuffsTemplate_Searchtarget_::BuffsTemplate_Searchtarget_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.BuffsTemplate.Searchtarget_)
}
BuffsTemplate_Searchtarget_::BuffsTemplate_Searchtarget_(const BuffsTemplate_Searchtarget_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
    reinterpret_cast<char*>(&type_)) + sizeof(kind_));
  // @@protoc_insertion_point(copy_constructor:Config.BuffsTemplate.Searchtarget_)
}

void BuffsTemplate_Searchtarget_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&type_)) + sizeof(kind_));
}

BuffsTemplate_Searchtarget_::~BuffsTemplate_Searchtarget_() {
  // @@protoc_insertion_point(destructor:Config.BuffsTemplate.Searchtarget_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BuffsTemplate_Searchtarget_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BuffsTemplate_Searchtarget_::ArenaDtor(void* object) {
  BuffsTemplate_Searchtarget_* _this = reinterpret_cast< BuffsTemplate_Searchtarget_* >(object);
  (void)_this;
}
void BuffsTemplate_Searchtarget_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuffsTemplate_Searchtarget_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BuffsTemplate_Searchtarget_& BuffsTemplate_Searchtarget_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BuffsTemplate_Searchtarget__protos_2fBuffsTemplate_2eproto.base);
  return *internal_default_instance();
}


void BuffsTemplate_Searchtarget_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.BuffsTemplate.Searchtarget_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&type_)) + sizeof(kind_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuffsTemplate_Searchtarget_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 X = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Condition1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          condition1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Condition2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          condition2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Kind = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          kind_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BuffsTemplate_Searchtarget_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.BuffsTemplate.Searchtarget_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  // int32 X = 2;
  if (this->x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_x(), target);
  }

  // int32 Y = 3;
  if (this->y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_y(), target);
  }

  // int32 Condition1 = 4;
  if (this->condition1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_condition1(), target);
  }

  // int32 Condition2 = 5;
  if (this->condition2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_condition2(), target);
  }

  // int32 Num = 6;
  if (this->num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_num(), target);
  }

  // int32 Kind = 7;
  if (this->kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_kind(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.BuffsTemplate.Searchtarget_)
  return target;
}

size_t BuffsTemplate_Searchtarget_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.BuffsTemplate.Searchtarget_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // int32 X = 2;
  if (this->x() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_x());
  }

  // int32 Y = 3;
  if (this->y() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_y());
  }

  // int32 Condition1 = 4;
  if (this->condition1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_condition1());
  }

  // int32 Condition2 = 5;
  if (this->condition2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_condition2());
  }

  // int32 Num = 6;
  if (this->num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num());
  }

  // int32 Kind = 7;
  if (this->kind() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_kind());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuffsTemplate_Searchtarget_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.BuffsTemplate.Searchtarget_)
  GOOGLE_DCHECK_NE(&from, this);
  const BuffsTemplate_Searchtarget_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BuffsTemplate_Searchtarget_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.BuffsTemplate.Searchtarget_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.BuffsTemplate.Searchtarget_)
    MergeFrom(*source);
  }
}

void BuffsTemplate_Searchtarget_::MergeFrom(const BuffsTemplate_Searchtarget_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.BuffsTemplate.Searchtarget_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.x() != 0) {
    _internal_set_x(from._internal_x());
  }
  if (from.y() != 0) {
    _internal_set_y(from._internal_y());
  }
  if (from.condition1() != 0) {
    _internal_set_condition1(from._internal_condition1());
  }
  if (from.condition2() != 0) {
    _internal_set_condition2(from._internal_condition2());
  }
  if (from.num() != 0) {
    _internal_set_num(from._internal_num());
  }
  if (from.kind() != 0) {
    _internal_set_kind(from._internal_kind());
  }
}

void BuffsTemplate_Searchtarget_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.BuffsTemplate.Searchtarget_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffsTemplate_Searchtarget_::CopyFrom(const BuffsTemplate_Searchtarget_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.BuffsTemplate.Searchtarget_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffsTemplate_Searchtarget_::IsInitialized() const {
  return true;
}

void BuffsTemplate_Searchtarget_::InternalSwap(BuffsTemplate_Searchtarget_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BuffsTemplate_Searchtarget_, kind_)
      + sizeof(BuffsTemplate_Searchtarget_::kind_)
      - PROTOBUF_FIELD_OFFSET(BuffsTemplate_Searchtarget_, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BuffsTemplate_Searchtarget_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BuffsTemplate_Action_::_Internal {
 public:
};

BuffsTemplate_Action_::BuffsTemplate_Action_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.BuffsTemplate.Action_)
}
BuffsTemplate_Action_::BuffsTemplate_Action_(const BuffsTemplate_Action_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&action_, &from.action_,
    static_cast<size_t>(reinterpret_cast<char*>(&num4_) -
    reinterpret_cast<char*>(&action_)) + sizeof(num4_));
  // @@protoc_insertion_point(copy_constructor:Config.BuffsTemplate.Action_)
}

void BuffsTemplate_Action_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&action_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&num4_) -
      reinterpret_cast<char*>(&action_)) + sizeof(num4_));
}

BuffsTemplate_Action_::~BuffsTemplate_Action_() {
  // @@protoc_insertion_point(destructor:Config.BuffsTemplate.Action_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BuffsTemplate_Action_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BuffsTemplate_Action_::ArenaDtor(void* object) {
  BuffsTemplate_Action_* _this = reinterpret_cast< BuffsTemplate_Action_* >(object);
  (void)_this;
}
void BuffsTemplate_Action_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuffsTemplate_Action_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BuffsTemplate_Action_& BuffsTemplate_Action_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BuffsTemplate_Action__protos_2fBuffsTemplate_2eproto.base);
  return *internal_default_instance();
}


void BuffsTemplate_Action_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.BuffsTemplate.Action_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num4_) -
      reinterpret_cast<char*>(&action_)) + sizeof(num4_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuffsTemplate_Action_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          action_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          num1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          num2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num3 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          num3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num4 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          num4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BuffsTemplate_Action_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.BuffsTemplate.Action_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Action = 1;
  if (this->action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_action(), target);
  }

  // int32 Type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_type(), target);
  }

  // int32 Num1 = 3;
  if (this->num1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_num1(), target);
  }

  // int32 Num2 = 4;
  if (this->num2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_num2(), target);
  }

  // int32 Num3 = 5;
  if (this->num3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_num3(), target);
  }

  // int32 Num4 = 6;
  if (this->num4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_num4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.BuffsTemplate.Action_)
  return target;
}

size_t BuffsTemplate_Action_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.BuffsTemplate.Action_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Action = 1;
  if (this->action() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_action());
  }

  // int32 Type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // int32 Num1 = 3;
  if (this->num1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num1());
  }

  // int32 Num2 = 4;
  if (this->num2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num2());
  }

  // int32 Num3 = 5;
  if (this->num3() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num3());
  }

  // int32 Num4 = 6;
  if (this->num4() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num4());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuffsTemplate_Action_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.BuffsTemplate.Action_)
  GOOGLE_DCHECK_NE(&from, this);
  const BuffsTemplate_Action_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BuffsTemplate_Action_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.BuffsTemplate.Action_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.BuffsTemplate.Action_)
    MergeFrom(*source);
  }
}

void BuffsTemplate_Action_::MergeFrom(const BuffsTemplate_Action_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.BuffsTemplate.Action_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action() != 0) {
    _internal_set_action(from._internal_action());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.num1() != 0) {
    _internal_set_num1(from._internal_num1());
  }
  if (from.num2() != 0) {
    _internal_set_num2(from._internal_num2());
  }
  if (from.num3() != 0) {
    _internal_set_num3(from._internal_num3());
  }
  if (from.num4() != 0) {
    _internal_set_num4(from._internal_num4());
  }
}

void BuffsTemplate_Action_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.BuffsTemplate.Action_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffsTemplate_Action_::CopyFrom(const BuffsTemplate_Action_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.BuffsTemplate.Action_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffsTemplate_Action_::IsInitialized() const {
  return true;
}

void BuffsTemplate_Action_::InternalSwap(BuffsTemplate_Action_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BuffsTemplate_Action_, num4_)
      + sizeof(BuffsTemplate_Action_::num4_)
      - PROTOBUF_FIELD_OFFSET(BuffsTemplate_Action_, action_)>(
          reinterpret_cast<char*>(&action_),
          reinterpret_cast<char*>(&other->action_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BuffsTemplate_Action_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BuffsTemplate_Endcondition_::_Internal {
 public:
};

BuffsTemplate_Endcondition_::BuffsTemplate_Endcondition_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.BuffsTemplate.Endcondition_)
}
BuffsTemplate_Endcondition_::BuffsTemplate_Endcondition_(const BuffsTemplate_Endcondition_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&triggertype_, &from.triggertype_,
    static_cast<size_t>(reinterpret_cast<char*>(&num3_) -
    reinterpret_cast<char*>(&triggertype_)) + sizeof(num3_));
  // @@protoc_insertion_point(copy_constructor:Config.BuffsTemplate.Endcondition_)
}

void BuffsTemplate_Endcondition_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&triggertype_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&num3_) -
      reinterpret_cast<char*>(&triggertype_)) + sizeof(num3_));
}

BuffsTemplate_Endcondition_::~BuffsTemplate_Endcondition_() {
  // @@protoc_insertion_point(destructor:Config.BuffsTemplate.Endcondition_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BuffsTemplate_Endcondition_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BuffsTemplate_Endcondition_::ArenaDtor(void* object) {
  BuffsTemplate_Endcondition_* _this = reinterpret_cast< BuffsTemplate_Endcondition_* >(object);
  (void)_this;
}
void BuffsTemplate_Endcondition_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuffsTemplate_Endcondition_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BuffsTemplate_Endcondition_& BuffsTemplate_Endcondition_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BuffsTemplate_Endcondition__protos_2fBuffsTemplate_2eproto.base);
  return *internal_default_instance();
}


void BuffsTemplate_Endcondition_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.BuffsTemplate.Endcondition_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&triggertype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num3_) -
      reinterpret_cast<char*>(&triggertype_)) + sizeof(num3_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuffsTemplate_Endcondition_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 TriggerType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          triggertype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          num1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          num2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num3 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          num3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BuffsTemplate_Endcondition_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.BuffsTemplate.Endcondition_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 TriggerType = 1;
  if (this->triggertype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_triggertype(), target);
  }

  // int32 Num1 = 2;
  if (this->num1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_num1(), target);
  }

  // int32 Num2 = 3;
  if (this->num2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_num2(), target);
  }

  // int32 Num3 = 4;
  if (this->num3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_num3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.BuffsTemplate.Endcondition_)
  return target;
}

size_t BuffsTemplate_Endcondition_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.BuffsTemplate.Endcondition_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 TriggerType = 1;
  if (this->triggertype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_triggertype());
  }

  // int32 Num1 = 2;
  if (this->num1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num1());
  }

  // int32 Num2 = 3;
  if (this->num2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num2());
  }

  // int32 Num3 = 4;
  if (this->num3() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num3());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuffsTemplate_Endcondition_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.BuffsTemplate.Endcondition_)
  GOOGLE_DCHECK_NE(&from, this);
  const BuffsTemplate_Endcondition_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BuffsTemplate_Endcondition_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.BuffsTemplate.Endcondition_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.BuffsTemplate.Endcondition_)
    MergeFrom(*source);
  }
}

void BuffsTemplate_Endcondition_::MergeFrom(const BuffsTemplate_Endcondition_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.BuffsTemplate.Endcondition_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.triggertype() != 0) {
    _internal_set_triggertype(from._internal_triggertype());
  }
  if (from.num1() != 0) {
    _internal_set_num1(from._internal_num1());
  }
  if (from.num2() != 0) {
    _internal_set_num2(from._internal_num2());
  }
  if (from.num3() != 0) {
    _internal_set_num3(from._internal_num3());
  }
}

void BuffsTemplate_Endcondition_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.BuffsTemplate.Endcondition_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffsTemplate_Endcondition_::CopyFrom(const BuffsTemplate_Endcondition_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.BuffsTemplate.Endcondition_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffsTemplate_Endcondition_::IsInitialized() const {
  return true;
}

void BuffsTemplate_Endcondition_::InternalSwap(BuffsTemplate_Endcondition_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BuffsTemplate_Endcondition_, num3_)
      + sizeof(BuffsTemplate_Endcondition_::num3_)
      - PROTOBUF_FIELD_OFFSET(BuffsTemplate_Endcondition_, triggertype_)>(
          reinterpret_cast<char*>(&triggertype_),
          reinterpret_cast<char*>(&other->triggertype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BuffsTemplate_Endcondition_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BuffsTemplate::_Internal {
 public:
  static const ::Config::BuffsTemplate_Stacklimit_& stacklimit(const BuffsTemplate* msg);
  static const ::Config::BuffsTemplate_Cover_& cover(const BuffsTemplate* msg);
  static const ::Config::BuffsTemplate_Trigger_& trigger(const BuffsTemplate* msg);
  static const ::Config::BuffsTemplate_Searchtarget_& searchtarget(const BuffsTemplate* msg);
  static const ::Config::BuffsTemplate_Endcondition_& endcondition(const BuffsTemplate* msg);
};

const ::Config::BuffsTemplate_Stacklimit_&
BuffsTemplate::_Internal::stacklimit(const BuffsTemplate* msg) {
  return *msg->stacklimit_;
}
const ::Config::BuffsTemplate_Cover_&
BuffsTemplate::_Internal::cover(const BuffsTemplate* msg) {
  return *msg->cover_;
}
const ::Config::BuffsTemplate_Trigger_&
BuffsTemplate::_Internal::trigger(const BuffsTemplate* msg) {
  return *msg->trigger_;
}
const ::Config::BuffsTemplate_Searchtarget_&
BuffsTemplate::_Internal::searchtarget(const BuffsTemplate* msg) {
  return *msg->searchtarget_;
}
const ::Config::BuffsTemplate_Endcondition_&
BuffsTemplate::_Internal::endcondition(const BuffsTemplate* msg) {
  return *msg->endcondition_;
}
BuffsTemplate::BuffsTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena),
  effectids_(arena),
  powers_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.BuffsTemplate)
}
BuffsTemplate::BuffsTemplate(const BuffsTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_),
      effectids_(from.effectids_),
      powers_(from.powers_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_icon().empty()) {
    icon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_icon(), 
      GetArena());
  }
  if (from._internal_has_stacklimit()) {
    stacklimit_ = new ::Config::BuffsTemplate_Stacklimit_(*from.stacklimit_);
  } else {
    stacklimit_ = nullptr;
  }
  if (from._internal_has_cover()) {
    cover_ = new ::Config::BuffsTemplate_Cover_(*from.cover_);
  } else {
    cover_ = nullptr;
  }
  if (from._internal_has_trigger()) {
    trigger_ = new ::Config::BuffsTemplate_Trigger_(*from.trigger_);
  } else {
    trigger_ = nullptr;
  }
  if (from._internal_has_searchtarget()) {
    searchtarget_ = new ::Config::BuffsTemplate_Searchtarget_(*from.searchtarget_);
  } else {
    searchtarget_ = nullptr;
  }
  if (from._internal_has_endcondition()) {
    endcondition_ = new ::Config::BuffsTemplate_Endcondition_(*from.endcondition_);
  } else {
    endcondition_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&isowntext_) -
    reinterpret_cast<char*>(&id_)) + sizeof(isowntext_));
  // @@protoc_insertion_point(copy_constructor:Config.BuffsTemplate)
}

void BuffsTemplate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BuffsTemplate_protos_2fBuffsTemplate_2eproto.base);
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&stacklimit_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&isowntext_) -
      reinterpret_cast<char*>(&stacklimit_)) + sizeof(isowntext_));
}

BuffsTemplate::~BuffsTemplate() {
  // @@protoc_insertion_point(destructor:Config.BuffsTemplate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BuffsTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  icon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete stacklimit_;
  if (this != internal_default_instance()) delete cover_;
  if (this != internal_default_instance()) delete trigger_;
  if (this != internal_default_instance()) delete searchtarget_;
  if (this != internal_default_instance()) delete endcondition_;
}

void BuffsTemplate::ArenaDtor(void* object) {
  BuffsTemplate* _this = reinterpret_cast< BuffsTemplate* >(object);
  (void)_this;
}
void BuffsTemplate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuffsTemplate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BuffsTemplate& BuffsTemplate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BuffsTemplate_protos_2fBuffsTemplate_2eproto.base);
  return *internal_default_instance();
}


void BuffsTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.BuffsTemplate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  effectids_.Clear();
  powers_.Clear();
  icon_.ClearToEmpty();
  if (GetArena() == nullptr && stacklimit_ != nullptr) {
    delete stacklimit_;
  }
  stacklimit_ = nullptr;
  if (GetArena() == nullptr && cover_ != nullptr) {
    delete cover_;
  }
  cover_ = nullptr;
  if (GetArena() == nullptr && trigger_ != nullptr) {
    delete trigger_;
  }
  trigger_ = nullptr;
  if (GetArena() == nullptr && searchtarget_ != nullptr) {
    delete searchtarget_;
  }
  searchtarget_ = nullptr;
  if (GetArena() == nullptr && endcondition_ != nullptr) {
    delete endcondition_;
  }
  endcondition_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isowntext_) -
      reinterpret_cast<char*>(&id_)) + sizeof(isowntext_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuffsTemplate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Group = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          group_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Kind = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          kind_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 LastTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          lasttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Config.BuffsTemplate.Stacklimit_ StackLimit = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacklimit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Config.BuffsTemplate.Cover_ Cover = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_cover(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Config.BuffsTemplate.Trigger_ Trigger = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_trigger(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Probility = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          probility_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Config.BuffsTemplate.Searchtarget_ SearchTarget = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_searchtarget(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Config.BuffsTemplate.Action_ Actions = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_actions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // .Config.BuffsTemplate.Endcondition_ EndCondition = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_endcondition(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool IsOwnText = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          isowntext_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 EffectIds = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_effectids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112) {
          _internal_add_effectids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated double Powers = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_powers(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 121) {
          _internal_add_powers(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string Icon = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_icon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Config.BuffsTemplate.Icon"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BuffsTemplate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.BuffsTemplate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 Group = 2;
  if (this->group() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_group(), target);
  }

  // int32 Type = 3;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_type(), target);
  }

  // int32 Kind = 4;
  if (this->kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_kind(), target);
  }

  // int32 LastTime = 5;
  if (this->lasttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_lasttime(), target);
  }

  // .Config.BuffsTemplate.Stacklimit_ StackLimit = 6;
  if (this->has_stacklimit()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::stacklimit(this), target, stream);
  }

  // .Config.BuffsTemplate.Cover_ Cover = 7;
  if (this->has_cover()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::cover(this), target, stream);
  }

  // .Config.BuffsTemplate.Trigger_ Trigger = 8;
  if (this->has_trigger()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::trigger(this), target, stream);
  }

  // int32 Probility = 9;
  if (this->probility() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_probility(), target);
  }

  // .Config.BuffsTemplate.Searchtarget_ SearchTarget = 10;
  if (this->has_searchtarget()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::searchtarget(this), target, stream);
  }

  // repeated .Config.BuffsTemplate.Action_ Actions = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_actions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, this->_internal_actions(i), target, stream);
  }

  // .Config.BuffsTemplate.Endcondition_ EndCondition = 12;
  if (this->has_endcondition()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::endcondition(this), target, stream);
  }

  // bool IsOwnText = 13;
  if (this->isowntext() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(13, this->_internal_isowntext(), target);
  }

  // repeated int32 EffectIds = 14;
  {
    int byte_size = _effectids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          14, _internal_effectids(), byte_size, target);
    }
  }

  // repeated double Powers = 15;
  if (this->_internal_powers_size() > 0) {
    target = stream->WriteFixedPacked(15, _internal_powers(), target);
  }

  // string Icon = 16;
  if (this->icon().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_icon().data(), static_cast<int>(this->_internal_icon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Config.BuffsTemplate.Icon");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_icon(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.BuffsTemplate)
  return target;
}

size_t BuffsTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.BuffsTemplate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Config.BuffsTemplate.Action_ Actions = 11;
  total_size += 1UL * this->_internal_actions_size();
  for (const auto& msg : this->actions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated int32 EffectIds = 14;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->effectids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _effectids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated double Powers = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_powers_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _powers_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string Icon = 16;
  if (this->icon().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_icon());
  }

  // .Config.BuffsTemplate.Stacklimit_ StackLimit = 6;
  if (this->has_stacklimit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *stacklimit_);
  }

  // .Config.BuffsTemplate.Cover_ Cover = 7;
  if (this->has_cover()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cover_);
  }

  // .Config.BuffsTemplate.Trigger_ Trigger = 8;
  if (this->has_trigger()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *trigger_);
  }

  // .Config.BuffsTemplate.Searchtarget_ SearchTarget = 10;
  if (this->has_searchtarget()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *searchtarget_);
  }

  // .Config.BuffsTemplate.Endcondition_ EndCondition = 12;
  if (this->has_endcondition()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *endcondition_);
  }

  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 Group = 2;
  if (this->group() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_group());
  }

  // int32 Type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // int32 Kind = 4;
  if (this->kind() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_kind());
  }

  // int32 LastTime = 5;
  if (this->lasttime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_lasttime());
  }

  // int32 Probility = 9;
  if (this->probility() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_probility());
  }

  // bool IsOwnText = 13;
  if (this->isowntext() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuffsTemplate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.BuffsTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  const BuffsTemplate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BuffsTemplate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.BuffsTemplate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.BuffsTemplate)
    MergeFrom(*source);
  }
}

void BuffsTemplate::MergeFrom(const BuffsTemplate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.BuffsTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  effectids_.MergeFrom(from.effectids_);
  powers_.MergeFrom(from.powers_);
  if (from.icon().size() > 0) {
    _internal_set_icon(from._internal_icon());
  }
  if (from.has_stacklimit()) {
    _internal_mutable_stacklimit()->::Config::BuffsTemplate_Stacklimit_::MergeFrom(from._internal_stacklimit());
  }
  if (from.has_cover()) {
    _internal_mutable_cover()->::Config::BuffsTemplate_Cover_::MergeFrom(from._internal_cover());
  }
  if (from.has_trigger()) {
    _internal_mutable_trigger()->::Config::BuffsTemplate_Trigger_::MergeFrom(from._internal_trigger());
  }
  if (from.has_searchtarget()) {
    _internal_mutable_searchtarget()->::Config::BuffsTemplate_Searchtarget_::MergeFrom(from._internal_searchtarget());
  }
  if (from.has_endcondition()) {
    _internal_mutable_endcondition()->::Config::BuffsTemplate_Endcondition_::MergeFrom(from._internal_endcondition());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.group() != 0) {
    _internal_set_group(from._internal_group());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.kind() != 0) {
    _internal_set_kind(from._internal_kind());
  }
  if (from.lasttime() != 0) {
    _internal_set_lasttime(from._internal_lasttime());
  }
  if (from.probility() != 0) {
    _internal_set_probility(from._internal_probility());
  }
  if (from.isowntext() != 0) {
    _internal_set_isowntext(from._internal_isowntext());
  }
}

void BuffsTemplate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.BuffsTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffsTemplate::CopyFrom(const BuffsTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.BuffsTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffsTemplate::IsInitialized() const {
  return true;
}

void BuffsTemplate::InternalSwap(BuffsTemplate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  effectids_.InternalSwap(&other->effectids_);
  powers_.InternalSwap(&other->powers_);
  icon_.Swap(&other->icon_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BuffsTemplate, isowntext_)
      + sizeof(BuffsTemplate::isowntext_)
      - PROTOBUF_FIELD_OFFSET(BuffsTemplate, stacklimit_)>(
          reinterpret_cast<char*>(&stacklimit_),
          reinterpret_cast<char*>(&other->stacklimit_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BuffsTemplate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BuffsTemplateList::_Internal {
 public:
};

BuffsTemplateList::BuffsTemplateList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  buffss_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.BuffsTemplateList)
}
BuffsTemplateList::BuffsTemplateList(const BuffsTemplateList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      buffss_(from.buffss_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Config.BuffsTemplateList)
}

void BuffsTemplateList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BuffsTemplateList_protos_2fBuffsTemplate_2eproto.base);
}

BuffsTemplateList::~BuffsTemplateList() {
  // @@protoc_insertion_point(destructor:Config.BuffsTemplateList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BuffsTemplateList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BuffsTemplateList::ArenaDtor(void* object) {
  BuffsTemplateList* _this = reinterpret_cast< BuffsTemplateList* >(object);
  (void)_this;
}
void BuffsTemplateList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuffsTemplateList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BuffsTemplateList& BuffsTemplateList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BuffsTemplateList_protos_2fBuffsTemplate_2eproto.base);
  return *internal_default_instance();
}


void BuffsTemplateList::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.BuffsTemplateList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buffss_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuffsTemplateList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Config.BuffsTemplate Buffss = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_buffss(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BuffsTemplateList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.BuffsTemplateList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Config.BuffsTemplate Buffss = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_buffss_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_buffss(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.BuffsTemplateList)
  return target;
}

size_t BuffsTemplateList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.BuffsTemplateList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Config.BuffsTemplate Buffss = 1;
  total_size += 1UL * this->_internal_buffss_size();
  for (const auto& msg : this->buffss_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuffsTemplateList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.BuffsTemplateList)
  GOOGLE_DCHECK_NE(&from, this);
  const BuffsTemplateList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BuffsTemplateList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.BuffsTemplateList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.BuffsTemplateList)
    MergeFrom(*source);
  }
}

void BuffsTemplateList::MergeFrom(const BuffsTemplateList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.BuffsTemplateList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buffss_.MergeFrom(from.buffss_);
}

void BuffsTemplateList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.BuffsTemplateList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffsTemplateList::CopyFrom(const BuffsTemplateList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.BuffsTemplateList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffsTemplateList::IsInitialized() const {
  return true;
}

void BuffsTemplateList::InternalSwap(BuffsTemplateList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  buffss_.InternalSwap(&other->buffss_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BuffsTemplateList::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Config
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Config::BuffsTemplate_Stacklimit_* Arena::CreateMaybeMessage< ::Config::BuffsTemplate_Stacklimit_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::BuffsTemplate_Stacklimit_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::BuffsTemplate_Cover_* Arena::CreateMaybeMessage< ::Config::BuffsTemplate_Cover_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::BuffsTemplate_Cover_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::BuffsTemplate_Trigger_* Arena::CreateMaybeMessage< ::Config::BuffsTemplate_Trigger_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::BuffsTemplate_Trigger_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::BuffsTemplate_Searchtarget_* Arena::CreateMaybeMessage< ::Config::BuffsTemplate_Searchtarget_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::BuffsTemplate_Searchtarget_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::BuffsTemplate_Action_* Arena::CreateMaybeMessage< ::Config::BuffsTemplate_Action_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::BuffsTemplate_Action_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::BuffsTemplate_Endcondition_* Arena::CreateMaybeMessage< ::Config::BuffsTemplate_Endcondition_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::BuffsTemplate_Endcondition_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::BuffsTemplate* Arena::CreateMaybeMessage< ::Config::BuffsTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::BuffsTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::BuffsTemplateList* Arena::CreateMaybeMessage< ::Config::BuffsTemplateList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::BuffsTemplateList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
