// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/DailyTasksTemplate.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fDailyTasksTemplate_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fDailyTasksTemplate_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_protos_2fDailyTasksTemplate_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fDailyTasksTemplate_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protos_2fDailyTasksTemplate_2eproto;
namespace Config {
class DailyTasksTemplate;
class DailyTasksTemplateDefaultTypeInternal;
extern DailyTasksTemplateDefaultTypeInternal _DailyTasksTemplate_default_instance_;
class DailyTasksTemplateList;
class DailyTasksTemplateListDefaultTypeInternal;
extern DailyTasksTemplateListDefaultTypeInternal _DailyTasksTemplateList_default_instance_;
class DailyTasksTemplate_Levelrange_;
class DailyTasksTemplate_Levelrange_DefaultTypeInternal;
extern DailyTasksTemplate_Levelrange_DefaultTypeInternal _DailyTasksTemplate_Levelrange__default_instance_;
class DailyTasksTemplate_Reward_;
class DailyTasksTemplate_Reward_DefaultTypeInternal;
extern DailyTasksTemplate_Reward_DefaultTypeInternal _DailyTasksTemplate_Reward__default_instance_;
class DailyTasksTemplate_Showreward_;
class DailyTasksTemplate_Showreward_DefaultTypeInternal;
extern DailyTasksTemplate_Showreward_DefaultTypeInternal _DailyTasksTemplate_Showreward__default_instance_;
class DailyTasksTemplate_Taskinfo_;
class DailyTasksTemplate_Taskinfo_DefaultTypeInternal;
extern DailyTasksTemplate_Taskinfo_DefaultTypeInternal _DailyTasksTemplate_Taskinfo__default_instance_;
}  // namespace Config
PROTOBUF_NAMESPACE_OPEN
template<> ::Config::DailyTasksTemplate* Arena::CreateMaybeMessage<::Config::DailyTasksTemplate>(Arena*);
template<> ::Config::DailyTasksTemplateList* Arena::CreateMaybeMessage<::Config::DailyTasksTemplateList>(Arena*);
template<> ::Config::DailyTasksTemplate_Levelrange_* Arena::CreateMaybeMessage<::Config::DailyTasksTemplate_Levelrange_>(Arena*);
template<> ::Config::DailyTasksTemplate_Reward_* Arena::CreateMaybeMessage<::Config::DailyTasksTemplate_Reward_>(Arena*);
template<> ::Config::DailyTasksTemplate_Showreward_* Arena::CreateMaybeMessage<::Config::DailyTasksTemplate_Showreward_>(Arena*);
template<> ::Config::DailyTasksTemplate_Taskinfo_* Arena::CreateMaybeMessage<::Config::DailyTasksTemplate_Taskinfo_>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Config {

// ===================================================================

class DailyTasksTemplate_Levelrange_ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Config.DailyTasksTemplate.Levelrange_) */ {
 public:
  inline DailyTasksTemplate_Levelrange_() : DailyTasksTemplate_Levelrange_(nullptr) {}
  virtual ~DailyTasksTemplate_Levelrange_();

  DailyTasksTemplate_Levelrange_(const DailyTasksTemplate_Levelrange_& from);
  DailyTasksTemplate_Levelrange_(DailyTasksTemplate_Levelrange_&& from) noexcept
    : DailyTasksTemplate_Levelrange_() {
    *this = ::std::move(from);
  }

  inline DailyTasksTemplate_Levelrange_& operator=(const DailyTasksTemplate_Levelrange_& from) {
    CopyFrom(from);
    return *this;
  }
  inline DailyTasksTemplate_Levelrange_& operator=(DailyTasksTemplate_Levelrange_&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DailyTasksTemplate_Levelrange_& default_instance();

  static inline const DailyTasksTemplate_Levelrange_* internal_default_instance() {
    return reinterpret_cast<const DailyTasksTemplate_Levelrange_*>(
               &_DailyTasksTemplate_Levelrange__default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DailyTasksTemplate_Levelrange_& a, DailyTasksTemplate_Levelrange_& b) {
    a.Swap(&b);
  }
  inline void Swap(DailyTasksTemplate_Levelrange_* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DailyTasksTemplate_Levelrange_* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DailyTasksTemplate_Levelrange_* New() const final {
    return CreateMaybeMessage<DailyTasksTemplate_Levelrange_>(nullptr);
  }

  DailyTasksTemplate_Levelrange_* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DailyTasksTemplate_Levelrange_>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DailyTasksTemplate_Levelrange_& from);
  void MergeFrom(const DailyTasksTemplate_Levelrange_& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DailyTasksTemplate_Levelrange_* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Config.DailyTasksTemplate.Levelrange_";
  }
  protected:
  explicit DailyTasksTemplate_Levelrange_(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_protos_2fDailyTasksTemplate_2eproto);
    return ::descriptor_table_protos_2fDailyTasksTemplate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
  };
  // int32 Min = 1;
  void clear_min();
  ::PROTOBUF_NAMESPACE_ID::int32 min() const;
  void set_min(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_min() const;
  void _internal_set_min(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Max = 2;
  void clear_max();
  ::PROTOBUF_NAMESPACE_ID::int32 max() const;
  void set_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_max() const;
  void _internal_set_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Config.DailyTasksTemplate.Levelrange_)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 min_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fDailyTasksTemplate_2eproto;
};
// -------------------------------------------------------------------

class DailyTasksTemplate_Taskinfo_ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Config.DailyTasksTemplate.Taskinfo_) */ {
 public:
  inline DailyTasksTemplate_Taskinfo_() : DailyTasksTemplate_Taskinfo_(nullptr) {}
  virtual ~DailyTasksTemplate_Taskinfo_();

  DailyTasksTemplate_Taskinfo_(const DailyTasksTemplate_Taskinfo_& from);
  DailyTasksTemplate_Taskinfo_(DailyTasksTemplate_Taskinfo_&& from) noexcept
    : DailyTasksTemplate_Taskinfo_() {
    *this = ::std::move(from);
  }

  inline DailyTasksTemplate_Taskinfo_& operator=(const DailyTasksTemplate_Taskinfo_& from) {
    CopyFrom(from);
    return *this;
  }
  inline DailyTasksTemplate_Taskinfo_& operator=(DailyTasksTemplate_Taskinfo_&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DailyTasksTemplate_Taskinfo_& default_instance();

  static inline const DailyTasksTemplate_Taskinfo_* internal_default_instance() {
    return reinterpret_cast<const DailyTasksTemplate_Taskinfo_*>(
               &_DailyTasksTemplate_Taskinfo__default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DailyTasksTemplate_Taskinfo_& a, DailyTasksTemplate_Taskinfo_& b) {
    a.Swap(&b);
  }
  inline void Swap(DailyTasksTemplate_Taskinfo_* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DailyTasksTemplate_Taskinfo_* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DailyTasksTemplate_Taskinfo_* New() const final {
    return CreateMaybeMessage<DailyTasksTemplate_Taskinfo_>(nullptr);
  }

  DailyTasksTemplate_Taskinfo_* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DailyTasksTemplate_Taskinfo_>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DailyTasksTemplate_Taskinfo_& from);
  void MergeFrom(const DailyTasksTemplate_Taskinfo_& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DailyTasksTemplate_Taskinfo_* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Config.DailyTasksTemplate.Taskinfo_";
  }
  protected:
  explicit DailyTasksTemplate_Taskinfo_(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_protos_2fDailyTasksTemplate_2eproto);
    return ::descriptor_table_protos_2fDailyTasksTemplate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kParam1FieldNumber = 2,
    kParam2FieldNumber = 3,
    kParam3FieldNumber = 4,
  };
  // int32 Type = 1;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Param1 = 2;
  void clear_param1();
  ::PROTOBUF_NAMESPACE_ID::int32 param1() const;
  void set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param1() const;
  void _internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Param2 = 3;
  void clear_param2();
  ::PROTOBUF_NAMESPACE_ID::int32 param2() const;
  void set_param2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param2() const;
  void _internal_set_param2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Param3 = 4;
  void clear_param3();
  ::PROTOBUF_NAMESPACE_ID::int32 param3() const;
  void set_param3(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param3() const;
  void _internal_set_param3(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Config.DailyTasksTemplate.Taskinfo_)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 param1_;
  ::PROTOBUF_NAMESPACE_ID::int32 param2_;
  ::PROTOBUF_NAMESPACE_ID::int32 param3_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fDailyTasksTemplate_2eproto;
};
// -------------------------------------------------------------------

class DailyTasksTemplate_Reward_ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Config.DailyTasksTemplate.Reward_) */ {
 public:
  inline DailyTasksTemplate_Reward_() : DailyTasksTemplate_Reward_(nullptr) {}
  virtual ~DailyTasksTemplate_Reward_();

  DailyTasksTemplate_Reward_(const DailyTasksTemplate_Reward_& from);
  DailyTasksTemplate_Reward_(DailyTasksTemplate_Reward_&& from) noexcept
    : DailyTasksTemplate_Reward_() {
    *this = ::std::move(from);
  }

  inline DailyTasksTemplate_Reward_& operator=(const DailyTasksTemplate_Reward_& from) {
    CopyFrom(from);
    return *this;
  }
  inline DailyTasksTemplate_Reward_& operator=(DailyTasksTemplate_Reward_&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DailyTasksTemplate_Reward_& default_instance();

  static inline const DailyTasksTemplate_Reward_* internal_default_instance() {
    return reinterpret_cast<const DailyTasksTemplate_Reward_*>(
               &_DailyTasksTemplate_Reward__default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(DailyTasksTemplate_Reward_& a, DailyTasksTemplate_Reward_& b) {
    a.Swap(&b);
  }
  inline void Swap(DailyTasksTemplate_Reward_* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DailyTasksTemplate_Reward_* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DailyTasksTemplate_Reward_* New() const final {
    return CreateMaybeMessage<DailyTasksTemplate_Reward_>(nullptr);
  }

  DailyTasksTemplate_Reward_* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DailyTasksTemplate_Reward_>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DailyTasksTemplate_Reward_& from);
  void MergeFrom(const DailyTasksTemplate_Reward_& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DailyTasksTemplate_Reward_* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Config.DailyTasksTemplate.Reward_";
  }
  protected:
  explicit DailyTasksTemplate_Reward_(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_protos_2fDailyTasksTemplate_2eproto);
    return ::descriptor_table_protos_2fDailyTasksTemplate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kIdFieldNumber = 2,
    kCountFieldNumber = 3,
    kParam1FieldNumber = 4,
  };
  // int32 Type = 1;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Id = 2;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Count = 3;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Param1 = 4;
  void clear_param1();
  ::PROTOBUF_NAMESPACE_ID::int32 param1() const;
  void set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param1() const;
  void _internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Config.DailyTasksTemplate.Reward_)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  ::PROTOBUF_NAMESPACE_ID::int32 param1_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fDailyTasksTemplate_2eproto;
};
// -------------------------------------------------------------------

class DailyTasksTemplate_Showreward_ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Config.DailyTasksTemplate.Showreward_) */ {
 public:
  inline DailyTasksTemplate_Showreward_() : DailyTasksTemplate_Showreward_(nullptr) {}
  virtual ~DailyTasksTemplate_Showreward_();

  DailyTasksTemplate_Showreward_(const DailyTasksTemplate_Showreward_& from);
  DailyTasksTemplate_Showreward_(DailyTasksTemplate_Showreward_&& from) noexcept
    : DailyTasksTemplate_Showreward_() {
    *this = ::std::move(from);
  }

  inline DailyTasksTemplate_Showreward_& operator=(const DailyTasksTemplate_Showreward_& from) {
    CopyFrom(from);
    return *this;
  }
  inline DailyTasksTemplate_Showreward_& operator=(DailyTasksTemplate_Showreward_&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DailyTasksTemplate_Showreward_& default_instance();

  static inline const DailyTasksTemplate_Showreward_* internal_default_instance() {
    return reinterpret_cast<const DailyTasksTemplate_Showreward_*>(
               &_DailyTasksTemplate_Showreward__default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DailyTasksTemplate_Showreward_& a, DailyTasksTemplate_Showreward_& b) {
    a.Swap(&b);
  }
  inline void Swap(DailyTasksTemplate_Showreward_* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DailyTasksTemplate_Showreward_* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DailyTasksTemplate_Showreward_* New() const final {
    return CreateMaybeMessage<DailyTasksTemplate_Showreward_>(nullptr);
  }

  DailyTasksTemplate_Showreward_* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DailyTasksTemplate_Showreward_>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DailyTasksTemplate_Showreward_& from);
  void MergeFrom(const DailyTasksTemplate_Showreward_& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DailyTasksTemplate_Showreward_* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Config.DailyTasksTemplate.Showreward_";
  }
  protected:
  explicit DailyTasksTemplate_Showreward_(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_protos_2fDailyTasksTemplate_2eproto);
    return ::descriptor_table_protos_2fDailyTasksTemplate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kIdFieldNumber = 2,
    kCountFieldNumber = 3,
  };
  // int32 Type = 1;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Id = 2;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Count = 3;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Config.DailyTasksTemplate.Showreward_)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fDailyTasksTemplate_2eproto;
};
// -------------------------------------------------------------------

class DailyTasksTemplate PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Config.DailyTasksTemplate) */ {
 public:
  inline DailyTasksTemplate() : DailyTasksTemplate(nullptr) {}
  virtual ~DailyTasksTemplate();

  DailyTasksTemplate(const DailyTasksTemplate& from);
  DailyTasksTemplate(DailyTasksTemplate&& from) noexcept
    : DailyTasksTemplate() {
    *this = ::std::move(from);
  }

  inline DailyTasksTemplate& operator=(const DailyTasksTemplate& from) {
    CopyFrom(from);
    return *this;
  }
  inline DailyTasksTemplate& operator=(DailyTasksTemplate&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DailyTasksTemplate& default_instance();

  static inline const DailyTasksTemplate* internal_default_instance() {
    return reinterpret_cast<const DailyTasksTemplate*>(
               &_DailyTasksTemplate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DailyTasksTemplate& a, DailyTasksTemplate& b) {
    a.Swap(&b);
  }
  inline void Swap(DailyTasksTemplate* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DailyTasksTemplate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DailyTasksTemplate* New() const final {
    return CreateMaybeMessage<DailyTasksTemplate>(nullptr);
  }

  DailyTasksTemplate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DailyTasksTemplate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DailyTasksTemplate& from);
  void MergeFrom(const DailyTasksTemplate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DailyTasksTemplate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Config.DailyTasksTemplate";
  }
  protected:
  explicit DailyTasksTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_protos_2fDailyTasksTemplate_2eproto);
    return ::descriptor_table_protos_2fDailyTasksTemplate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef DailyTasksTemplate_Levelrange_ Levelrange_;
  typedef DailyTasksTemplate_Taskinfo_ Taskinfo_;
  typedef DailyTasksTemplate_Reward_ Reward_;
  typedef DailyTasksTemplate_Showreward_ Showreward_;

  // accessors -------------------------------------------------------

  enum : int {
    kRewardsFieldNumber = 9,
    kShowRewardsFieldNumber = 10,
    kLevelRangeFieldNumber = 3,
    kTaskInfoFieldNumber = 8,
    kIdFieldNumber = 1,
    kKindFieldNumber = 2,
    kQualityFieldNumber = 4,
    kLevelFieldNumber = 5,
    kShowProgressFieldNumber = 6,
    kAccessIdFieldNumber = 7,
  };
  // repeated .Config.DailyTasksTemplate.Reward_ Rewards = 9;
  int rewards_size() const;
  private:
  int _internal_rewards_size() const;
  public:
  void clear_rewards();
  ::Config::DailyTasksTemplate_Reward_* mutable_rewards(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::DailyTasksTemplate_Reward_ >*
      mutable_rewards();
  private:
  const ::Config::DailyTasksTemplate_Reward_& _internal_rewards(int index) const;
  ::Config::DailyTasksTemplate_Reward_* _internal_add_rewards();
  public:
  const ::Config::DailyTasksTemplate_Reward_& rewards(int index) const;
  ::Config::DailyTasksTemplate_Reward_* add_rewards();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::DailyTasksTemplate_Reward_ >&
      rewards() const;

  // repeated .Config.DailyTasksTemplate.Showreward_ ShowRewards = 10;
  int showrewards_size() const;
  private:
  int _internal_showrewards_size() const;
  public:
  void clear_showrewards();
  ::Config::DailyTasksTemplate_Showreward_* mutable_showrewards(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::DailyTasksTemplate_Showreward_ >*
      mutable_showrewards();
  private:
  const ::Config::DailyTasksTemplate_Showreward_& _internal_showrewards(int index) const;
  ::Config::DailyTasksTemplate_Showreward_* _internal_add_showrewards();
  public:
  const ::Config::DailyTasksTemplate_Showreward_& showrewards(int index) const;
  ::Config::DailyTasksTemplate_Showreward_* add_showrewards();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::DailyTasksTemplate_Showreward_ >&
      showrewards() const;

  // .Config.DailyTasksTemplate.Levelrange_ LevelRange = 3;
  bool has_levelrange() const;
  private:
  bool _internal_has_levelrange() const;
  public:
  void clear_levelrange();
  const ::Config::DailyTasksTemplate_Levelrange_& levelrange() const;
  ::Config::DailyTasksTemplate_Levelrange_* release_levelrange();
  ::Config::DailyTasksTemplate_Levelrange_* mutable_levelrange();
  void set_allocated_levelrange(::Config::DailyTasksTemplate_Levelrange_* levelrange);
  private:
  const ::Config::DailyTasksTemplate_Levelrange_& _internal_levelrange() const;
  ::Config::DailyTasksTemplate_Levelrange_* _internal_mutable_levelrange();
  public:
  void unsafe_arena_set_allocated_levelrange(
      ::Config::DailyTasksTemplate_Levelrange_* levelrange);
  ::Config::DailyTasksTemplate_Levelrange_* unsafe_arena_release_levelrange();

  // .Config.DailyTasksTemplate.Taskinfo_ TaskInfo = 8;
  bool has_taskinfo() const;
  private:
  bool _internal_has_taskinfo() const;
  public:
  void clear_taskinfo();
  const ::Config::DailyTasksTemplate_Taskinfo_& taskinfo() const;
  ::Config::DailyTasksTemplate_Taskinfo_* release_taskinfo();
  ::Config::DailyTasksTemplate_Taskinfo_* mutable_taskinfo();
  void set_allocated_taskinfo(::Config::DailyTasksTemplate_Taskinfo_* taskinfo);
  private:
  const ::Config::DailyTasksTemplate_Taskinfo_& _internal_taskinfo() const;
  ::Config::DailyTasksTemplate_Taskinfo_* _internal_mutable_taskinfo();
  public:
  void unsafe_arena_set_allocated_taskinfo(
      ::Config::DailyTasksTemplate_Taskinfo_* taskinfo);
  ::Config::DailyTasksTemplate_Taskinfo_* unsafe_arena_release_taskinfo();

  // int32 Id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Kind = 2;
  void clear_kind();
  ::PROTOBUF_NAMESPACE_ID::int32 kind() const;
  void set_kind(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_kind() const;
  void _internal_set_kind(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Quality = 4;
  void clear_quality();
  ::PROTOBUF_NAMESPACE_ID::int32 quality() const;
  void set_quality(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_quality() const;
  void _internal_set_quality(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Level = 5;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ShowProgress = 6;
  void clear_showprogress();
  ::PROTOBUF_NAMESPACE_ID::int32 showprogress() const;
  void set_showprogress(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_showprogress() const;
  void _internal_set_showprogress(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 AccessId = 7;
  void clear_accessid();
  ::PROTOBUF_NAMESPACE_ID::int32 accessid() const;
  void set_accessid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_accessid() const;
  void _internal_set_accessid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Config.DailyTasksTemplate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::DailyTasksTemplate_Reward_ > rewards_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::DailyTasksTemplate_Showreward_ > showrewards_;
  ::Config::DailyTasksTemplate_Levelrange_* levelrange_;
  ::Config::DailyTasksTemplate_Taskinfo_* taskinfo_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 kind_;
  ::PROTOBUF_NAMESPACE_ID::int32 quality_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  ::PROTOBUF_NAMESPACE_ID::int32 showprogress_;
  ::PROTOBUF_NAMESPACE_ID::int32 accessid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fDailyTasksTemplate_2eproto;
};
// -------------------------------------------------------------------

class DailyTasksTemplateList PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Config.DailyTasksTemplateList) */ {
 public:
  inline DailyTasksTemplateList() : DailyTasksTemplateList(nullptr) {}
  virtual ~DailyTasksTemplateList();

  DailyTasksTemplateList(const DailyTasksTemplateList& from);
  DailyTasksTemplateList(DailyTasksTemplateList&& from) noexcept
    : DailyTasksTemplateList() {
    *this = ::std::move(from);
  }

  inline DailyTasksTemplateList& operator=(const DailyTasksTemplateList& from) {
    CopyFrom(from);
    return *this;
  }
  inline DailyTasksTemplateList& operator=(DailyTasksTemplateList&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DailyTasksTemplateList& default_instance();

  static inline const DailyTasksTemplateList* internal_default_instance() {
    return reinterpret_cast<const DailyTasksTemplateList*>(
               &_DailyTasksTemplateList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(DailyTasksTemplateList& a, DailyTasksTemplateList& b) {
    a.Swap(&b);
  }
  inline void Swap(DailyTasksTemplateList* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DailyTasksTemplateList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DailyTasksTemplateList* New() const final {
    return CreateMaybeMessage<DailyTasksTemplateList>(nullptr);
  }

  DailyTasksTemplateList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DailyTasksTemplateList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DailyTasksTemplateList& from);
  void MergeFrom(const DailyTasksTemplateList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DailyTasksTemplateList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Config.DailyTasksTemplateList";
  }
  protected:
  explicit DailyTasksTemplateList(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_protos_2fDailyTasksTemplate_2eproto);
    return ::descriptor_table_protos_2fDailyTasksTemplate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDailyTaskssFieldNumber = 1,
  };
  // repeated .Config.DailyTasksTemplate DailyTaskss = 1;
  int dailytaskss_size() const;
  private:
  int _internal_dailytaskss_size() const;
  public:
  void clear_dailytaskss();
  ::Config::DailyTasksTemplate* mutable_dailytaskss(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::DailyTasksTemplate >*
      mutable_dailytaskss();
  private:
  const ::Config::DailyTasksTemplate& _internal_dailytaskss(int index) const;
  ::Config::DailyTasksTemplate* _internal_add_dailytaskss();
  public:
  const ::Config::DailyTasksTemplate& dailytaskss(int index) const;
  ::Config::DailyTasksTemplate* add_dailytaskss();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::DailyTasksTemplate >&
      dailytaskss() const;

  // @@protoc_insertion_point(class_scope:Config.DailyTasksTemplateList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::DailyTasksTemplate > dailytaskss_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fDailyTasksTemplate_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DailyTasksTemplate_Levelrange_

// int32 Min = 1;
inline void DailyTasksTemplate_Levelrange_::clear_min() {
  min_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Levelrange_::_internal_min() const {
  return min_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Levelrange_::min() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Levelrange_.Min)
  return _internal_min();
}
inline void DailyTasksTemplate_Levelrange_::_internal_set_min(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  min_ = value;
}
inline void DailyTasksTemplate_Levelrange_::set_min(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_min(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Levelrange_.Min)
}

// int32 Max = 2;
inline void DailyTasksTemplate_Levelrange_::clear_max() {
  max_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Levelrange_::_internal_max() const {
  return max_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Levelrange_::max() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Levelrange_.Max)
  return _internal_max();
}
inline void DailyTasksTemplate_Levelrange_::_internal_set_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  max_ = value;
}
inline void DailyTasksTemplate_Levelrange_::set_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_max(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Levelrange_.Max)
}

// -------------------------------------------------------------------

// DailyTasksTemplate_Taskinfo_

// int32 Type = 1;
inline void DailyTasksTemplate_Taskinfo_::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Taskinfo_::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Taskinfo_::type() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Taskinfo_.Type)
  return _internal_type();
}
inline void DailyTasksTemplate_Taskinfo_::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void DailyTasksTemplate_Taskinfo_::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Taskinfo_.Type)
}

// int32 Param1 = 2;
inline void DailyTasksTemplate_Taskinfo_::clear_param1() {
  param1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Taskinfo_::_internal_param1() const {
  return param1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Taskinfo_::param1() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Taskinfo_.Param1)
  return _internal_param1();
}
inline void DailyTasksTemplate_Taskinfo_::_internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param1_ = value;
}
inline void DailyTasksTemplate_Taskinfo_::set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param1(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Taskinfo_.Param1)
}

// int32 Param2 = 3;
inline void DailyTasksTemplate_Taskinfo_::clear_param2() {
  param2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Taskinfo_::_internal_param2() const {
  return param2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Taskinfo_::param2() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Taskinfo_.Param2)
  return _internal_param2();
}
inline void DailyTasksTemplate_Taskinfo_::_internal_set_param2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param2_ = value;
}
inline void DailyTasksTemplate_Taskinfo_::set_param2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param2(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Taskinfo_.Param2)
}

// int32 Param3 = 4;
inline void DailyTasksTemplate_Taskinfo_::clear_param3() {
  param3_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Taskinfo_::_internal_param3() const {
  return param3_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Taskinfo_::param3() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Taskinfo_.Param3)
  return _internal_param3();
}
inline void DailyTasksTemplate_Taskinfo_::_internal_set_param3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param3_ = value;
}
inline void DailyTasksTemplate_Taskinfo_::set_param3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param3(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Taskinfo_.Param3)
}

// -------------------------------------------------------------------

// DailyTasksTemplate_Reward_

// int32 Type = 1;
inline void DailyTasksTemplate_Reward_::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Reward_::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Reward_::type() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Reward_.Type)
  return _internal_type();
}
inline void DailyTasksTemplate_Reward_::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void DailyTasksTemplate_Reward_::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Reward_.Type)
}

// int32 Id = 2;
inline void DailyTasksTemplate_Reward_::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Reward_::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Reward_::id() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Reward_.Id)
  return _internal_id();
}
inline void DailyTasksTemplate_Reward_::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void DailyTasksTemplate_Reward_::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Reward_.Id)
}

// int32 Count = 3;
inline void DailyTasksTemplate_Reward_::clear_count() {
  count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Reward_::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Reward_::count() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Reward_.Count)
  return _internal_count();
}
inline void DailyTasksTemplate_Reward_::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  count_ = value;
}
inline void DailyTasksTemplate_Reward_::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Reward_.Count)
}

// int32 Param1 = 4;
inline void DailyTasksTemplate_Reward_::clear_param1() {
  param1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Reward_::_internal_param1() const {
  return param1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Reward_::param1() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Reward_.Param1)
  return _internal_param1();
}
inline void DailyTasksTemplate_Reward_::_internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param1_ = value;
}
inline void DailyTasksTemplate_Reward_::set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param1(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Reward_.Param1)
}

// -------------------------------------------------------------------

// DailyTasksTemplate_Showreward_

// int32 Type = 1;
inline void DailyTasksTemplate_Showreward_::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Showreward_::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Showreward_::type() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Showreward_.Type)
  return _internal_type();
}
inline void DailyTasksTemplate_Showreward_::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void DailyTasksTemplate_Showreward_::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Showreward_.Type)
}

// int32 Id = 2;
inline void DailyTasksTemplate_Showreward_::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Showreward_::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Showreward_::id() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Showreward_.Id)
  return _internal_id();
}
inline void DailyTasksTemplate_Showreward_::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void DailyTasksTemplate_Showreward_::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Showreward_.Id)
}

// int32 Count = 3;
inline void DailyTasksTemplate_Showreward_::clear_count() {
  count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Showreward_::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate_Showreward_::count() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Showreward_.Count)
  return _internal_count();
}
inline void DailyTasksTemplate_Showreward_::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  count_ = value;
}
inline void DailyTasksTemplate_Showreward_::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Showreward_.Count)
}

// -------------------------------------------------------------------

// DailyTasksTemplate

// int32 Id = 1;
inline void DailyTasksTemplate::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate::id() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Id)
  return _internal_id();
}
inline void DailyTasksTemplate::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void DailyTasksTemplate::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Id)
}

// int32 Kind = 2;
inline void DailyTasksTemplate::clear_kind() {
  kind_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate::_internal_kind() const {
  return kind_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate::kind() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Kind)
  return _internal_kind();
}
inline void DailyTasksTemplate::_internal_set_kind(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  kind_ = value;
}
inline void DailyTasksTemplate::set_kind(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_kind(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Kind)
}

// .Config.DailyTasksTemplate.Levelrange_ LevelRange = 3;
inline bool DailyTasksTemplate::_internal_has_levelrange() const {
  return this != internal_default_instance() && levelrange_ != nullptr;
}
inline bool DailyTasksTemplate::has_levelrange() const {
  return _internal_has_levelrange();
}
inline void DailyTasksTemplate::clear_levelrange() {
  if (GetArena() == nullptr && levelrange_ != nullptr) {
    delete levelrange_;
  }
  levelrange_ = nullptr;
}
inline const ::Config::DailyTasksTemplate_Levelrange_& DailyTasksTemplate::_internal_levelrange() const {
  const ::Config::DailyTasksTemplate_Levelrange_* p = levelrange_;
  return p != nullptr ? *p : reinterpret_cast<const ::Config::DailyTasksTemplate_Levelrange_&>(
      ::Config::_DailyTasksTemplate_Levelrange__default_instance_);
}
inline const ::Config::DailyTasksTemplate_Levelrange_& DailyTasksTemplate::levelrange() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.LevelRange)
  return _internal_levelrange();
}
inline void DailyTasksTemplate::unsafe_arena_set_allocated_levelrange(
    ::Config::DailyTasksTemplate_Levelrange_* levelrange) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(levelrange_);
  }
  levelrange_ = levelrange;
  if (levelrange) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Config.DailyTasksTemplate.LevelRange)
}
inline ::Config::DailyTasksTemplate_Levelrange_* DailyTasksTemplate::release_levelrange() {
  
  ::Config::DailyTasksTemplate_Levelrange_* temp = levelrange_;
  levelrange_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Config::DailyTasksTemplate_Levelrange_* DailyTasksTemplate::unsafe_arena_release_levelrange() {
  // @@protoc_insertion_point(field_release:Config.DailyTasksTemplate.LevelRange)
  
  ::Config::DailyTasksTemplate_Levelrange_* temp = levelrange_;
  levelrange_ = nullptr;
  return temp;
}
inline ::Config::DailyTasksTemplate_Levelrange_* DailyTasksTemplate::_internal_mutable_levelrange() {
  
  if (levelrange_ == nullptr) {
    auto* p = CreateMaybeMessage<::Config::DailyTasksTemplate_Levelrange_>(GetArena());
    levelrange_ = p;
  }
  return levelrange_;
}
inline ::Config::DailyTasksTemplate_Levelrange_* DailyTasksTemplate::mutable_levelrange() {
  // @@protoc_insertion_point(field_mutable:Config.DailyTasksTemplate.LevelRange)
  return _internal_mutable_levelrange();
}
inline void DailyTasksTemplate::set_allocated_levelrange(::Config::DailyTasksTemplate_Levelrange_* levelrange) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete levelrange_;
  }
  if (levelrange) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(levelrange);
    if (message_arena != submessage_arena) {
      levelrange = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, levelrange, submessage_arena);
    }
    
  } else {
    
  }
  levelrange_ = levelrange;
  // @@protoc_insertion_point(field_set_allocated:Config.DailyTasksTemplate.LevelRange)
}

// int32 Quality = 4;
inline void DailyTasksTemplate::clear_quality() {
  quality_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate::_internal_quality() const {
  return quality_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate::quality() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Quality)
  return _internal_quality();
}
inline void DailyTasksTemplate::_internal_set_quality(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  quality_ = value;
}
inline void DailyTasksTemplate::set_quality(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_quality(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Quality)
}

// int32 Level = 5;
inline void DailyTasksTemplate::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate::level() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Level)
  return _internal_level();
}
inline void DailyTasksTemplate::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
}
inline void DailyTasksTemplate::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.Level)
}

// int32 ShowProgress = 6;
inline void DailyTasksTemplate::clear_showprogress() {
  showprogress_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate::_internal_showprogress() const {
  return showprogress_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate::showprogress() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.ShowProgress)
  return _internal_showprogress();
}
inline void DailyTasksTemplate::_internal_set_showprogress(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  showprogress_ = value;
}
inline void DailyTasksTemplate::set_showprogress(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_showprogress(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.ShowProgress)
}

// int32 AccessId = 7;
inline void DailyTasksTemplate::clear_accessid() {
  accessid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate::_internal_accessid() const {
  return accessid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DailyTasksTemplate::accessid() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.AccessId)
  return _internal_accessid();
}
inline void DailyTasksTemplate::_internal_set_accessid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  accessid_ = value;
}
inline void DailyTasksTemplate::set_accessid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_accessid(value);
  // @@protoc_insertion_point(field_set:Config.DailyTasksTemplate.AccessId)
}

// .Config.DailyTasksTemplate.Taskinfo_ TaskInfo = 8;
inline bool DailyTasksTemplate::_internal_has_taskinfo() const {
  return this != internal_default_instance() && taskinfo_ != nullptr;
}
inline bool DailyTasksTemplate::has_taskinfo() const {
  return _internal_has_taskinfo();
}
inline void DailyTasksTemplate::clear_taskinfo() {
  if (GetArena() == nullptr && taskinfo_ != nullptr) {
    delete taskinfo_;
  }
  taskinfo_ = nullptr;
}
inline const ::Config::DailyTasksTemplate_Taskinfo_& DailyTasksTemplate::_internal_taskinfo() const {
  const ::Config::DailyTasksTemplate_Taskinfo_* p = taskinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::Config::DailyTasksTemplate_Taskinfo_&>(
      ::Config::_DailyTasksTemplate_Taskinfo__default_instance_);
}
inline const ::Config::DailyTasksTemplate_Taskinfo_& DailyTasksTemplate::taskinfo() const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.TaskInfo)
  return _internal_taskinfo();
}
inline void DailyTasksTemplate::unsafe_arena_set_allocated_taskinfo(
    ::Config::DailyTasksTemplate_Taskinfo_* taskinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(taskinfo_);
  }
  taskinfo_ = taskinfo;
  if (taskinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Config.DailyTasksTemplate.TaskInfo)
}
inline ::Config::DailyTasksTemplate_Taskinfo_* DailyTasksTemplate::release_taskinfo() {
  
  ::Config::DailyTasksTemplate_Taskinfo_* temp = taskinfo_;
  taskinfo_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Config::DailyTasksTemplate_Taskinfo_* DailyTasksTemplate::unsafe_arena_release_taskinfo() {
  // @@protoc_insertion_point(field_release:Config.DailyTasksTemplate.TaskInfo)
  
  ::Config::DailyTasksTemplate_Taskinfo_* temp = taskinfo_;
  taskinfo_ = nullptr;
  return temp;
}
inline ::Config::DailyTasksTemplate_Taskinfo_* DailyTasksTemplate::_internal_mutable_taskinfo() {
  
  if (taskinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::Config::DailyTasksTemplate_Taskinfo_>(GetArena());
    taskinfo_ = p;
  }
  return taskinfo_;
}
inline ::Config::DailyTasksTemplate_Taskinfo_* DailyTasksTemplate::mutable_taskinfo() {
  // @@protoc_insertion_point(field_mutable:Config.DailyTasksTemplate.TaskInfo)
  return _internal_mutable_taskinfo();
}
inline void DailyTasksTemplate::set_allocated_taskinfo(::Config::DailyTasksTemplate_Taskinfo_* taskinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete taskinfo_;
  }
  if (taskinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(taskinfo);
    if (message_arena != submessage_arena) {
      taskinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, taskinfo, submessage_arena);
    }
    
  } else {
    
  }
  taskinfo_ = taskinfo;
  // @@protoc_insertion_point(field_set_allocated:Config.DailyTasksTemplate.TaskInfo)
}

// repeated .Config.DailyTasksTemplate.Reward_ Rewards = 9;
inline int DailyTasksTemplate::_internal_rewards_size() const {
  return rewards_.size();
}
inline int DailyTasksTemplate::rewards_size() const {
  return _internal_rewards_size();
}
inline void DailyTasksTemplate::clear_rewards() {
  rewards_.Clear();
}
inline ::Config::DailyTasksTemplate_Reward_* DailyTasksTemplate::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:Config.DailyTasksTemplate.Rewards)
  return rewards_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::DailyTasksTemplate_Reward_ >*
DailyTasksTemplate::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:Config.DailyTasksTemplate.Rewards)
  return &rewards_;
}
inline const ::Config::DailyTasksTemplate_Reward_& DailyTasksTemplate::_internal_rewards(int index) const {
  return rewards_.Get(index);
}
inline const ::Config::DailyTasksTemplate_Reward_& DailyTasksTemplate::rewards(int index) const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.Rewards)
  return _internal_rewards(index);
}
inline ::Config::DailyTasksTemplate_Reward_* DailyTasksTemplate::_internal_add_rewards() {
  return rewards_.Add();
}
inline ::Config::DailyTasksTemplate_Reward_* DailyTasksTemplate::add_rewards() {
  // @@protoc_insertion_point(field_add:Config.DailyTasksTemplate.Rewards)
  return _internal_add_rewards();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::DailyTasksTemplate_Reward_ >&
DailyTasksTemplate::rewards() const {
  // @@protoc_insertion_point(field_list:Config.DailyTasksTemplate.Rewards)
  return rewards_;
}

// repeated .Config.DailyTasksTemplate.Showreward_ ShowRewards = 10;
inline int DailyTasksTemplate::_internal_showrewards_size() const {
  return showrewards_.size();
}
inline int DailyTasksTemplate::showrewards_size() const {
  return _internal_showrewards_size();
}
inline void DailyTasksTemplate::clear_showrewards() {
  showrewards_.Clear();
}
inline ::Config::DailyTasksTemplate_Showreward_* DailyTasksTemplate::mutable_showrewards(int index) {
  // @@protoc_insertion_point(field_mutable:Config.DailyTasksTemplate.ShowRewards)
  return showrewards_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::DailyTasksTemplate_Showreward_ >*
DailyTasksTemplate::mutable_showrewards() {
  // @@protoc_insertion_point(field_mutable_list:Config.DailyTasksTemplate.ShowRewards)
  return &showrewards_;
}
inline const ::Config::DailyTasksTemplate_Showreward_& DailyTasksTemplate::_internal_showrewards(int index) const {
  return showrewards_.Get(index);
}
inline const ::Config::DailyTasksTemplate_Showreward_& DailyTasksTemplate::showrewards(int index) const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplate.ShowRewards)
  return _internal_showrewards(index);
}
inline ::Config::DailyTasksTemplate_Showreward_* DailyTasksTemplate::_internal_add_showrewards() {
  return showrewards_.Add();
}
inline ::Config::DailyTasksTemplate_Showreward_* DailyTasksTemplate::add_showrewards() {
  // @@protoc_insertion_point(field_add:Config.DailyTasksTemplate.ShowRewards)
  return _internal_add_showrewards();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::DailyTasksTemplate_Showreward_ >&
DailyTasksTemplate::showrewards() const {
  // @@protoc_insertion_point(field_list:Config.DailyTasksTemplate.ShowRewards)
  return showrewards_;
}

// -------------------------------------------------------------------

// DailyTasksTemplateList

// repeated .Config.DailyTasksTemplate DailyTaskss = 1;
inline int DailyTasksTemplateList::_internal_dailytaskss_size() const {
  return dailytaskss_.size();
}
inline int DailyTasksTemplateList::dailytaskss_size() const {
  return _internal_dailytaskss_size();
}
inline void DailyTasksTemplateList::clear_dailytaskss() {
  dailytaskss_.Clear();
}
inline ::Config::DailyTasksTemplate* DailyTasksTemplateList::mutable_dailytaskss(int index) {
  // @@protoc_insertion_point(field_mutable:Config.DailyTasksTemplateList.DailyTaskss)
  return dailytaskss_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::DailyTasksTemplate >*
DailyTasksTemplateList::mutable_dailytaskss() {
  // @@protoc_insertion_point(field_mutable_list:Config.DailyTasksTemplateList.DailyTaskss)
  return &dailytaskss_;
}
inline const ::Config::DailyTasksTemplate& DailyTasksTemplateList::_internal_dailytaskss(int index) const {
  return dailytaskss_.Get(index);
}
inline const ::Config::DailyTasksTemplate& DailyTasksTemplateList::dailytaskss(int index) const {
  // @@protoc_insertion_point(field_get:Config.DailyTasksTemplateList.DailyTaskss)
  return _internal_dailytaskss(index);
}
inline ::Config::DailyTasksTemplate* DailyTasksTemplateList::_internal_add_dailytaskss() {
  return dailytaskss_.Add();
}
inline ::Config::DailyTasksTemplate* DailyTasksTemplateList::add_dailytaskss() {
  // @@protoc_insertion_point(field_add:Config.DailyTasksTemplateList.DailyTaskss)
  return _internal_add_dailytaskss();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Config::DailyTasksTemplate >&
DailyTasksTemplateList::dailytaskss() const {
  // @@protoc_insertion_point(field_list:Config.DailyTasksTemplateList.DailyTaskss)
  return dailytaskss_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_protos_2fDailyTasksTemplate_2eproto
