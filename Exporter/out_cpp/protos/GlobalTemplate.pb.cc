// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/GlobalTemplate.proto

#include "protos/GlobalTemplate.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_protos_2fGlobalTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GlobalTemplate_Fieldheronumlimit__protos_2fGlobalTemplate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fGlobalTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GlobalTemplate_Heroattributeevaluation__protos_2fGlobalTemplate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fGlobalTemplate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GlobalTemplate_Heroclassneedcard__protos_2fGlobalTemplate_2eproto;
namespace Config {
class GlobalTemplate_Fieldheronumlimit_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GlobalTemplate_Fieldheronumlimit_> _instance;
} _GlobalTemplate_Fieldheronumlimit__default_instance_;
class GlobalTemplate_Heroattributeevaluation_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GlobalTemplate_Heroattributeevaluation_> _instance;
} _GlobalTemplate_Heroattributeevaluation__default_instance_;
class GlobalTemplate_Heroclassneedcard_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GlobalTemplate_Heroclassneedcard_> _instance;
} _GlobalTemplate_Heroclassneedcard__default_instance_;
class GlobalTemplateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GlobalTemplate> _instance;
} _GlobalTemplate_default_instance_;
}  // namespace Config
static void InitDefaultsscc_info_GlobalTemplate_protos_2fGlobalTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_GlobalTemplate_default_instance_;
    new (ptr) ::Config::GlobalTemplate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_GlobalTemplate_protos_2fGlobalTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_GlobalTemplate_protos_2fGlobalTemplate_2eproto}, {
      &scc_info_GlobalTemplate_Fieldheronumlimit__protos_2fGlobalTemplate_2eproto.base,
      &scc_info_GlobalTemplate_Heroattributeevaluation__protos_2fGlobalTemplate_2eproto.base,
      &scc_info_GlobalTemplate_Heroclassneedcard__protos_2fGlobalTemplate_2eproto.base,}};

static void InitDefaultsscc_info_GlobalTemplate_Fieldheronumlimit__protos_2fGlobalTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_GlobalTemplate_Fieldheronumlimit__default_instance_;
    new (ptr) ::Config::GlobalTemplate_Fieldheronumlimit_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GlobalTemplate_Fieldheronumlimit__protos_2fGlobalTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GlobalTemplate_Fieldheronumlimit__protos_2fGlobalTemplate_2eproto}, {}};

static void InitDefaultsscc_info_GlobalTemplate_Heroattributeevaluation__protos_2fGlobalTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_GlobalTemplate_Heroattributeevaluation__default_instance_;
    new (ptr) ::Config::GlobalTemplate_Heroattributeevaluation_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GlobalTemplate_Heroattributeevaluation__protos_2fGlobalTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GlobalTemplate_Heroattributeevaluation__protos_2fGlobalTemplate_2eproto}, {}};

static void InitDefaultsscc_info_GlobalTemplate_Heroclassneedcard__protos_2fGlobalTemplate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Config::_GlobalTemplate_Heroclassneedcard__default_instance_;
    new (ptr) ::Config::GlobalTemplate_Heroclassneedcard_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GlobalTemplate_Heroclassneedcard__protos_2fGlobalTemplate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GlobalTemplate_Heroclassneedcard__protos_2fGlobalTemplate_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_protos_2fGlobalTemplate_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_protos_2fGlobalTemplate_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_protos_2fGlobalTemplate_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_protos_2fGlobalTemplate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate_Fieldheronumlimit_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate_Fieldheronumlimit_, level_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate_Fieldheronumlimit_, num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate_Heroattributeevaluation_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate_Heroattributeevaluation_, num1_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate_Heroattributeevaluation_, num2_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate_Heroattributeevaluation_, num3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate_Heroclassneedcard_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate_Heroclassneedcard_, class1_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate_Heroclassneedcard_, class2_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate_Heroclassneedcard_, class3_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate_Heroclassneedcard_, class4_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate_Heroclassneedcard_, class5_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate_Heroclassneedcard_, class6_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, namelimit_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, defaultdropgroup_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, changenamecost_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, playeenergyrecovertime_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, fieldheronumlimits_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, formationnamelimit_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, formationcareerlimit_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, initialformaitonheros_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, formationcount_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, heronormaltalentcountlimit_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, herohealthcorrectionbase_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, herohealthcorrectioncoe_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, heroattackcorrectionbase_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, heroattackcorrectioncoe_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, herododgecorrectionbase_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, herododgecorrectioncoe_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, herocritcorrectionbase_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, herocritcorrectioncoe_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, heroblckcorrectionbase_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, heroblckcorrectioncoe_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, heroattributeevaluation_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, herolevellimits_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, herostarlimit_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, herostarupneedcards_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, herostarupneedgolds_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, herostarupgainnormaltalents_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, herostarupcancelgivecards_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, herostarupcancelgivegold_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, herolearningneedgolds_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, heroclassneedcards_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, heroskilltraininggiveexpcoe_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, normallotteryfreetime_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, speciallotteryfreetime_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, lotteryticketdiamondcost_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, guildicons_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, guildseekhelpnum_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, taverntaskbrisk_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, gvemapbattlecount_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, gveduplicatecardelementcounts_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, gveduplicatehandcard_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, gveduplicateroundtime_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, gveduplicatewindeletecardcount_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, gveduplicatelosedeletecardcount_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, gveduplicateovercardcount_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, gveduplicatebosslosshpcount_),
  PROTOBUF_FIELD_OFFSET(::Config::GlobalTemplate, gveduplicaterewardgold_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Config::GlobalTemplate_Fieldheronumlimit_)},
  { 7, -1, sizeof(::Config::GlobalTemplate_Heroattributeevaluation_)},
  { 15, -1, sizeof(::Config::GlobalTemplate_Heroclassneedcard_)},
  { 26, -1, sizeof(::Config::GlobalTemplate)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_GlobalTemplate_Fieldheronumlimit__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_GlobalTemplate_Heroattributeevaluation__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_GlobalTemplate_Heroclassneedcard__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Config::_GlobalTemplate_default_instance_),
};

const char descriptor_table_protodef_protos_2fGlobalTemplate_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033protos/GlobalTemplate.proto\022\006Config\"\225\016"
  "\n\016GlobalTemplate\022\021\n\tNameLimit\030\001 \001(\005\022\030\n\020D"
  "efaultDropGroup\030\002 \001(\005\022\026\n\016ChangeNameCost\030"
  "\003 \001(\005\022\036\n\026PlayeEnergyRecoverTime\030\004 \001(\005\022E\n"
  "\022FieldHeroNumLimits\030\005 \003(\0132).Config.Globa"
  "lTemplate.Fieldheronumlimit_\022\032\n\022Formatio"
  "nNameLimit\030\006 \001(\005\022\034\n\024FormationCareerLimit"
  "\030\007 \001(\005\022\035\n\025InitialFormaitonHeros\030\010 \003(\005\022\026\n"
  "\016FormationCount\030\t \001(\005\022\"\n\032HeroNormalTalen"
  "tCountLimit\030\n \001(\010\022 \n\030HeroHealthCorrectio"
  "nBase\030\013 \001(\010\022\037\n\027HeroHealthCorrectionCoe\030\014"
  " \001(\001\022 \n\030HeroAttackCorrectionBase\030\r \001(\005\022\037"
  "\n\027HeroAttackCorrectionCoe\030\016 \001(\001\022\037\n\027HeroD"
  "odgeCorrectionBase\030\017 \001(\005\022\036\n\026HeroDodgeCor"
  "rectionCoe\030\020 \001(\001\022\036\n\026HeroCritCorrectionBa"
  "se\030\021 \001(\005\022\035\n\025HeroCritCorrectionCoe\030\022 \001(\001\022"
  "\036\n\026HeroBlckCorrectionBase\030\023 \001(\005\022\035\n\025HeroB"
  "lckCorrectionCoe\030\024 \001(\001\022P\n\027HeroAttributeE"
  "valuation\030\025 \001(\0132/.Config.GlobalTemplate."
  "Heroattributeevaluation_\022\027\n\017HeroLevelLim"
  "its\030\026 \003(\005\022\025\n\rHeroStarLimit\030\027 \001(\005\022\033\n\023Hero"
  "StarUpNeedCards\030\030 \003(\005\022\033\n\023HeroStarUpNeedG"
  "olds\030\031 \003(\005\022#\n\033HeroStarUpGainNormalTalent"
  "s\030\032 \003(\005\022!\n\031HeroStarUpCancelGiveCards\030\033 \003"
  "(\005\022 \n\030HeroStarUpCancelGiveGold\030\034 \001(\001\022\035\n\025"
  "HeroLearningNeedGolds\030\035 \003(\005\022E\n\022heroClass"
  "NeedCards\030\036 \003(\0132).Config.GlobalTemplate."
  "Heroclassneedcard_\022#\n\033HeroSkillTrainingG"
  "iveExpCoe\030\037 \001(\001\022\035\n\025NormalLotteryFreeTime"
  "\030  \001(\005\022\036\n\026SpecialLotteryFreeTime\030! \001(\005\022 "
  "\n\030LotteryTicketDiamondCost\030\" \001(\005\022\022\n\nGuil"
  "dIcons\030# \003(\t\022\030\n\020GuildSeekHelpNum\030$ \001(\005\022\027"
  "\n\017TavernTaskBrisk\030% \001(\005\022\031\n\021GveMapBattleC"
  "ount\030& \001(\005\022%\n\035GveDuplicateCardElementCou"
  "nts\030\' \003(\005\022\034\n\024GveDuplicateHandCard\030( \001(\005\022"
  "\035\n\025GveDuplicateRoundTime\030) \001(\005\022&\n\036GveDup"
  "licateWinDeleteCardCount\030* \001(\005\022\'\n\037GveDup"
  "licateLoseDeleteCardCount\030+ \001(\005\022!\n\031GveDu"
  "plicateOverCardCount\030, \001(\005\022#\n\033GveDuplica"
  "teBossLossHpCount\030- \001(\005\022\036\n\026GveDuplicateR"
  "ewardGold\030. \001(\005\0320\n\022Fieldheronumlimit_\022\r\n"
  "\005Level\030\001 \001(\005\022\013\n\003Num\030\002 \001(\005\032D\n\030Heroattribu"
  "teevaluation_\022\014\n\004Num1\030\001 \001(\005\022\014\n\004Num2\030\002 \001("
  "\005\022\014\n\004Num3\030\003 \001(\005\032t\n\022Heroclassneedcard_\022\016\n"
  "\006Class1\030\001 \001(\005\022\016\n\006Class2\030\002 \001(\005\022\016\n\006Class3\030"
  "\003 \001(\005\022\016\n\006Class4\030\004 \001(\005\022\016\n\006Class5\030\005 \001(\005\022\016\n"
  "\006Class6\030\006 \001(\005b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_protos_2fGlobalTemplate_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_protos_2fGlobalTemplate_2eproto_sccs[4] = {
  &scc_info_GlobalTemplate_protos_2fGlobalTemplate_2eproto.base,
  &scc_info_GlobalTemplate_Fieldheronumlimit__protos_2fGlobalTemplate_2eproto.base,
  &scc_info_GlobalTemplate_Heroattributeevaluation__protos_2fGlobalTemplate_2eproto.base,
  &scc_info_GlobalTemplate_Heroclassneedcard__protos_2fGlobalTemplate_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_protos_2fGlobalTemplate_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protos_2fGlobalTemplate_2eproto = {
  false, false, descriptor_table_protodef_protos_2fGlobalTemplate_2eproto, "protos/GlobalTemplate.proto", 1861,
  &descriptor_table_protos_2fGlobalTemplate_2eproto_once, descriptor_table_protos_2fGlobalTemplate_2eproto_sccs, descriptor_table_protos_2fGlobalTemplate_2eproto_deps, 4, 0,
  schemas, file_default_instances, TableStruct_protos_2fGlobalTemplate_2eproto::offsets,
  file_level_metadata_protos_2fGlobalTemplate_2eproto, 4, file_level_enum_descriptors_protos_2fGlobalTemplate_2eproto, file_level_service_descriptors_protos_2fGlobalTemplate_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protos_2fGlobalTemplate_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_protos_2fGlobalTemplate_2eproto)), true);
namespace Config {

// ===================================================================

class GlobalTemplate_Fieldheronumlimit_::_Internal {
 public:
};

GlobalTemplate_Fieldheronumlimit_::GlobalTemplate_Fieldheronumlimit_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.GlobalTemplate.Fieldheronumlimit_)
}
GlobalTemplate_Fieldheronumlimit_::GlobalTemplate_Fieldheronumlimit_(const GlobalTemplate_Fieldheronumlimit_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&level_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:Config.GlobalTemplate.Fieldheronumlimit_)
}

void GlobalTemplate_Fieldheronumlimit_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&level_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&level_)) + sizeof(num_));
}

GlobalTemplate_Fieldheronumlimit_::~GlobalTemplate_Fieldheronumlimit_() {
  // @@protoc_insertion_point(destructor:Config.GlobalTemplate.Fieldheronumlimit_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GlobalTemplate_Fieldheronumlimit_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GlobalTemplate_Fieldheronumlimit_::ArenaDtor(void* object) {
  GlobalTemplate_Fieldheronumlimit_* _this = reinterpret_cast< GlobalTemplate_Fieldheronumlimit_* >(object);
  (void)_this;
}
void GlobalTemplate_Fieldheronumlimit_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GlobalTemplate_Fieldheronumlimit_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GlobalTemplate_Fieldheronumlimit_& GlobalTemplate_Fieldheronumlimit_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GlobalTemplate_Fieldheronumlimit__protos_2fGlobalTemplate_2eproto.base);
  return *internal_default_instance();
}


void GlobalTemplate_Fieldheronumlimit_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.GlobalTemplate.Fieldheronumlimit_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&level_)) + sizeof(num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GlobalTemplate_Fieldheronumlimit_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GlobalTemplate_Fieldheronumlimit_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.GlobalTemplate.Fieldheronumlimit_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Level = 1;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_level(), target);
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.GlobalTemplate.Fieldheronumlimit_)
  return target;
}

size_t GlobalTemplate_Fieldheronumlimit_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.GlobalTemplate.Fieldheronumlimit_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_level());
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GlobalTemplate_Fieldheronumlimit_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.GlobalTemplate.Fieldheronumlimit_)
  GOOGLE_DCHECK_NE(&from, this);
  const GlobalTemplate_Fieldheronumlimit_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GlobalTemplate_Fieldheronumlimit_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.GlobalTemplate.Fieldheronumlimit_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.GlobalTemplate.Fieldheronumlimit_)
    MergeFrom(*source);
  }
}

void GlobalTemplate_Fieldheronumlimit_::MergeFrom(const GlobalTemplate_Fieldheronumlimit_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.GlobalTemplate.Fieldheronumlimit_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.num() != 0) {
    _internal_set_num(from._internal_num());
  }
}

void GlobalTemplate_Fieldheronumlimit_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.GlobalTemplate.Fieldheronumlimit_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalTemplate_Fieldheronumlimit_::CopyFrom(const GlobalTemplate_Fieldheronumlimit_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.GlobalTemplate.Fieldheronumlimit_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalTemplate_Fieldheronumlimit_::IsInitialized() const {
  return true;
}

void GlobalTemplate_Fieldheronumlimit_::InternalSwap(GlobalTemplate_Fieldheronumlimit_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GlobalTemplate_Fieldheronumlimit_, num_)
      + sizeof(GlobalTemplate_Fieldheronumlimit_::num_)
      - PROTOBUF_FIELD_OFFSET(GlobalTemplate_Fieldheronumlimit_, level_)>(
          reinterpret_cast<char*>(&level_),
          reinterpret_cast<char*>(&other->level_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GlobalTemplate_Fieldheronumlimit_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GlobalTemplate_Heroattributeevaluation_::_Internal {
 public:
};

GlobalTemplate_Heroattributeevaluation_::GlobalTemplate_Heroattributeevaluation_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.GlobalTemplate.Heroattributeevaluation_)
}
GlobalTemplate_Heroattributeevaluation_::GlobalTemplate_Heroattributeevaluation_(const GlobalTemplate_Heroattributeevaluation_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&num1_, &from.num1_,
    static_cast<size_t>(reinterpret_cast<char*>(&num3_) -
    reinterpret_cast<char*>(&num1_)) + sizeof(num3_));
  // @@protoc_insertion_point(copy_constructor:Config.GlobalTemplate.Heroattributeevaluation_)
}

void GlobalTemplate_Heroattributeevaluation_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&num1_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&num3_) -
      reinterpret_cast<char*>(&num1_)) + sizeof(num3_));
}

GlobalTemplate_Heroattributeevaluation_::~GlobalTemplate_Heroattributeevaluation_() {
  // @@protoc_insertion_point(destructor:Config.GlobalTemplate.Heroattributeevaluation_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GlobalTemplate_Heroattributeevaluation_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GlobalTemplate_Heroattributeevaluation_::ArenaDtor(void* object) {
  GlobalTemplate_Heroattributeevaluation_* _this = reinterpret_cast< GlobalTemplate_Heroattributeevaluation_* >(object);
  (void)_this;
}
void GlobalTemplate_Heroattributeevaluation_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GlobalTemplate_Heroattributeevaluation_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GlobalTemplate_Heroattributeevaluation_& GlobalTemplate_Heroattributeevaluation_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GlobalTemplate_Heroattributeevaluation__protos_2fGlobalTemplate_2eproto.base);
  return *internal_default_instance();
}


void GlobalTemplate_Heroattributeevaluation_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.GlobalTemplate.Heroattributeevaluation_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&num1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num3_) -
      reinterpret_cast<char*>(&num1_)) + sizeof(num3_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GlobalTemplate_Heroattributeevaluation_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Num1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          num1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          num2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          num3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GlobalTemplate_Heroattributeevaluation_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.GlobalTemplate.Heroattributeevaluation_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Num1 = 1;
  if (this->num1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_num1(), target);
  }

  // int32 Num2 = 2;
  if (this->num2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_num2(), target);
  }

  // int32 Num3 = 3;
  if (this->num3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_num3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.GlobalTemplate.Heroattributeevaluation_)
  return target;
}

size_t GlobalTemplate_Heroattributeevaluation_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.GlobalTemplate.Heroattributeevaluation_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Num1 = 1;
  if (this->num1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num1());
  }

  // int32 Num2 = 2;
  if (this->num2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num2());
  }

  // int32 Num3 = 3;
  if (this->num3() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num3());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GlobalTemplate_Heroattributeevaluation_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.GlobalTemplate.Heroattributeevaluation_)
  GOOGLE_DCHECK_NE(&from, this);
  const GlobalTemplate_Heroattributeevaluation_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GlobalTemplate_Heroattributeevaluation_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.GlobalTemplate.Heroattributeevaluation_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.GlobalTemplate.Heroattributeevaluation_)
    MergeFrom(*source);
  }
}

void GlobalTemplate_Heroattributeevaluation_::MergeFrom(const GlobalTemplate_Heroattributeevaluation_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.GlobalTemplate.Heroattributeevaluation_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.num1() != 0) {
    _internal_set_num1(from._internal_num1());
  }
  if (from.num2() != 0) {
    _internal_set_num2(from._internal_num2());
  }
  if (from.num3() != 0) {
    _internal_set_num3(from._internal_num3());
  }
}

void GlobalTemplate_Heroattributeevaluation_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.GlobalTemplate.Heroattributeevaluation_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalTemplate_Heroattributeevaluation_::CopyFrom(const GlobalTemplate_Heroattributeevaluation_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.GlobalTemplate.Heroattributeevaluation_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalTemplate_Heroattributeevaluation_::IsInitialized() const {
  return true;
}

void GlobalTemplate_Heroattributeevaluation_::InternalSwap(GlobalTemplate_Heroattributeevaluation_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GlobalTemplate_Heroattributeevaluation_, num3_)
      + sizeof(GlobalTemplate_Heroattributeevaluation_::num3_)
      - PROTOBUF_FIELD_OFFSET(GlobalTemplate_Heroattributeevaluation_, num1_)>(
          reinterpret_cast<char*>(&num1_),
          reinterpret_cast<char*>(&other->num1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GlobalTemplate_Heroattributeevaluation_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GlobalTemplate_Heroclassneedcard_::_Internal {
 public:
};

GlobalTemplate_Heroclassneedcard_::GlobalTemplate_Heroclassneedcard_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.GlobalTemplate.Heroclassneedcard_)
}
GlobalTemplate_Heroclassneedcard_::GlobalTemplate_Heroclassneedcard_(const GlobalTemplate_Heroclassneedcard_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&class1_, &from.class1_,
    static_cast<size_t>(reinterpret_cast<char*>(&class6_) -
    reinterpret_cast<char*>(&class1_)) + sizeof(class6_));
  // @@protoc_insertion_point(copy_constructor:Config.GlobalTemplate.Heroclassneedcard_)
}

void GlobalTemplate_Heroclassneedcard_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&class1_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&class6_) -
      reinterpret_cast<char*>(&class1_)) + sizeof(class6_));
}

GlobalTemplate_Heroclassneedcard_::~GlobalTemplate_Heroclassneedcard_() {
  // @@protoc_insertion_point(destructor:Config.GlobalTemplate.Heroclassneedcard_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GlobalTemplate_Heroclassneedcard_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GlobalTemplate_Heroclassneedcard_::ArenaDtor(void* object) {
  GlobalTemplate_Heroclassneedcard_* _this = reinterpret_cast< GlobalTemplate_Heroclassneedcard_* >(object);
  (void)_this;
}
void GlobalTemplate_Heroclassneedcard_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GlobalTemplate_Heroclassneedcard_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GlobalTemplate_Heroclassneedcard_& GlobalTemplate_Heroclassneedcard_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GlobalTemplate_Heroclassneedcard__protos_2fGlobalTemplate_2eproto.base);
  return *internal_default_instance();
}


void GlobalTemplate_Heroclassneedcard_::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.GlobalTemplate.Heroclassneedcard_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&class1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&class6_) -
      reinterpret_cast<char*>(&class1_)) + sizeof(class6_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GlobalTemplate_Heroclassneedcard_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Class1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          class1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Class2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          class2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Class3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          class3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Class4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          class4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Class5 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          class5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Class6 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          class6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GlobalTemplate_Heroclassneedcard_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.GlobalTemplate.Heroclassneedcard_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Class1 = 1;
  if (this->class1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_class1(), target);
  }

  // int32 Class2 = 2;
  if (this->class2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_class2(), target);
  }

  // int32 Class3 = 3;
  if (this->class3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_class3(), target);
  }

  // int32 Class4 = 4;
  if (this->class4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_class4(), target);
  }

  // int32 Class5 = 5;
  if (this->class5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_class5(), target);
  }

  // int32 Class6 = 6;
  if (this->class6() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_class6(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.GlobalTemplate.Heroclassneedcard_)
  return target;
}

size_t GlobalTemplate_Heroclassneedcard_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.GlobalTemplate.Heroclassneedcard_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Class1 = 1;
  if (this->class1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_class1());
  }

  // int32 Class2 = 2;
  if (this->class2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_class2());
  }

  // int32 Class3 = 3;
  if (this->class3() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_class3());
  }

  // int32 Class4 = 4;
  if (this->class4() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_class4());
  }

  // int32 Class5 = 5;
  if (this->class5() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_class5());
  }

  // int32 Class6 = 6;
  if (this->class6() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_class6());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GlobalTemplate_Heroclassneedcard_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.GlobalTemplate.Heroclassneedcard_)
  GOOGLE_DCHECK_NE(&from, this);
  const GlobalTemplate_Heroclassneedcard_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GlobalTemplate_Heroclassneedcard_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.GlobalTemplate.Heroclassneedcard_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.GlobalTemplate.Heroclassneedcard_)
    MergeFrom(*source);
  }
}

void GlobalTemplate_Heroclassneedcard_::MergeFrom(const GlobalTemplate_Heroclassneedcard_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.GlobalTemplate.Heroclassneedcard_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.class1() != 0) {
    _internal_set_class1(from._internal_class1());
  }
  if (from.class2() != 0) {
    _internal_set_class2(from._internal_class2());
  }
  if (from.class3() != 0) {
    _internal_set_class3(from._internal_class3());
  }
  if (from.class4() != 0) {
    _internal_set_class4(from._internal_class4());
  }
  if (from.class5() != 0) {
    _internal_set_class5(from._internal_class5());
  }
  if (from.class6() != 0) {
    _internal_set_class6(from._internal_class6());
  }
}

void GlobalTemplate_Heroclassneedcard_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.GlobalTemplate.Heroclassneedcard_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalTemplate_Heroclassneedcard_::CopyFrom(const GlobalTemplate_Heroclassneedcard_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.GlobalTemplate.Heroclassneedcard_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalTemplate_Heroclassneedcard_::IsInitialized() const {
  return true;
}

void GlobalTemplate_Heroclassneedcard_::InternalSwap(GlobalTemplate_Heroclassneedcard_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GlobalTemplate_Heroclassneedcard_, class6_)
      + sizeof(GlobalTemplate_Heroclassneedcard_::class6_)
      - PROTOBUF_FIELD_OFFSET(GlobalTemplate_Heroclassneedcard_, class1_)>(
          reinterpret_cast<char*>(&class1_),
          reinterpret_cast<char*>(&other->class1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GlobalTemplate_Heroclassneedcard_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GlobalTemplate::_Internal {
 public:
  static const ::Config::GlobalTemplate_Heroattributeevaluation_& heroattributeevaluation(const GlobalTemplate* msg);
};

const ::Config::GlobalTemplate_Heroattributeevaluation_&
GlobalTemplate::_Internal::heroattributeevaluation(const GlobalTemplate* msg) {
  return *msg->heroattributeevaluation_;
}
GlobalTemplate::GlobalTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  fieldheronumlimits_(arena),
  initialformaitonheros_(arena),
  herolevellimits_(arena),
  herostarupneedcards_(arena),
  herostarupneedgolds_(arena),
  herostarupgainnormaltalents_(arena),
  herostarupcancelgivecards_(arena),
  herolearningneedgolds_(arena),
  heroclassneedcards_(arena),
  guildicons_(arena),
  gveduplicatecardelementcounts_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Config.GlobalTemplate)
}
GlobalTemplate::GlobalTemplate(const GlobalTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      fieldheronumlimits_(from.fieldheronumlimits_),
      initialformaitonheros_(from.initialformaitonheros_),
      herolevellimits_(from.herolevellimits_),
      herostarupneedcards_(from.herostarupneedcards_),
      herostarupneedgolds_(from.herostarupneedgolds_),
      herostarupgainnormaltalents_(from.herostarupgainnormaltalents_),
      herostarupcancelgivecards_(from.herostarupcancelgivecards_),
      herolearningneedgolds_(from.herolearningneedgolds_),
      heroclassneedcards_(from.heroclassneedcards_),
      guildicons_(from.guildicons_),
      gveduplicatecardelementcounts_(from.gveduplicatecardelementcounts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_heroattributeevaluation()) {
    heroattributeevaluation_ = new ::Config::GlobalTemplate_Heroattributeevaluation_(*from.heroattributeevaluation_);
  } else {
    heroattributeevaluation_ = nullptr;
  }
  ::memcpy(&namelimit_, &from.namelimit_,
    static_cast<size_t>(reinterpret_cast<char*>(&gveduplicaterewardgold_) -
    reinterpret_cast<char*>(&namelimit_)) + sizeof(gveduplicaterewardgold_));
  // @@protoc_insertion_point(copy_constructor:Config.GlobalTemplate)
}

void GlobalTemplate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GlobalTemplate_protos_2fGlobalTemplate_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&heroattributeevaluation_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&gveduplicaterewardgold_) -
      reinterpret_cast<char*>(&heroattributeevaluation_)) + sizeof(gveduplicaterewardgold_));
}

GlobalTemplate::~GlobalTemplate() {
  // @@protoc_insertion_point(destructor:Config.GlobalTemplate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GlobalTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete heroattributeevaluation_;
}

void GlobalTemplate::ArenaDtor(void* object) {
  GlobalTemplate* _this = reinterpret_cast< GlobalTemplate* >(object);
  (void)_this;
}
void GlobalTemplate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GlobalTemplate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GlobalTemplate& GlobalTemplate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GlobalTemplate_protos_2fGlobalTemplate_2eproto.base);
  return *internal_default_instance();
}


void GlobalTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:Config.GlobalTemplate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fieldheronumlimits_.Clear();
  initialformaitonheros_.Clear();
  herolevellimits_.Clear();
  herostarupneedcards_.Clear();
  herostarupneedgolds_.Clear();
  herostarupgainnormaltalents_.Clear();
  herostarupcancelgivecards_.Clear();
  herolearningneedgolds_.Clear();
  heroclassneedcards_.Clear();
  guildicons_.Clear();
  gveduplicatecardelementcounts_.Clear();
  if (GetArena() == nullptr && heroattributeevaluation_ != nullptr) {
    delete heroattributeevaluation_;
  }
  heroattributeevaluation_ = nullptr;
  ::memset(&namelimit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gveduplicaterewardgold_) -
      reinterpret_cast<char*>(&namelimit_)) + sizeof(gveduplicaterewardgold_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GlobalTemplate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 NameLimit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          namelimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 DefaultDropGroup = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          defaultdropgroup_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ChangeNameCost = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          changenamecost_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 PlayeEnergyRecoverTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          playeenergyrecovertime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fieldheronumlimits(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 FormationNameLimit = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          formationnamelimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 FormationCareerLimit = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          formationcareerlimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 InitialFormaitonHeros = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_initialformaitonheros(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64) {
          _internal_add_initialformaitonheros(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 FormationCount = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          formationcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool HeroNormalTalentCountLimit = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          heronormaltalentcountlimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool HeroHealthCorrectionBase = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          herohealthcorrectionbase_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double HeroHealthCorrectionCoe = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 97)) {
          herohealthcorrectioncoe_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // int32 HeroAttackCorrectionBase = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          heroattackcorrectionbase_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double HeroAttackCorrectionCoe = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 113)) {
          heroattackcorrectioncoe_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // int32 HeroDodgeCorrectionBase = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          herododgecorrectionbase_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double HeroDodgeCorrectionCoe = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 129)) {
          herododgecorrectioncoe_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // int32 HeroCritCorrectionBase = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          herocritcorrectionbase_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double HeroCritCorrectionCoe = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 145)) {
          herocritcorrectioncoe_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // int32 HeroBlckCorrectionBase = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          heroblckcorrectionbase_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double HeroBlckCorrectionCoe = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 161)) {
          heroblckcorrectioncoe_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // .Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_heroattributeevaluation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 HeroLevelLimits = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_herolevellimits(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176) {
          _internal_add_herolevellimits(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 HeroStarLimit = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          herostarlimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 HeroStarUpNeedCards = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_herostarupneedcards(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192) {
          _internal_add_herostarupneedcards(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 HeroStarUpNeedGolds = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_herostarupneedgolds(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200) {
          _internal_add_herostarupneedgolds(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 HeroStarUpGainNormalTalents = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_herostarupgainnormaltalents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208) {
          _internal_add_herostarupgainnormaltalents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 HeroStarUpCancelGiveCards = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_herostarupcancelgivecards(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216) {
          _internal_add_herostarupcancelgivecards(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double HeroStarUpCancelGiveGold = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 225)) {
          herostarupcancelgivegold_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated int32 HeroLearningNeedGolds = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_herolearningneedgolds(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 232) {
          _internal_add_herolearningneedgolds(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_heroclassneedcards(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<242>(ptr));
        } else goto handle_unusual;
        continue;
      // double HeroSkillTrainingGiveExpCoe = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 249)) {
          heroskilltraininggiveexpcoe_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // int32 NormalLotteryFreeTime = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          normallotteryfreetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SpecialLotteryFreeTime = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          speciallotteryfreetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 LotteryTicketDiamondCost = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          lotteryticketdiamondcost_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string GuildIcons = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_guildicons();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Config.GlobalTemplate.GuildIcons"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<282>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 GuildSeekHelpNum = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          guildseekhelpnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 TavernTaskBrisk = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          taverntaskbrisk_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GveMapBattleCount = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          gvemapbattlecount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 GveDuplicateCardElementCounts = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_gveduplicatecardelementcounts(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56) {
          _internal_add_gveduplicatecardelementcounts(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GveDuplicateHandCard = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          gveduplicatehandcard_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GveDuplicateRoundTime = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          gveduplicateroundtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GveDuplicateWinDeleteCardCount = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          gveduplicatewindeletecardcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GveDuplicateLoseDeleteCardCount = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          gveduplicatelosedeletecardcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GveDuplicateOverCardCount = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          gveduplicateovercardcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GveDuplicateBossLossHpCount = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          gveduplicatebosslosshpcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GveDuplicateRewardGold = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          gveduplicaterewardgold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GlobalTemplate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Config.GlobalTemplate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 NameLimit = 1;
  if (this->namelimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_namelimit(), target);
  }

  // int32 DefaultDropGroup = 2;
  if (this->defaultdropgroup() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_defaultdropgroup(), target);
  }

  // int32 ChangeNameCost = 3;
  if (this->changenamecost() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_changenamecost(), target);
  }

  // int32 PlayeEnergyRecoverTime = 4;
  if (this->playeenergyrecovertime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_playeenergyrecovertime(), target);
  }

  // repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_fieldheronumlimits_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_fieldheronumlimits(i), target, stream);
  }

  // int32 FormationNameLimit = 6;
  if (this->formationnamelimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_formationnamelimit(), target);
  }

  // int32 FormationCareerLimit = 7;
  if (this->formationcareerlimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_formationcareerlimit(), target);
  }

  // repeated int32 InitialFormaitonHeros = 8;
  {
    int byte_size = _initialformaitonheros_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          8, _internal_initialformaitonheros(), byte_size, target);
    }
  }

  // int32 FormationCount = 9;
  if (this->formationcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_formationcount(), target);
  }

  // bool HeroNormalTalentCountLimit = 10;
  if (this->heronormaltalentcountlimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_heronormaltalentcountlimit(), target);
  }

  // bool HeroHealthCorrectionBase = 11;
  if (this->herohealthcorrectionbase() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_herohealthcorrectionbase(), target);
  }

  // double HeroHealthCorrectionCoe = 12;
  if (!(this->herohealthcorrectioncoe() <= 0 && this->herohealthcorrectioncoe() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(12, this->_internal_herohealthcorrectioncoe(), target);
  }

  // int32 HeroAttackCorrectionBase = 13;
  if (this->heroattackcorrectionbase() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(13, this->_internal_heroattackcorrectionbase(), target);
  }

  // double HeroAttackCorrectionCoe = 14;
  if (!(this->heroattackcorrectioncoe() <= 0 && this->heroattackcorrectioncoe() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(14, this->_internal_heroattackcorrectioncoe(), target);
  }

  // int32 HeroDodgeCorrectionBase = 15;
  if (this->herododgecorrectionbase() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(15, this->_internal_herododgecorrectionbase(), target);
  }

  // double HeroDodgeCorrectionCoe = 16;
  if (!(this->herododgecorrectioncoe() <= 0 && this->herododgecorrectioncoe() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(16, this->_internal_herododgecorrectioncoe(), target);
  }

  // int32 HeroCritCorrectionBase = 17;
  if (this->herocritcorrectionbase() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(17, this->_internal_herocritcorrectionbase(), target);
  }

  // double HeroCritCorrectionCoe = 18;
  if (!(this->herocritcorrectioncoe() <= 0 && this->herocritcorrectioncoe() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(18, this->_internal_herocritcorrectioncoe(), target);
  }

  // int32 HeroBlckCorrectionBase = 19;
  if (this->heroblckcorrectionbase() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(19, this->_internal_heroblckcorrectionbase(), target);
  }

  // double HeroBlckCorrectionCoe = 20;
  if (!(this->heroblckcorrectioncoe() <= 0 && this->heroblckcorrectioncoe() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(20, this->_internal_heroblckcorrectioncoe(), target);
  }

  // .Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;
  if (this->has_heroattributeevaluation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::heroattributeevaluation(this), target, stream);
  }

  // repeated int32 HeroLevelLimits = 22;
  {
    int byte_size = _herolevellimits_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          22, _internal_herolevellimits(), byte_size, target);
    }
  }

  // int32 HeroStarLimit = 23;
  if (this->herostarlimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(23, this->_internal_herostarlimit(), target);
  }

  // repeated int32 HeroStarUpNeedCards = 24;
  {
    int byte_size = _herostarupneedcards_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          24, _internal_herostarupneedcards(), byte_size, target);
    }
  }

  // repeated int32 HeroStarUpNeedGolds = 25;
  {
    int byte_size = _herostarupneedgolds_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          25, _internal_herostarupneedgolds(), byte_size, target);
    }
  }

  // repeated int32 HeroStarUpGainNormalTalents = 26;
  {
    int byte_size = _herostarupgainnormaltalents_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          26, _internal_herostarupgainnormaltalents(), byte_size, target);
    }
  }

  // repeated int32 HeroStarUpCancelGiveCards = 27;
  {
    int byte_size = _herostarupcancelgivecards_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          27, _internal_herostarupcancelgivecards(), byte_size, target);
    }
  }

  // double HeroStarUpCancelGiveGold = 28;
  if (!(this->herostarupcancelgivegold() <= 0 && this->herostarupcancelgivegold() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(28, this->_internal_herostarupcancelgivegold(), target);
  }

  // repeated int32 HeroLearningNeedGolds = 29;
  {
    int byte_size = _herolearningneedgolds_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          29, _internal_herolearningneedgolds(), byte_size, target);
    }
  }

  // repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_heroclassneedcards_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(30, this->_internal_heroclassneedcards(i), target, stream);
  }

  // double HeroSkillTrainingGiveExpCoe = 31;
  if (!(this->heroskilltraininggiveexpcoe() <= 0 && this->heroskilltraininggiveexpcoe() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(31, this->_internal_heroskilltraininggiveexpcoe(), target);
  }

  // int32 NormalLotteryFreeTime = 32;
  if (this->normallotteryfreetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(32, this->_internal_normallotteryfreetime(), target);
  }

  // int32 SpecialLotteryFreeTime = 33;
  if (this->speciallotteryfreetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(33, this->_internal_speciallotteryfreetime(), target);
  }

  // int32 LotteryTicketDiamondCost = 34;
  if (this->lotteryticketdiamondcost() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(34, this->_internal_lotteryticketdiamondcost(), target);
  }

  // repeated string GuildIcons = 35;
  for (int i = 0, n = this->_internal_guildicons_size(); i < n; i++) {
    const auto& s = this->_internal_guildicons(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Config.GlobalTemplate.GuildIcons");
    target = stream->WriteString(35, s, target);
  }

  // int32 GuildSeekHelpNum = 36;
  if (this->guildseekhelpnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(36, this->_internal_guildseekhelpnum(), target);
  }

  // int32 TavernTaskBrisk = 37;
  if (this->taverntaskbrisk() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(37, this->_internal_taverntaskbrisk(), target);
  }

  // int32 GveMapBattleCount = 38;
  if (this->gvemapbattlecount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(38, this->_internal_gvemapbattlecount(), target);
  }

  // repeated int32 GveDuplicateCardElementCounts = 39;
  {
    int byte_size = _gveduplicatecardelementcounts_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          39, _internal_gveduplicatecardelementcounts(), byte_size, target);
    }
  }

  // int32 GveDuplicateHandCard = 40;
  if (this->gveduplicatehandcard() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(40, this->_internal_gveduplicatehandcard(), target);
  }

  // int32 GveDuplicateRoundTime = 41;
  if (this->gveduplicateroundtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(41, this->_internal_gveduplicateroundtime(), target);
  }

  // int32 GveDuplicateWinDeleteCardCount = 42;
  if (this->gveduplicatewindeletecardcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(42, this->_internal_gveduplicatewindeletecardcount(), target);
  }

  // int32 GveDuplicateLoseDeleteCardCount = 43;
  if (this->gveduplicatelosedeletecardcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(43, this->_internal_gveduplicatelosedeletecardcount(), target);
  }

  // int32 GveDuplicateOverCardCount = 44;
  if (this->gveduplicateovercardcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(44, this->_internal_gveduplicateovercardcount(), target);
  }

  // int32 GveDuplicateBossLossHpCount = 45;
  if (this->gveduplicatebosslosshpcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(45, this->_internal_gveduplicatebosslosshpcount(), target);
  }

  // int32 GveDuplicateRewardGold = 46;
  if (this->gveduplicaterewardgold() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(46, this->_internal_gveduplicaterewardgold(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Config.GlobalTemplate)
  return target;
}

size_t GlobalTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Config.GlobalTemplate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Config.GlobalTemplate.Fieldheronumlimit_ FieldHeroNumLimits = 5;
  total_size += 1UL * this->_internal_fieldheronumlimits_size();
  for (const auto& msg : this->fieldheronumlimits_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated int32 InitialFormaitonHeros = 8;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->initialformaitonheros_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _initialformaitonheros_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 HeroLevelLimits = 22;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->herolevellimits_);
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _herolevellimits_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 HeroStarUpNeedCards = 24;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->herostarupneedcards_);
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _herostarupneedcards_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 HeroStarUpNeedGolds = 25;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->herostarupneedgolds_);
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _herostarupneedgolds_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 HeroStarUpGainNormalTalents = 26;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->herostarupgainnormaltalents_);
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _herostarupgainnormaltalents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 HeroStarUpCancelGiveCards = 27;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->herostarupcancelgivecards_);
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _herostarupcancelgivecards_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 HeroLearningNeedGolds = 29;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->herolearningneedgolds_);
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _herolearningneedgolds_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .Config.GlobalTemplate.Heroclassneedcard_ heroClassNeedCards = 30;
  total_size += 2UL * this->_internal_heroclassneedcards_size();
  for (const auto& msg : this->heroclassneedcards_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string GuildIcons = 35;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(guildicons_.size());
  for (int i = 0, n = guildicons_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      guildicons_.Get(i));
  }

  // repeated int32 GveDuplicateCardElementCounts = 39;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->gveduplicatecardelementcounts_);
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _gveduplicatecardelementcounts_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .Config.GlobalTemplate.Heroattributeevaluation_ HeroAttributeEvaluation = 21;
  if (this->has_heroattributeevaluation()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *heroattributeevaluation_);
  }

  // int32 NameLimit = 1;
  if (this->namelimit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_namelimit());
  }

  // int32 DefaultDropGroup = 2;
  if (this->defaultdropgroup() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_defaultdropgroup());
  }

  // int32 ChangeNameCost = 3;
  if (this->changenamecost() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_changenamecost());
  }

  // int32 PlayeEnergyRecoverTime = 4;
  if (this->playeenergyrecovertime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_playeenergyrecovertime());
  }

  // int32 FormationNameLimit = 6;
  if (this->formationnamelimit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_formationnamelimit());
  }

  // int32 FormationCareerLimit = 7;
  if (this->formationcareerlimit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_formationcareerlimit());
  }

  // int32 FormationCount = 9;
  if (this->formationcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_formationcount());
  }

  // bool HeroNormalTalentCountLimit = 10;
  if (this->heronormaltalentcountlimit() != 0) {
    total_size += 1 + 1;
  }

  // bool HeroHealthCorrectionBase = 11;
  if (this->herohealthcorrectionbase() != 0) {
    total_size += 1 + 1;
  }

  // double HeroHealthCorrectionCoe = 12;
  if (!(this->herohealthcorrectioncoe() <= 0 && this->herohealthcorrectioncoe() >= 0)) {
    total_size += 1 + 8;
  }

  // double HeroAttackCorrectionCoe = 14;
  if (!(this->heroattackcorrectioncoe() <= 0 && this->heroattackcorrectioncoe() >= 0)) {
    total_size += 1 + 8;
  }

  // int32 HeroAttackCorrectionBase = 13;
  if (this->heroattackcorrectionbase() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_heroattackcorrectionbase());
  }

  // int32 HeroDodgeCorrectionBase = 15;
  if (this->herododgecorrectionbase() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_herododgecorrectionbase());
  }

  // double HeroDodgeCorrectionCoe = 16;
  if (!(this->herododgecorrectioncoe() <= 0 && this->herododgecorrectioncoe() >= 0)) {
    total_size += 2 + 8;
  }

  // double HeroCritCorrectionCoe = 18;
  if (!(this->herocritcorrectioncoe() <= 0 && this->herocritcorrectioncoe() >= 0)) {
    total_size += 2 + 8;
  }

  // int32 HeroCritCorrectionBase = 17;
  if (this->herocritcorrectionbase() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_herocritcorrectionbase());
  }

  // int32 HeroBlckCorrectionBase = 19;
  if (this->heroblckcorrectionbase() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_heroblckcorrectionbase());
  }

  // double HeroBlckCorrectionCoe = 20;
  if (!(this->heroblckcorrectioncoe() <= 0 && this->heroblckcorrectioncoe() >= 0)) {
    total_size += 2 + 8;
  }

  // int32 HeroStarLimit = 23;
  if (this->herostarlimit() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_herostarlimit());
  }

  // int32 NormalLotteryFreeTime = 32;
  if (this->normallotteryfreetime() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_normallotteryfreetime());
  }

  // double HeroStarUpCancelGiveGold = 28;
  if (!(this->herostarupcancelgivegold() <= 0 && this->herostarupcancelgivegold() >= 0)) {
    total_size += 2 + 8;
  }

  // double HeroSkillTrainingGiveExpCoe = 31;
  if (!(this->heroskilltraininggiveexpcoe() <= 0 && this->heroskilltraininggiveexpcoe() >= 0)) {
    total_size += 2 + 8;
  }

  // int32 SpecialLotteryFreeTime = 33;
  if (this->speciallotteryfreetime() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_speciallotteryfreetime());
  }

  // int32 LotteryTicketDiamondCost = 34;
  if (this->lotteryticketdiamondcost() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_lotteryticketdiamondcost());
  }

  // int32 GuildSeekHelpNum = 36;
  if (this->guildseekhelpnum() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_guildseekhelpnum());
  }

  // int32 TavernTaskBrisk = 37;
  if (this->taverntaskbrisk() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_taverntaskbrisk());
  }

  // int32 GveMapBattleCount = 38;
  if (this->gvemapbattlecount() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gvemapbattlecount());
  }

  // int32 GveDuplicateHandCard = 40;
  if (this->gveduplicatehandcard() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gveduplicatehandcard());
  }

  // int32 GveDuplicateRoundTime = 41;
  if (this->gveduplicateroundtime() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gveduplicateroundtime());
  }

  // int32 GveDuplicateWinDeleteCardCount = 42;
  if (this->gveduplicatewindeletecardcount() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gveduplicatewindeletecardcount());
  }

  // int32 GveDuplicateLoseDeleteCardCount = 43;
  if (this->gveduplicatelosedeletecardcount() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gveduplicatelosedeletecardcount());
  }

  // int32 GveDuplicateOverCardCount = 44;
  if (this->gveduplicateovercardcount() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gveduplicateovercardcount());
  }

  // int32 GveDuplicateBossLossHpCount = 45;
  if (this->gveduplicatebosslosshpcount() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gveduplicatebosslosshpcount());
  }

  // int32 GveDuplicateRewardGold = 46;
  if (this->gveduplicaterewardgold() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gveduplicaterewardgold());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GlobalTemplate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Config.GlobalTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  const GlobalTemplate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GlobalTemplate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Config.GlobalTemplate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Config.GlobalTemplate)
    MergeFrom(*source);
  }
}

void GlobalTemplate::MergeFrom(const GlobalTemplate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Config.GlobalTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fieldheronumlimits_.MergeFrom(from.fieldheronumlimits_);
  initialformaitonheros_.MergeFrom(from.initialformaitonheros_);
  herolevellimits_.MergeFrom(from.herolevellimits_);
  herostarupneedcards_.MergeFrom(from.herostarupneedcards_);
  herostarupneedgolds_.MergeFrom(from.herostarupneedgolds_);
  herostarupgainnormaltalents_.MergeFrom(from.herostarupgainnormaltalents_);
  herostarupcancelgivecards_.MergeFrom(from.herostarupcancelgivecards_);
  herolearningneedgolds_.MergeFrom(from.herolearningneedgolds_);
  heroclassneedcards_.MergeFrom(from.heroclassneedcards_);
  guildicons_.MergeFrom(from.guildicons_);
  gveduplicatecardelementcounts_.MergeFrom(from.gveduplicatecardelementcounts_);
  if (from.has_heroattributeevaluation()) {
    _internal_mutable_heroattributeevaluation()->::Config::GlobalTemplate_Heroattributeevaluation_::MergeFrom(from._internal_heroattributeevaluation());
  }
  if (from.namelimit() != 0) {
    _internal_set_namelimit(from._internal_namelimit());
  }
  if (from.defaultdropgroup() != 0) {
    _internal_set_defaultdropgroup(from._internal_defaultdropgroup());
  }
  if (from.changenamecost() != 0) {
    _internal_set_changenamecost(from._internal_changenamecost());
  }
  if (from.playeenergyrecovertime() != 0) {
    _internal_set_playeenergyrecovertime(from._internal_playeenergyrecovertime());
  }
  if (from.formationnamelimit() != 0) {
    _internal_set_formationnamelimit(from._internal_formationnamelimit());
  }
  if (from.formationcareerlimit() != 0) {
    _internal_set_formationcareerlimit(from._internal_formationcareerlimit());
  }
  if (from.formationcount() != 0) {
    _internal_set_formationcount(from._internal_formationcount());
  }
  if (from.heronormaltalentcountlimit() != 0) {
    _internal_set_heronormaltalentcountlimit(from._internal_heronormaltalentcountlimit());
  }
  if (from.herohealthcorrectionbase() != 0) {
    _internal_set_herohealthcorrectionbase(from._internal_herohealthcorrectionbase());
  }
  if (!(from.herohealthcorrectioncoe() <= 0 && from.herohealthcorrectioncoe() >= 0)) {
    _internal_set_herohealthcorrectioncoe(from._internal_herohealthcorrectioncoe());
  }
  if (!(from.heroattackcorrectioncoe() <= 0 && from.heroattackcorrectioncoe() >= 0)) {
    _internal_set_heroattackcorrectioncoe(from._internal_heroattackcorrectioncoe());
  }
  if (from.heroattackcorrectionbase() != 0) {
    _internal_set_heroattackcorrectionbase(from._internal_heroattackcorrectionbase());
  }
  if (from.herododgecorrectionbase() != 0) {
    _internal_set_herododgecorrectionbase(from._internal_herododgecorrectionbase());
  }
  if (!(from.herododgecorrectioncoe() <= 0 && from.herododgecorrectioncoe() >= 0)) {
    _internal_set_herododgecorrectioncoe(from._internal_herododgecorrectioncoe());
  }
  if (!(from.herocritcorrectioncoe() <= 0 && from.herocritcorrectioncoe() >= 0)) {
    _internal_set_herocritcorrectioncoe(from._internal_herocritcorrectioncoe());
  }
  if (from.herocritcorrectionbase() != 0) {
    _internal_set_herocritcorrectionbase(from._internal_herocritcorrectionbase());
  }
  if (from.heroblckcorrectionbase() != 0) {
    _internal_set_heroblckcorrectionbase(from._internal_heroblckcorrectionbase());
  }
  if (!(from.heroblckcorrectioncoe() <= 0 && from.heroblckcorrectioncoe() >= 0)) {
    _internal_set_heroblckcorrectioncoe(from._internal_heroblckcorrectioncoe());
  }
  if (from.herostarlimit() != 0) {
    _internal_set_herostarlimit(from._internal_herostarlimit());
  }
  if (from.normallotteryfreetime() != 0) {
    _internal_set_normallotteryfreetime(from._internal_normallotteryfreetime());
  }
  if (!(from.herostarupcancelgivegold() <= 0 && from.herostarupcancelgivegold() >= 0)) {
    _internal_set_herostarupcancelgivegold(from._internal_herostarupcancelgivegold());
  }
  if (!(from.heroskilltraininggiveexpcoe() <= 0 && from.heroskilltraininggiveexpcoe() >= 0)) {
    _internal_set_heroskilltraininggiveexpcoe(from._internal_heroskilltraininggiveexpcoe());
  }
  if (from.speciallotteryfreetime() != 0) {
    _internal_set_speciallotteryfreetime(from._internal_speciallotteryfreetime());
  }
  if (from.lotteryticketdiamondcost() != 0) {
    _internal_set_lotteryticketdiamondcost(from._internal_lotteryticketdiamondcost());
  }
  if (from.guildseekhelpnum() != 0) {
    _internal_set_guildseekhelpnum(from._internal_guildseekhelpnum());
  }
  if (from.taverntaskbrisk() != 0) {
    _internal_set_taverntaskbrisk(from._internal_taverntaskbrisk());
  }
  if (from.gvemapbattlecount() != 0) {
    _internal_set_gvemapbattlecount(from._internal_gvemapbattlecount());
  }
  if (from.gveduplicatehandcard() != 0) {
    _internal_set_gveduplicatehandcard(from._internal_gveduplicatehandcard());
  }
  if (from.gveduplicateroundtime() != 0) {
    _internal_set_gveduplicateroundtime(from._internal_gveduplicateroundtime());
  }
  if (from.gveduplicatewindeletecardcount() != 0) {
    _internal_set_gveduplicatewindeletecardcount(from._internal_gveduplicatewindeletecardcount());
  }
  if (from.gveduplicatelosedeletecardcount() != 0) {
    _internal_set_gveduplicatelosedeletecardcount(from._internal_gveduplicatelosedeletecardcount());
  }
  if (from.gveduplicateovercardcount() != 0) {
    _internal_set_gveduplicateovercardcount(from._internal_gveduplicateovercardcount());
  }
  if (from.gveduplicatebosslosshpcount() != 0) {
    _internal_set_gveduplicatebosslosshpcount(from._internal_gveduplicatebosslosshpcount());
  }
  if (from.gveduplicaterewardgold() != 0) {
    _internal_set_gveduplicaterewardgold(from._internal_gveduplicaterewardgold());
  }
}

void GlobalTemplate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Config.GlobalTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalTemplate::CopyFrom(const GlobalTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Config.GlobalTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalTemplate::IsInitialized() const {
  return true;
}

void GlobalTemplate::InternalSwap(GlobalTemplate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  fieldheronumlimits_.InternalSwap(&other->fieldheronumlimits_);
  initialformaitonheros_.InternalSwap(&other->initialformaitonheros_);
  herolevellimits_.InternalSwap(&other->herolevellimits_);
  herostarupneedcards_.InternalSwap(&other->herostarupneedcards_);
  herostarupneedgolds_.InternalSwap(&other->herostarupneedgolds_);
  herostarupgainnormaltalents_.InternalSwap(&other->herostarupgainnormaltalents_);
  herostarupcancelgivecards_.InternalSwap(&other->herostarupcancelgivecards_);
  herolearningneedgolds_.InternalSwap(&other->herolearningneedgolds_);
  heroclassneedcards_.InternalSwap(&other->heroclassneedcards_);
  guildicons_.InternalSwap(&other->guildicons_);
  gveduplicatecardelementcounts_.InternalSwap(&other->gveduplicatecardelementcounts_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GlobalTemplate, gveduplicaterewardgold_)
      + sizeof(GlobalTemplate::gveduplicaterewardgold_)
      - PROTOBUF_FIELD_OFFSET(GlobalTemplate, heroattributeevaluation_)>(
          reinterpret_cast<char*>(&heroattributeevaluation_),
          reinterpret_cast<char*>(&other->heroattributeevaluation_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GlobalTemplate::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Config
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Config::GlobalTemplate_Fieldheronumlimit_* Arena::CreateMaybeMessage< ::Config::GlobalTemplate_Fieldheronumlimit_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::GlobalTemplate_Fieldheronumlimit_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::GlobalTemplate_Heroattributeevaluation_* Arena::CreateMaybeMessage< ::Config::GlobalTemplate_Heroattributeevaluation_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::GlobalTemplate_Heroattributeevaluation_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::GlobalTemplate_Heroclassneedcard_* Arena::CreateMaybeMessage< ::Config::GlobalTemplate_Heroclassneedcard_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::GlobalTemplate_Heroclassneedcard_ >(arena);
}
template<> PROTOBUF_NOINLINE ::Config::GlobalTemplate* Arena::CreateMaybeMessage< ::Config::GlobalTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Config::GlobalTemplate >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
