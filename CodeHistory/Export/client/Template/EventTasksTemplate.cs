//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Config
{
    
    
    public class EventTasksTemplate : IGenerateObject
    {
        
        /// <summary>
        /// 任务ID
        /// <summary>
        public int Id { get; private set; }
        
        /// <summary>
        /// 进度显示
        /// <summary>
        public int ShowProgress { get; private set; }
        
        /// <summary>
        /// 跳转
        /// <summary>
        public AccessId_ AccessId { get; private set; }
        
        /// <summary>
        /// 任务信息
        /// <summary>
        public TaskInfo_ TaskInfo { get; private set; }
        
        /// <summary>
        /// 任务绑定的事件
        /// <summary>
        public int[] BindEventIds { get; private set; }
        
        /// <summary>
        /// 下一个任务
        /// <summary>
        public int NextTask { get; private set; }
        
        /// <summary>
        /// 任务奖励
        /// <summary>
        public Reward_[] Rewards { get; private set; }
        
        public void Read(IConfigElement element)
        {
            this.Id = GeneratorUtility.Get(element, "Id",this.Id);
            this.ShowProgress = GeneratorUtility.Get(element, "ShowProgress",this.ShowProgress);
            this.AccessId = GeneratorUtility.Get(element, "AccessId",this.AccessId);
            this.TaskInfo = GeneratorUtility.Get(element, "TaskInfo",this.TaskInfo);
            this.BindEventIds = GeneratorUtility.Get(element, "BindEventIds",this.BindEventIds);
            this.NextTask = GeneratorUtility.Get(element, "NextTask",this.NextTask);
            this.Rewards = GeneratorUtility.Get(element, "Rewards",this.Rewards);
            this.OnInit();
        }
        
        /// <summary>
        /// Init Function
        /// <summary>
        public virtual void OnInit()
        {
        }
        
        public static EventTasksTemplate[] Load()
        {
            return Load<EventTasksTemplate>();
        }
        
        public static T[] Load<T>()
            where T : EventTasksTemplate, new ()
        {
            return GeneratorUtility.Load<T>("EventTasksTemplate","EventTask");
        }
        
        // 跳转
        public sealed class AccessId_ : IGenerateObject
        {
            
            public int Id { get; private set; }
            
            public int Param1 { get; private set; }
            
            public void Read(IConfigElement element)
            {
                this.Id = GeneratorUtility.Get(element, "Id",this.Id);
                this.Param1 = GeneratorUtility.Get(element, "Param1",this.Param1);
            }
        }
        
        // 任务信息
        public sealed class TaskInfo_ : IGenerateObject
        {
            
            public int Type { get; private set; }
            
            public int Param1 { get; private set; }
            
            public int Param2 { get; private set; }
            
            public int Param3 { get; private set; }
            
            public void Read(IConfigElement element)
            {
                this.Type = GeneratorUtility.Get(element, "Type",this.Type);
                this.Param1 = GeneratorUtility.Get(element, "Param1",this.Param1);
                this.Param2 = GeneratorUtility.Get(element, "Param2",this.Param2);
                this.Param3 = GeneratorUtility.Get(element, "Param3",this.Param3);
            }
        }
        
        public sealed class Reward_ : IGenerateObject
        {
            
            public int Type { get; private set; }
            
            public int Id { get; private set; }
            
            public int Count { get; private set; }
            
            public int Param1 { get; private set; }
            
            public void Read(IConfigElement element)
            {
                this.Type = GeneratorUtility.Get(element, "Type",this.Type);
                this.Id = GeneratorUtility.Get(element, "Id",this.Id);
                this.Count = GeneratorUtility.Get(element, "Count",this.Count);
                this.Param1 = GeneratorUtility.Get(element, "Param1",this.Param1);
            }
        }
    }
}
