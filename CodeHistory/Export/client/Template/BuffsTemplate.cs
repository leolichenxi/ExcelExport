//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Config
{
    
    
    public class BuffsTemplate : IGenerateObject
    {
        
        /// <summary>
        /// BuffID
        /// <summary>
        public int Id { get; private set; }
        
        /// <summary>
        /// BUFF组ID
        /// <summary>
        public int Group { get; private set; }
        
        /// <summary>
        /// Buff类型（1瞬时2持续）
        /// <summary>
        public int Type { get; private set; }
        
        /// <summary>
        /// buff状态(0无状态1增益2减益）
        /// <summary>
        public int Kind { get; private set; }
        
        /// <summary>
        /// Buff持续时间（当Type为2时，填-1表示迷宫中死亡或单场战斗结束仍然保留)
        /// <summary>
        public int LastTime { get; private set; }
        
        /// <summary>
        /// 堆叠
        /// <summary>
        public StackLimit_ StackLimit { get; private set; }
        
        /// <summary>
        /// 覆盖类型
        /// <summary>
        public Cover_ Cover { get; private set; }
        
        /// <summary>
        /// BUFF触发条件
        /// <summary>
        public Trigger_ Trigger { get; private set; }
        
        /// <summary>
        /// BUFF触发几率
        /// <summary>
        public int Probility { get; private set; }
        
        /// <summary>
        /// 索敌与筛选
        /// <summary>
        public SearchTarget_ SearchTarget { get; private set; }
        
        /// <summary>
        /// BUFF效果
        /// <summary>
        public Action_[] Actions { get; private set; }
        
        /// <summary>
        /// BUFF结束条件
        /// <summary>
        public EndCondition_ EndCondition { get; private set; }
        
        /// <summary>
        /// 是否显示文本
        /// <summary>
        public bool IsOwnText { get; private set; }
        
        /// <summary>
        /// 特效ID
        /// <summary>
        public int[] EffectIds { get; private set; }
        
        /// <summary>
        /// buff战力系数
        /// <summary>
        public double[] Powers { get; private set; }
        
        /// <summary>
        /// buff图标
        /// <summary>
        public string Icon { get; private set; }
        
        public void Read(IConfigElement element)
        {
            this.Id = GeneratorUtility.Get(element, "Id",this.Id);
            this.Group = GeneratorUtility.Get(element, "Group",this.Group);
            this.Type = GeneratorUtility.Get(element, "Type",this.Type);
            this.Kind = GeneratorUtility.Get(element, "Kind",this.Kind);
            this.LastTime = GeneratorUtility.Get(element, "LastTime",this.LastTime);
            this.StackLimit = GeneratorUtility.Get(element, "StackLimit",this.StackLimit);
            this.Cover = GeneratorUtility.Get(element, "Cover",this.Cover);
            this.Trigger = GeneratorUtility.Get(element, "Trigger",this.Trigger);
            this.Probility = GeneratorUtility.Get(element, "Probility",this.Probility);
            this.SearchTarget = GeneratorUtility.Get(element, "SearchTarget",this.SearchTarget);
            this.Actions = GeneratorUtility.Get(element, "Actions",this.Actions);
            this.EndCondition = GeneratorUtility.Get(element, "EndCondition",this.EndCondition);
            this.IsOwnText = GeneratorUtility.Get(element, "IsOwnText",this.IsOwnText);
            this.EffectIds = GeneratorUtility.Get(element, "EffectIds",this.EffectIds);
            this.Powers = GeneratorUtility.Get(element, "Powers",this.Powers);
            this.Icon = GeneratorUtility.Get(element, "Icon",this.Icon);
            this.OnInit();
        }
        
        /// <summary>
        /// Init Function
        /// <summary>
        public virtual void OnInit()
        {
        }
        
        public static BuffsTemplate[] Load()
        {
            return Load<BuffsTemplate>();
        }
        
        public static T[] Load<T>()
            where T : BuffsTemplate, new ()
        {
            return GeneratorUtility.Load<T>("BuffsTemplate","Buff");
        }
        
        // 堆叠
        public sealed class StackLimit_ : IGenerateObject
        {
            
            public int Type { get; private set; }
            
            public int Num { get; private set; }
            
            public int Time { get; private set; }
            
            public void Read(IConfigElement element)
            {
                this.Type = GeneratorUtility.Get(element, "Type",this.Type);
                this.Num = GeneratorUtility.Get(element, "Num",this.Num);
                this.Time = GeneratorUtility.Get(element, "Time",this.Time);
            }
        }
        
        // 覆盖类型
        public sealed class Cover_ : IGenerateObject
        {
            
            public int TypeId { get; private set; }
            
            public int Condition { get; private set; }
            
            public int Num { get; private set; }
            
            public void Read(IConfigElement element)
            {
                this.TypeId = GeneratorUtility.Get(element, "TypeId",this.TypeId);
                this.Condition = GeneratorUtility.Get(element, "Condition",this.Condition);
                this.Num = GeneratorUtility.Get(element, "Num",this.Num);
            }
        }
        
        // BUFF触发条件
        public sealed class Trigger_ : IGenerateObject
        {
            
            public int Center { get; private set; }
            
            public int Type { get; private set; }
            
            public int Param1 { get; private set; }
            
            public int Param2 { get; private set; }
            
            public int Param3 { get; private set; }
            
            public int Param4 { get; private set; }
            
            public void Read(IConfigElement element)
            {
                this.Center = GeneratorUtility.Get(element, "Center",this.Center);
                this.Type = GeneratorUtility.Get(element, "Type",this.Type);
                this.Param1 = GeneratorUtility.Get(element, "Param1",this.Param1);
                this.Param2 = GeneratorUtility.Get(element, "Param2",this.Param2);
                this.Param3 = GeneratorUtility.Get(element, "Param3",this.Param3);
                this.Param4 = GeneratorUtility.Get(element, "Param4",this.Param4);
            }
        }
        
        // 索敌与筛选
        public sealed class SearchTarget_ : IGenerateObject
        {
            
            public int Type { get; private set; }
            
            public int X { get; private set; }
            
            public int Y { get; private set; }
            
            public int Condition1 { get; private set; }
            
            public int Condition2 { get; private set; }
            
            public int Num { get; private set; }
            
            public int Kind { get; private set; }
            
            public void Read(IConfigElement element)
            {
                this.Type = GeneratorUtility.Get(element, "Type",this.Type);
                this.X = GeneratorUtility.Get(element, "X",this.X);
                this.Y = GeneratorUtility.Get(element, "Y",this.Y);
                this.Condition1 = GeneratorUtility.Get(element, "Condition1",this.Condition1);
                this.Condition2 = GeneratorUtility.Get(element, "Condition2",this.Condition2);
                this.Num = GeneratorUtility.Get(element, "Num",this.Num);
                this.Kind = GeneratorUtility.Get(element, "Kind",this.Kind);
            }
        }
        
        public sealed class Action_ : IGenerateObject
        {
            
            public int Action { get; private set; }
            
            public int Type { get; private set; }
            
            public int Num1 { get; private set; }
            
            public int Num2 { get; private set; }
            
            public int Num3 { get; private set; }
            
            public int Num4 { get; private set; }
            
            public void Read(IConfigElement element)
            {
                this.Action = GeneratorUtility.Get(element, "Action",this.Action);
                this.Type = GeneratorUtility.Get(element, "Type",this.Type);
                this.Num1 = GeneratorUtility.Get(element, "Num1",this.Num1);
                this.Num2 = GeneratorUtility.Get(element, "Num2",this.Num2);
                this.Num3 = GeneratorUtility.Get(element, "Num3",this.Num3);
                this.Num4 = GeneratorUtility.Get(element, "Num4",this.Num4);
            }
        }
        
        // BUFF结束条件
        public sealed class EndCondition_ : IGenerateObject
        {
            
            public int TriggerType { get; private set; }
            
            public int Num1 { get; private set; }
            
            public int Num2 { get; private set; }
            
            public int Num3 { get; private set; }
            
            public void Read(IConfigElement element)
            {
                this.TriggerType = GeneratorUtility.Get(element, "TriggerType",this.TriggerType);
                this.Num1 = GeneratorUtility.Get(element, "Num1",this.Num1);
                this.Num2 = GeneratorUtility.Get(element, "Num2",this.Num2);
                this.Num3 = GeneratorUtility.Get(element, "Num3",this.Num3);
            }
        }
    }
}
