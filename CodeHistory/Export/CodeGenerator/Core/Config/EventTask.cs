// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: EventTask.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from EventTask.proto</summary>
public static partial class EventTaskReflection {

  #region Descriptor
  /// <summary>File descriptor for EventTask.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static EventTaskReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg9FdmVudFRhc2sucHJvdG8iggMKCUV2ZW50VGFzaxIKCgJJZBgBIAEoBRIU",
          "CgxTaG93UHJvZ3Jlc3MYAiABKAUSJgoIQWNjZXNzSWQYAyABKAsyFC5FdmVu",
          "dFRhc2suQWNjZXNzaWRfEiYKCFRhc2tJbmZvGAQgASgLMhQuRXZlbnRUYXNr",
          "LlRhc2tpbmZvXxIUCgxCaW5kRXZlbnRJZHMYBSADKAUSEAoITmV4dFRhc2sY",
          "BiABKAUSIwoHUmV3YXJkcxgHIAMoCzISLkV2ZW50VGFzay5SZXdhcmRfGicK",
          "CUFjY2Vzc2lkXxIKCgJJZBgBIAEoBRIOCgZQYXJhbTEYAiABKAUaSQoJVGFz",
          "a2luZm9fEgwKBFR5cGUYASABKAUSDgoGUGFyYW0xGAIgASgFEg4KBlBhcmFt",
          "MhgDIAEoBRIOCgZQYXJhbTMYBCABKAUaQgoHUmV3YXJkXxIMCgRUeXBlGAEg",
          "ASgFEgoKAklkGAIgASgFEg0KBUNvdW50GAMgASgFEg4KBlBhcmFtMRgEIAEo",
          "BSIvCg1FdmVudFRhc2tsaXN0Eh4KCkV2ZW50VGFza3MYASADKAsyCi5FdmVu",
          "dFRhc2tiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::EventTask), global::EventTask.Parser, new[]{ "Id", "ShowProgress", "AccessId", "TaskInfo", "BindEventIds", "NextTask", "Rewards" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EventTask.Types.Accessid_), global::EventTask.Types.Accessid_.Parser, new[]{ "Id", "Param1" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EventTask.Types.Taskinfo_), global::EventTask.Types.Taskinfo_.Parser, new[]{ "Type", "Param1", "Param2", "Param3" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EventTask.Types.Reward_), global::EventTask.Types.Reward_.Parser, new[]{ "Type", "Id", "Count", "Param1" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::EventTasklist), global::EventTasklist.Parser, new[]{ "EventTasks" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class EventTask : pb::IMessage<EventTask>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<EventTask> _parser = new pb::MessageParser<EventTask>(() => new EventTask());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EventTask> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EventTaskReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EventTask() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EventTask(EventTask other) : this() {
    id_ = other.id_;
    showProgress_ = other.showProgress_;
    accessId_ = other.accessId_ != null ? other.accessId_.Clone() : null;
    taskInfo_ = other.taskInfo_ != null ? other.taskInfo_.Clone() : null;
    bindEventIds_ = other.bindEventIds_.Clone();
    nextTask_ = other.nextTask_;
    rewards_ = other.rewards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EventTask Clone() {
    return new EventTask(this);
  }

  /// <summary>Field number for the "Id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 任务ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "ShowProgress" field.</summary>
  public const int ShowProgressFieldNumber = 2;
  private int showProgress_;
  /// <summary>
  /// 进度显示
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ShowProgress {
    get { return showProgress_; }
    set {
      showProgress_ = value;
    }
  }

  /// <summary>Field number for the "AccessId" field.</summary>
  public const int AccessIdFieldNumber = 3;
  private global::EventTask.Types.Accessid_ accessId_;
  /// <summary>
  /// 跳转
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EventTask.Types.Accessid_ AccessId {
    get { return accessId_; }
    set {
      accessId_ = value;
    }
  }

  /// <summary>Field number for the "TaskInfo" field.</summary>
  public const int TaskInfoFieldNumber = 4;
  private global::EventTask.Types.Taskinfo_ taskInfo_;
  /// <summary>
  /// 任务信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EventTask.Types.Taskinfo_ TaskInfo {
    get { return taskInfo_; }
    set {
      taskInfo_ = value;
    }
  }

  /// <summary>Field number for the "BindEventIds" field.</summary>
  public const int BindEventIdsFieldNumber = 5;
  private static readonly pb::FieldCodec<int> _repeated_bindEventIds_codec
      = pb::FieldCodec.ForInt32(42);
  private readonly pbc::RepeatedField<int> bindEventIds_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 任务绑定的事件
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> BindEventIds {
    get { return bindEventIds_; }
  }

  /// <summary>Field number for the "NextTask" field.</summary>
  public const int NextTaskFieldNumber = 6;
  private int nextTask_;
  /// <summary>
  /// 下一个任务
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NextTask {
    get { return nextTask_; }
    set {
      nextTask_ = value;
    }
  }

  /// <summary>Field number for the "Rewards" field.</summary>
  public const int RewardsFieldNumber = 7;
  private static readonly pb::FieldCodec<global::EventTask.Types.Reward_> _repeated_rewards_codec
      = pb::FieldCodec.ForMessage(58, global::EventTask.Types.Reward_.Parser);
  private readonly pbc::RepeatedField<global::EventTask.Types.Reward_> rewards_ = new pbc::RepeatedField<global::EventTask.Types.Reward_>();
  /// <summary>
  /// 任务奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::EventTask.Types.Reward_> Rewards {
    get { return rewards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EventTask);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EventTask other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (ShowProgress != other.ShowProgress) return false;
    if (!object.Equals(AccessId, other.AccessId)) return false;
    if (!object.Equals(TaskInfo, other.TaskInfo)) return false;
    if(!bindEventIds_.Equals(other.bindEventIds_)) return false;
    if (NextTask != other.NextTask) return false;
    if(!rewards_.Equals(other.rewards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (ShowProgress != 0) hash ^= ShowProgress.GetHashCode();
    if (accessId_ != null) hash ^= AccessId.GetHashCode();
    if (taskInfo_ != null) hash ^= TaskInfo.GetHashCode();
    hash ^= bindEventIds_.GetHashCode();
    if (NextTask != 0) hash ^= NextTask.GetHashCode();
    hash ^= rewards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (ShowProgress != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ShowProgress);
    }
    if (accessId_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(AccessId);
    }
    if (taskInfo_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(TaskInfo);
    }
    bindEventIds_.WriteTo(output, _repeated_bindEventIds_codec);
    if (NextTask != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(NextTask);
    }
    rewards_.WriteTo(output, _repeated_rewards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (ShowProgress != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ShowProgress);
    }
    if (accessId_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(AccessId);
    }
    if (taskInfo_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(TaskInfo);
    }
    bindEventIds_.WriteTo(ref output, _repeated_bindEventIds_codec);
    if (NextTask != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(NextTask);
    }
    rewards_.WriteTo(ref output, _repeated_rewards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (ShowProgress != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShowProgress);
    }
    if (accessId_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessId);
    }
    if (taskInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskInfo);
    }
    size += bindEventIds_.CalculateSize(_repeated_bindEventIds_codec);
    if (NextTask != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextTask);
    }
    size += rewards_.CalculateSize(_repeated_rewards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EventTask other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.ShowProgress != 0) {
      ShowProgress = other.ShowProgress;
    }
    if (other.accessId_ != null) {
      if (accessId_ == null) {
        AccessId = new global::EventTask.Types.Accessid_();
      }
      AccessId.MergeFrom(other.AccessId);
    }
    if (other.taskInfo_ != null) {
      if (taskInfo_ == null) {
        TaskInfo = new global::EventTask.Types.Taskinfo_();
      }
      TaskInfo.MergeFrom(other.TaskInfo);
    }
    bindEventIds_.Add(other.bindEventIds_);
    if (other.NextTask != 0) {
      NextTask = other.NextTask;
    }
    rewards_.Add(other.rewards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          ShowProgress = input.ReadInt32();
          break;
        }
        case 26: {
          if (accessId_ == null) {
            AccessId = new global::EventTask.Types.Accessid_();
          }
          input.ReadMessage(AccessId);
          break;
        }
        case 34: {
          if (taskInfo_ == null) {
            TaskInfo = new global::EventTask.Types.Taskinfo_();
          }
          input.ReadMessage(TaskInfo);
          break;
        }
        case 42:
        case 40: {
          bindEventIds_.AddEntriesFrom(input, _repeated_bindEventIds_codec);
          break;
        }
        case 48: {
          NextTask = input.ReadInt32();
          break;
        }
        case 58: {
          rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          ShowProgress = input.ReadInt32();
          break;
        }
        case 26: {
          if (accessId_ == null) {
            AccessId = new global::EventTask.Types.Accessid_();
          }
          input.ReadMessage(AccessId);
          break;
        }
        case 34: {
          if (taskInfo_ == null) {
            TaskInfo = new global::EventTask.Types.Taskinfo_();
          }
          input.ReadMessage(TaskInfo);
          break;
        }
        case 42:
        case 40: {
          bindEventIds_.AddEntriesFrom(ref input, _repeated_bindEventIds_codec);
          break;
        }
        case 48: {
          NextTask = input.ReadInt32();
          break;
        }
        case 58: {
          rewards_.AddEntriesFrom(ref input, _repeated_rewards_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the EventTask message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class Accessid_ : pb::IMessage<Accessid_>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Accessid_> _parser = new pb::MessageParser<Accessid_>(() => new Accessid_());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Accessid_> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::EventTask.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Accessid_() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Accessid_(Accessid_ other) : this() {
        id_ = other.id_;
        param1_ = other.param1_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Accessid_ Clone() {
        return new Accessid_(this);
      }

      /// <summary>Field number for the "Id" field.</summary>
      public const int IdFieldNumber = 1;
      private int id_;
      /// <summary>
      /// Id
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Id {
        get { return id_; }
        set {
          id_ = value;
        }
      }

      /// <summary>Field number for the "Param1" field.</summary>
      public const int Param1FieldNumber = 2;
      private int param1_;
      /// <summary>
      /// Param1
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Param1 {
        get { return param1_; }
        set {
          param1_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Accessid_);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Accessid_ other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Param1 != other.Param1) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Id != 0) hash ^= Id.GetHashCode();
        if (Param1 != 0) hash ^= Param1.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (Id != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Id);
        }
        if (Param1 != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(Param1);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (Id != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Id);
        }
        if (Param1 != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(Param1);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Id != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
        }
        if (Param1 != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param1);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Accessid_ other) {
        if (other == null) {
          return;
        }
        if (other.Id != 0) {
          Id = other.Id;
        }
        if (other.Param1 != 0) {
          Param1 = other.Param1;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 16: {
              Param1 = input.ReadInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 16: {
              Param1 = input.ReadInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class Taskinfo_ : pb::IMessage<Taskinfo_>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Taskinfo_> _parser = new pb::MessageParser<Taskinfo_>(() => new Taskinfo_());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Taskinfo_> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::EventTask.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Taskinfo_() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Taskinfo_(Taskinfo_ other) : this() {
        type_ = other.type_;
        param1_ = other.param1_;
        param2_ = other.param2_;
        param3_ = other.param3_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Taskinfo_ Clone() {
        return new Taskinfo_(this);
      }

      /// <summary>Field number for the "Type" field.</summary>
      public const int TypeFieldNumber = 1;
      private int type_;
      /// <summary>
      /// Type
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Type {
        get { return type_; }
        set {
          type_ = value;
        }
      }

      /// <summary>Field number for the "Param1" field.</summary>
      public const int Param1FieldNumber = 2;
      private int param1_;
      /// <summary>
      /// Param1
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Param1 {
        get { return param1_; }
        set {
          param1_ = value;
        }
      }

      /// <summary>Field number for the "Param2" field.</summary>
      public const int Param2FieldNumber = 3;
      private int param2_;
      /// <summary>
      /// Param2
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Param2 {
        get { return param2_; }
        set {
          param2_ = value;
        }
      }

      /// <summary>Field number for the "Param3" field.</summary>
      public const int Param3FieldNumber = 4;
      private int param3_;
      /// <summary>
      /// Param3
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Param3 {
        get { return param3_; }
        set {
          param3_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Taskinfo_);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Taskinfo_ other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Type != other.Type) return false;
        if (Param1 != other.Param1) return false;
        if (Param2 != other.Param2) return false;
        if (Param3 != other.Param3) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Type != 0) hash ^= Type.GetHashCode();
        if (Param1 != 0) hash ^= Param1.GetHashCode();
        if (Param2 != 0) hash ^= Param2.GetHashCode();
        if (Param3 != 0) hash ^= Param3.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (Type != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Type);
        }
        if (Param1 != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(Param1);
        }
        if (Param2 != 0) {
          output.WriteRawTag(24);
          output.WriteInt32(Param2);
        }
        if (Param3 != 0) {
          output.WriteRawTag(32);
          output.WriteInt32(Param3);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (Type != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Type);
        }
        if (Param1 != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(Param1);
        }
        if (Param2 != 0) {
          output.WriteRawTag(24);
          output.WriteInt32(Param2);
        }
        if (Param3 != 0) {
          output.WriteRawTag(32);
          output.WriteInt32(Param3);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Type != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
        }
        if (Param1 != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param1);
        }
        if (Param2 != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param2);
        }
        if (Param3 != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param3);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Taskinfo_ other) {
        if (other == null) {
          return;
        }
        if (other.Type != 0) {
          Type = other.Type;
        }
        if (other.Param1 != 0) {
          Param1 = other.Param1;
        }
        if (other.Param2 != 0) {
          Param2 = other.Param2;
        }
        if (other.Param3 != 0) {
          Param3 = other.Param3;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Type = input.ReadInt32();
              break;
            }
            case 16: {
              Param1 = input.ReadInt32();
              break;
            }
            case 24: {
              Param2 = input.ReadInt32();
              break;
            }
            case 32: {
              Param3 = input.ReadInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Type = input.ReadInt32();
              break;
            }
            case 16: {
              Param1 = input.ReadInt32();
              break;
            }
            case 24: {
              Param2 = input.ReadInt32();
              break;
            }
            case 32: {
              Param3 = input.ReadInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class Reward_ : pb::IMessage<Reward_>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Reward_> _parser = new pb::MessageParser<Reward_>(() => new Reward_());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Reward_> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::EventTask.Descriptor.NestedTypes[2]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Reward_() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Reward_(Reward_ other) : this() {
        type_ = other.type_;
        id_ = other.id_;
        count_ = other.count_;
        param1_ = other.param1_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Reward_ Clone() {
        return new Reward_(this);
      }

      /// <summary>Field number for the "Type" field.</summary>
      public const int TypeFieldNumber = 1;
      private int type_;
      /// <summary>
      /// Type
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Type {
        get { return type_; }
        set {
          type_ = value;
        }
      }

      /// <summary>Field number for the "Id" field.</summary>
      public const int IdFieldNumber = 2;
      private int id_;
      /// <summary>
      /// Id
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Id {
        get { return id_; }
        set {
          id_ = value;
        }
      }

      /// <summary>Field number for the "Count" field.</summary>
      public const int CountFieldNumber = 3;
      private int count_;
      /// <summary>
      /// Count
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Count {
        get { return count_; }
        set {
          count_ = value;
        }
      }

      /// <summary>Field number for the "Param1" field.</summary>
      public const int Param1FieldNumber = 4;
      private int param1_;
      /// <summary>
      /// Param1
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Param1 {
        get { return param1_; }
        set {
          param1_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Reward_);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Reward_ other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Type != other.Type) return false;
        if (Id != other.Id) return false;
        if (Count != other.Count) return false;
        if (Param1 != other.Param1) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Type != 0) hash ^= Type.GetHashCode();
        if (Id != 0) hash ^= Id.GetHashCode();
        if (Count != 0) hash ^= Count.GetHashCode();
        if (Param1 != 0) hash ^= Param1.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (Type != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Type);
        }
        if (Id != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(Id);
        }
        if (Count != 0) {
          output.WriteRawTag(24);
          output.WriteInt32(Count);
        }
        if (Param1 != 0) {
          output.WriteRawTag(32);
          output.WriteInt32(Param1);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (Type != 0) {
          output.WriteRawTag(8);
          output.WriteInt32(Type);
        }
        if (Id != 0) {
          output.WriteRawTag(16);
          output.WriteInt32(Id);
        }
        if (Count != 0) {
          output.WriteRawTag(24);
          output.WriteInt32(Count);
        }
        if (Param1 != 0) {
          output.WriteRawTag(32);
          output.WriteInt32(Param1);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Type != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
        }
        if (Id != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
        }
        if (Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
        }
        if (Param1 != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param1);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Reward_ other) {
        if (other == null) {
          return;
        }
        if (other.Type != 0) {
          Type = other.Type;
        }
        if (other.Id != 0) {
          Id = other.Id;
        }
        if (other.Count != 0) {
          Count = other.Count;
        }
        if (other.Param1 != 0) {
          Param1 = other.Param1;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Type = input.ReadInt32();
              break;
            }
            case 16: {
              Id = input.ReadInt32();
              break;
            }
            case 24: {
              Count = input.ReadInt32();
              break;
            }
            case 32: {
              Param1 = input.ReadInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Type = input.ReadInt32();
              break;
            }
            case 16: {
              Id = input.ReadInt32();
              break;
            }
            case 24: {
              Count = input.ReadInt32();
              break;
            }
            case 32: {
              Param1 = input.ReadInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class EventTasklist : pb::IMessage<EventTasklist>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<EventTasklist> _parser = new pb::MessageParser<EventTasklist>(() => new EventTasklist());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EventTasklist> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EventTaskReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EventTasklist() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EventTasklist(EventTasklist other) : this() {
    eventTasks_ = other.eventTasks_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EventTasklist Clone() {
    return new EventTasklist(this);
  }

  /// <summary>Field number for the "EventTasks" field.</summary>
  public const int EventTasksFieldNumber = 1;
  private static readonly pb::FieldCodec<global::EventTask> _repeated_eventTasks_codec
      = pb::FieldCodec.ForMessage(10, global::EventTask.Parser);
  private readonly pbc::RepeatedField<global::EventTask> eventTasks_ = new pbc::RepeatedField<global::EventTask>();
  /// <summary>
  /// List
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::EventTask> EventTasks {
    get { return eventTasks_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EventTasklist);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EventTasklist other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!eventTasks_.Equals(other.eventTasks_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= eventTasks_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    eventTasks_.WriteTo(output, _repeated_eventTasks_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    eventTasks_.WriteTo(ref output, _repeated_eventTasks_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += eventTasks_.CalculateSize(_repeated_eventTasks_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EventTasklist other) {
    if (other == null) {
      return;
    }
    eventTasks_.Add(other.eventTasks_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          eventTasks_.AddEntriesFrom(input, _repeated_eventTasks_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          eventTasks_.AddEntriesFrom(ref input, _repeated_eventTasks_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
