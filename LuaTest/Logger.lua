---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lichenxi02.
--- DateTime: 2021/1/19 20:33
---
---@class Logger
--Logger = class("Logger")
Logger = {}
--
--Logger.LogTag = ""
--Logger.WarningTag = "Waring"
--Logger.ErrorTag = "Exception"
--Logger.DefaultColors = {}
--Logger.DefaultColors["white"] = "FFFFFF"
--Logger.DefaultColors["red"] = "FF0000"
--Logger.DefaultColors["green"] = "00FF00"
--Logger.DefaultColors["blue"] = "0000FF"
--Logger.DefaultColors["black"] = "000000"
--Logger.DefaultColors["yellow"] = "FFEB04"
--Logger.DefaultColors["cyan"] = "00FFFF"
--Logger.DefaultColors["magenta"] = "FF00FF"
--Logger.DefaultColors["gray"] = "808080"
--Logger.ColorEnabled = true
Logger.LogEnable = true


function Logger.LogInfo(...)
    if  not Logger.GetLogEnable() then
        return
    end
    Logger.DebugLog(Logger.ConvertParamsString(...))
end

function Logger.GetLogEnable()
    return Logger.LogEnable
end

---DebugLog
---@param pContent string
function Logger.DebugLog(pContent)
    print(pContent)
end

function Logger.DebugLogWarning(pContent)
    print(pContent)
end

function Logger.DebugLogError(pContent)
    print(pContent)
end
function Logger.ConvertParamsString(...)
    local t = {...}
    local msg = ''
    for k,v in pairs(t) do
        msg = msg .. Logger.ConvertString(v)..'\n'
    end
    return msg .. debug.traceback()
end
function Logger.ConvertString(t)
    return  Logger.GetContentInfo(t,1)
end

function Logger.GetContentInfo(t,level)
    local show = ''
    local temp = ''
    local space = string.rep(' ', (level-1)*4)
    local sapce4 = string.rep(' ', 4)
    if(type(t) == 'table') then
        --取得表名
        show = show .. tostring(t) .. ":\n{\n" .. space
        for k,v in pairs(t) do
            --递归显示table
            if type(v) == 'table' then
                temp = Logger.GetContentInfo(v, level+1)
            elseif(type(v) == 'string') then
                temp = '\"' .. tostring(v) .. '\"'
            else
                temp = tostring(v)
            end
            show = show .. sapce4 .. tostring(k) .. " = " .. temp .. ",\n" .. space
        end
        show = show .. "}"
    elseif type(t) == "userdata" then
        return "userdata"
    else
        return tostring(t)
    end
    return show
end


return Logger