-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: 

local flatbuffers = require('flatbuffers')

local PositionArray3d = {} -- the module
local PositionArray3d_mt = {} -- the class metatable

function PositionArray3d.New()
    local o = {}
    setmetatable(o, {__index = PositionArray3d_mt})
    return o
end
function PositionArray3d.GetRootAsPositionArray3d(buf, offset)
    if type(buf) == "string" then
        buf = flatbuffers.binaryArray.New(buf)
    end
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = PositionArray3d.New()
    o:Init(buf, n + offset)
    return o
end
function PositionArray3d_mt:Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end
function PositionArray3d_mt:Xs(j)
    local o = self.view:Offset(4)
    if o ~= 0 then
        local a = self.view:Vector(o)
        return self.view:Get(flatbuffers.N.Float32, a + ((j-1) * 4))
    end
    return 0
end
function PositionArray3d_mt:XsLength()
    local o = self.view:Offset(4)
    if o ~= 0 then
        return self.view:VectorLen(o)
    end
    return 0
end
function PositionArray3d_mt:Ys(j)
    local o = self.view:Offset(6)
    if o ~= 0 then
        local a = self.view:Vector(o)
        return self.view:Get(flatbuffers.N.Float32, a + ((j-1) * 4))
    end
    return 0
end
function PositionArray3d_mt:YsLength()
    local o = self.view:Offset(6)
    if o ~= 0 then
        return self.view:VectorLen(o)
    end
    return 0
end
function PositionArray3d_mt:Zs(j)
    local o = self.view:Offset(8)
    if o ~= 0 then
        local a = self.view:Vector(o)
        return self.view:Get(flatbuffers.N.Float32, a + ((j-1) * 4))
    end
    return 0
end
function PositionArray3d_mt:ZsLength()
    local o = self.view:Offset(8)
    if o ~= 0 then
        return self.view:VectorLen(o)
    end
    return 0
end
function PositionArray3d.Start(builder) builder:StartObject(3) end
function PositionArray3d.AddXs(builder, xs) builder:PrependUOffsetTRelativeSlot(0, xs, 0) end
function PositionArray3d.StartXsVector(builder, numElems) return builder:StartVector(4, numElems, 4) end
function PositionArray3d.AddYs(builder, ys) builder:PrependUOffsetTRelativeSlot(1, ys, 0) end
function PositionArray3d.StartYsVector(builder, numElems) return builder:StartVector(4, numElems, 4) end
function PositionArray3d.AddZs(builder, zs) builder:PrependUOffsetTRelativeSlot(2, zs, 0) end
function PositionArray3d.StartZsVector(builder, numElems) return builder:StartVector(4, numElems, 4) end
function PositionArray3d.End(builder) return builder:EndObject() end

return PositionArray3d -- return the module